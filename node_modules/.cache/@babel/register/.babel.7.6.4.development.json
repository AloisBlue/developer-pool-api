{
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _users = _interopRequireDefault(require(\"./routes/users\"));\n\nvar _questions = _interopRequireDefault(require(\"./routes/questions\"));\n\nvar _keys = _interopRequireDefault(require(\"../config/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar app = (0, _express[\"default\"])(); // manage middlewares\n\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nvar database = _keys[\"default\"].keys.DB_URL;\n\n_mongoose[\"default\"].connect(database, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n}).then(function () {\n  return console.log(\"Connected to \".concat(database));\n})[\"catch\"](function (err) {\n  return console.log(err);\n}); // register endpoints\n\n\napp.get(\"/\", function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname, \"index.html\"));\n});\napp.use(\"/api/users\", _users[\"default\"]);\napp.use(\"/api/questions\", _questions[\"default\"]);\nvar port = process.env.PORT || 8080;\nvar server = app.listen(port, function () {\n  return console.log(\"Server running on port \".concat(port));\n});\nvar _default = server;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiZGF0YWJhc2UiLCJkYXRhYmFzZUtleXMiLCJrZXlzIiwiREJfVVJMIiwibW9uZ29vc2UiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlQ3JlYXRlSW5kZXgiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImVyciIsImdldCIsInJlcSIsInJlcyIsInNlbmRGaWxlIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJ1c2VycyIsInF1ZXN0aW9ucyIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInNlcnZlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUdBOztBQUNBOztBQUNBOzs7O0FBVEE7QUFNQTtBQUtBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0UsVUFBWCxDQUF1QjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF2QixDQUFSO0FBRUEsSUFBTUMsUUFBUSxHQUFHQyxpQkFBYUMsSUFBYixDQUFrQkMsTUFBbkM7O0FBQ0FDLHFCQUNHQyxPQURILENBQ1dMLFFBRFgsRUFDcUI7QUFDakJNLEVBQUFBLGVBQWUsRUFBRSxJQURBO0FBRWpCQyxFQUFBQSxjQUFjLEVBQUUsSUFGQztBQUdqQkMsRUFBQUEsa0JBQWtCLEVBQUU7QUFISCxDQURyQixFQU1HQyxJQU5ILENBTVE7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsd0JBQTRCWCxRQUE1QixFQUFOO0FBQUEsQ0FOUixXQU9TLFVBQUFZLEdBQUc7QUFBQSxTQUFJRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsR0FBWixDQUFKO0FBQUEsQ0FQWixFLENBU0E7OztBQUNBbEIsR0FBRyxDQUFDbUIsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN6QkEsRUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWFDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsWUFBckIsQ0FBYjtBQUNELENBRkQ7QUFJQXpCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFlBQVIsRUFBc0J5QixpQkFBdEI7QUFDQTFCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGdCQUFSLEVBQTBCMEIscUJBQTFCO0FBRUEsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUVBLElBQU1DLE1BQU0sR0FBR2hDLEdBQUcsQ0FBQ2lDLE1BQUosQ0FBV0wsSUFBWCxFQUFpQjtBQUFBLFNBQU1aLE9BQU8sQ0FBQ0MsR0FBUixrQ0FBc0NXLElBQXRDLEVBQU47QUFBQSxDQUFqQixDQUFmO2VBRWVJLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlclBvb2wvYXBpIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0c1xuaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcbmltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcblxuLy8gbG9jYWwgaW1wb3J0c1xuaW1wb3J0IHVzZXJzIGZyb20gXCIuL3JvdXRlcy91c2Vyc1wiO1xuaW1wb3J0IHF1ZXN0aW9ucyBmcm9tIFwiLi9yb3V0ZXMvcXVlc3Rpb25zXCI7XG5pbXBvcnQgZGF0YWJhc2VLZXlzIGZyb20gXCIuLi9jb25maWcva2V5c1wiO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbi8vIG1hbmFnZSBtaWRkbGV3YXJlc1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCAoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xuXG5jb25zdCBkYXRhYmFzZSA9IGRhdGFiYXNlS2V5cy5rZXlzLkRCX1VSTDtcbm1vbmdvb3NlXG4gIC5jb25uZWN0KGRhdGFiYXNlLCB7XG4gICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgIHVzZUNyZWF0ZUluZGV4OiB0cnVlLFxuICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZVxuICB9KVxuICAudGhlbigoKSA9PiBjb25zb2xlLmxvZyhgQ29ubmVjdGVkIHRvICR7ZGF0YWJhc2V9YCkpXG4gIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcblxuLy8gcmVnaXN0ZXIgZW5kcG9pbnRzXG5hcHAuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUsIFwiaW5kZXguaHRtbFwiKSlcbn0pO1xuXG5hcHAudXNlKFwiL2FwaS91c2Vyc1wiLCB1c2Vycyk7XG5hcHAudXNlKFwiL2FwaS9xdWVzdGlvbnNcIiwgcXVlc3Rpb25zKTtcblxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgODA4MDtcblxuY29uc3Qgc2VydmVyID0gYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YCkpO1xuXG5leHBvcnQgZGVmYXVsdCBzZXJ2ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "database",
        "databaseKeys",
        "keys",
        "DB_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useCreateIndex",
        "useUnifiedTopology",
        "then",
        "console",
        "log",
        "err",
        "get",
        "req",
        "res",
        "sendFile",
        "path",
        "join",
        "__dirname",
        "users",
        "questions",
        "port",
        "process",
        "env",
        "PORT",
        "server",
        "listen"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;;;AATA;AAMA;AAKA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAWE,UAAX,CAAuB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAvB,CAAR;AAEA,IAAMC,QAAQ,GAAGC,iBAAaC,IAAb,CAAkBC,MAAnC;;AACAC,qBACGC,OADH,CACWL,QADX,EACqB;AACjBM,EAAAA,eAAe,EAAE,IADA;AAEjBC,EAAAA,cAAc,EAAE,IAFC;AAGjBC,EAAAA,kBAAkB,EAAE;AAHH,CADrB,EAMGC,IANH,CAMQ;AAAA,SAAMC,OAAO,CAACC,GAAR,wBAA4BX,QAA5B,EAAN;AAAA,CANR,WAOS,UAAAY,GAAG;AAAA,SAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,CAPZ,E,CASA;;;AACAlB,GAAG,CAACmB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,QAAJ,CAAaC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAb;AACD,CAFD;AAIAzB,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsByB,iBAAtB;AACA1B,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0B0B,qBAA1B;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA,IAAMC,MAAM,GAAGhC,GAAG,CAACiC,MAAJ,CAAWL,IAAX,EAAiB;AAAA,SAAMZ,OAAO,CAACC,GAAR,kCAAsCW,IAAtC,EAAN;AAAA,CAAjB,CAAf;eAEeI,M",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api",
      "sourcesContent": [
        "// imports\nimport express from \"express\";\nimport path from \"path\";\nimport bodyParser from \"body-parser\";\nimport mongoose from \"mongoose\";\n\n// local imports\nimport users from \"./routes/users\";\nimport questions from \"./routes/questions\";\nimport databaseKeys from \"../config/keys\";\n\nconst app = express();\n\n// manage middlewares\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded ({ extended: false }));\n\nconst database = databaseKeys.keys.DB_URL;\nmongoose\n  .connect(database, {\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useUnifiedTopology: true\n  })\n  .then(() => console.log(`Connected to ${database}`))\n  .catch(err => console.log(err))\n\n// register endpoints\napp.get(\"/\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"index.html\"))\n});\n\napp.use(\"/api/users\", users);\napp.use(\"/api/questions\", questions);\n\nconst port = process.env.PORT || 8080;\n\nconst server = app.listen(port, () => console.log(`Server running on port ${port}`));\n\nexport default server;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571904403779
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _gravatar = _interopRequireDefault(require(\"gravatar\"));\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nvar _auth = require(\"../validations/auth\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar router = _express[\"default\"].Router(); // @task: Signup\n// @Access: Public\n// @desc: Enable signup functionality\n\n\nrouter.post(\"/signup\", function (req, res) {\n  var _validateSignupInput = (0, _auth.validateSignupInput)(req.body.registerUser),\n      errors = _validateSignupInput.errors,\n      isValid = _validateSignupInput.isValid;\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  var _req$body$registerUse = req.body.registerUser,\n      firstName = _req$body$registerUse.firstName,\n      lastName = _req$body$registerUse.lastName,\n      userName = _req$body$registerUse.userName,\n      email = _req$body$registerUse.email,\n      password = _req$body$registerUse.password;\n\n  _User[\"default\"].findOne({\n    email: email\n  }).then(function (userFound) {\n    if (userFound) {\n      errors.global = \"Email already exists\";\n      return res.status(409).json({\n        status: '409',\n        errors: errors\n      });\n    }\n\n    var avatar = _gravatar[\"default\"].url(req.body.registerUser.email, {\n      s: '200',\n      r: 'pg',\n      d: 'mm'\n    });\n\n    var newUser = new _User[\"default\"]({\n      firstName: firstName,\n      lastName: lastName,\n      userName: userName,\n      email: email,\n      avatar: avatar,\n      password: password\n    }); // hash password function from the model. It saves\n    // and returns the newly added user or the error if any\n\n    newUser.hashPassword(newUser, res);\n  })[\"catch\"](function (err) {\n    res.json(err);\n  });\n}); // @task: Login\n// @Access: Public\n// @desc: Enable login functionality and generate token\n\nrouter.post(\"/login\", function (req, res) {\n  var _validateLoginInput = (0, _auth.validateLoginInput)(req.body.credentials),\n      isValid = _validateLoginInput.isValid,\n      errors = _validateLoginInput.errors;\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  var _req$body$credentials = req.body.credentials,\n      email = _req$body$credentials.email,\n      password = _req$body$credentials.password;\n\n  _User[\"default\"].findOne({\n    email: email\n  }).then(function (userFound) {\n    // check if user is registered\n    if (!userFound) {\n      errors.global = \"Failed to log in. Confirm email and password\";\n      return res.status(401).json({\n        status: '401',\n        errors: errors\n      });\n    } // continue and check password\n\n\n    userFound.comparePassword(password, userFound).then(function (match) {\n      if (!match) {\n        errors.global = \"Invalid credentials\";\n        return res.status(401).json({\n          status: '401',\n          errors: errors\n        });\n      } // generate authentification token\n\n\n      var token = userFound.generateAuthToken();\n      return res.status(200).json({\n        status: '200',\n        message: \"You have logged in as \".concat(email),\n        token: token,\n        user: {\n          email: userFound.email,\n          firstName: userFound.firstName,\n          lastName: userFound.lastName,\n          userName: userFound.userName,\n          avatar: userFound.avatar\n        }\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function (err) {\n    res.json(err);\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "req",
        "res",
        "body",
        "registerUser",
        "errors",
        "isValid",
        "status",
        "json",
        "firstName",
        "lastName",
        "userName",
        "email",
        "password",
        "User",
        "findOne",
        "then",
        "userFound",
        "global",
        "avatar",
        "gravatar",
        "url",
        "s",
        "r",
        "d",
        "newUser",
        "hashPassword",
        "err",
        "credentials",
        "comparePassword",
        "match",
        "token",
        "generateAuthToken",
        "message",
        "user"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes",
      "sourcesContent": [
        "// imports\nimport express from \"express\";\nimport gravatar from \"gravatar\";\n\n// local imports\nimport User from \"../models/User\";\nimport { validateSignupInput, validateLoginInput } from \"../validations/auth\"\n\nconst router = express.Router();\n\n\n// @task: Signup\n// @Access: Public\n// @desc: Enable signup functionality\nrouter.post(\"/signup\", (req, res) => {\n  const { errors, isValid } = validateSignupInput(req.body.registerUser);\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  const { firstName, lastName, userName, email, password  } = req.body.registerUser;\n\n  User\n  .findOne({ email })\n  .then(userFound => {\n    if (userFound) {\n      errors.global = \"Email already exists\"\n      return res.status(409).json({\n        status: '409',\n        errors\n      })\n    }\n\n    const avatar = gravatar.url(req.body.registerUser.email, {\n      s: '200',\n      r: 'pg',\n      d: 'mm'\n    });\n\n    const newUser = new User({\n      firstName,\n      lastName,\n      userName,\n      email,\n      avatar,\n      password\n    });\n\n    // hash password function from the model. It saves\n    // and returns the newly added user or the error if any\n    newUser.hashPassword(newUser, res);\n  })\n  .catch(err => {\n    res.json(err)\n  })\n});\n\n// @task: Login\n// @Access: Public\n// @desc: Enable login functionality and generate token\nrouter.post(\"/login\", (req, res) => {\n  const { isValid, errors } = validateLoginInput(req.body.credentials);\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  const { email, password } = req.body.credentials;\n  User\n    .findOne({ email })\n    .then(userFound => {\n      // check if user is registered\n      if (!userFound) {\n        errors.global = \"Failed to log in. Confirm email and password\";\n        return res.status(401).json({\n          status: '401',\n          errors\n        });\n      }\n      // continue and check password\n      userFound.comparePassword(password, userFound)\n        .then(match => {\n          if (!match) {\n            errors.global = \"Invalid credentials\";\n            return res.status(401).json({\n              status: '401',\n              errors\n            });\n          }\n\n          // generate authentification token\n          const token = userFound.generateAuthToken();\n          return res.status(200).json({\n            status: '200',\n            message: `You have logged in as ${email}`,\n            token,\n            user: {\n                email: userFound.email,\n                firstName: userFound.firstName,\n                lastName: userFound.lastName,\n                userName: userFound.userName,\n                avatar: userFound.avatar\n              }\n          });\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(err => {\n      res.json(err)\n    });\n});\n\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571904740323
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/config/keys.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/config/keys.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/config/keys.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/config/keys.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/config",
        "sourceFileName": "keys.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// configure dotenv\n_dotenv[\"default\"].config(); // set necessary keys\n\n\nvar devkey = {\n  DB_URL: process.env.DEV_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\nvar prodKey = {\n  DB_URL: process.env.DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\nvar testKey = {\n  DB_URL: process.env.TEST_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\nvar exportKeys = {};\n\nif (process.env.NODE_ENV === 'production') {\n  exportKeys.keys = prodKey;\n} else if (process.env.NODE_ENV === 'testing') {\n  exportKeys.keys = testKey;\n} else {\n  exportKeys.keys = devkey;\n}\n\nvar _default = exportKeys;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtleXMuanMiXSwibmFtZXMiOlsiZG90ZW52IiwiY29uZmlnIiwiZGV2a2V5IiwiREJfVVJMIiwicHJvY2VzcyIsImVudiIsIkRFVl9EQl9VUkwiLCJTRUNSRVRfS0VZIiwicHJvZEtleSIsInRlc3RLZXkiLCJURVNUX0RCX1VSTCIsImV4cG9ydEtleXMiLCJOT0RFX0VOViIsImtleXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7OztBQURBO0FBR0E7QUFDQUEsbUJBQU9DLE1BQVAsRyxDQUVBOzs7QUFDQSxJQUFNQyxNQUFNLEdBQUc7QUFDYkMsRUFBQUEsTUFBTSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFEUDtBQUViQyxFQUFBQSxVQUFVLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRTtBQUZYLENBQWY7QUFLQSxJQUFNQyxPQUFPLEdBQUc7QUFDZEwsRUFBQUEsTUFBTSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsTUFETjtBQUVkSSxFQUFBQSxVQUFVLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRTtBQUZWLENBQWhCO0FBS0EsSUFBTUUsT0FBTyxHQUFHO0FBQ2ROLEVBQUFBLE1BQU0sRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlLLFdBRE47QUFFZEgsRUFBQUEsVUFBVSxFQUFFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUU7QUFGVixDQUFoQjtBQUtBLElBQU1JLFVBQVUsR0FBRyxFQUFuQjs7QUFFQSxJQUFJUCxPQUFPLENBQUNDLEdBQVIsQ0FBWU8sUUFBWixLQUF5QixZQUE3QixFQUEyQztBQUN6Q0QsRUFBQUEsVUFBVSxDQUFDRSxJQUFYLEdBQWtCTCxPQUFsQjtBQUNELENBRkQsTUFFTyxJQUFJSixPQUFPLENBQUNDLEdBQVIsQ0FBWU8sUUFBWixLQUF5QixTQUE3QixFQUF3QztBQUM3Q0QsRUFBQUEsVUFBVSxDQUFDRSxJQUFYLEdBQWtCSixPQUFsQjtBQUNELENBRk0sTUFFQTtBQUNMRSxFQUFBQSxVQUFVLENBQUNFLElBQVgsR0FBa0JYLE1BQWxCO0FBQ0Q7O2VBRWNTLFUiLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlclBvb2wvY29uZmlnIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0c1xuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5cbi8vIGNvbmZpZ3VyZSBkb3RlbnZcbmRvdGVudi5jb25maWcoKTtcblxuLy8gc2V0IG5lY2Vzc2FyeSBrZXlzXG5jb25zdCBkZXZrZXkgPSB7XG4gIERCX1VSTDogcHJvY2Vzcy5lbnYuREVWX0RCX1VSTCxcbiAgU0VDUkVUX0tFWTogcHJvY2Vzcy5lbnYuU0VDUkVUX0tFWVxufTtcblxuY29uc3QgcHJvZEtleSA9IHtcbiAgREJfVVJMOiBwcm9jZXNzLmVudi5EQl9VUkwsXG4gIFNFQ1JFVF9LRVk6IHByb2Nlc3MuZW52LlNFQ1JFVF9LRVlcbn07XG5cbmNvbnN0IHRlc3RLZXkgPSB7XG4gIERCX1VSTDogcHJvY2Vzcy5lbnYuVEVTVF9EQl9VUkwsXG4gIFNFQ1JFVF9LRVk6IHByb2Nlc3MuZW52LlNFQ1JFVF9LRVlcbn07XG5cbmNvbnN0IGV4cG9ydEtleXMgPSB7fVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBleHBvcnRLZXlzLmtleXMgPSBwcm9kS2V5O1xufSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3RpbmcnKSB7XG4gIGV4cG9ydEtleXMua2V5cyA9IHRlc3RLZXk7XG59IGVsc2Uge1xuICBleHBvcnRLZXlzLmtleXMgPSBkZXZrZXk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGV4cG9ydEtleXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "keys.js"
      ],
      "names": [
        "dotenv",
        "config",
        "devkey",
        "DB_URL",
        "process",
        "env",
        "DEV_DB_URL",
        "SECRET_KEY",
        "prodKey",
        "testKey",
        "TEST_DB_URL",
        "exportKeys",
        "NODE_ENV",
        "keys"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;AAGA;AACAA,mBAAOC,MAAP,G,CAEA;;;AACA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADP;AAEbC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYE;AAFX,CAAf;AAKA,IAAMC,OAAO,GAAG;AACdL,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYF,MADN;AAEdI,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYE;AAFV,CAAhB;AAKA,IAAME,OAAO,GAAG;AACdN,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYK,WADN;AAEdH,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYE;AAFV,CAAhB;AAKA,IAAMI,UAAU,GAAG,EAAnB;;AAEA,IAAIP,OAAO,CAACC,GAAR,CAAYO,QAAZ,KAAyB,YAA7B,EAA2C;AACzCD,EAAAA,UAAU,CAACE,IAAX,GAAkBL,OAAlB;AACD,CAFD,MAEO,IAAIJ,OAAO,CAACC,GAAR,CAAYO,QAAZ,KAAyB,SAA7B,EAAwC;AAC7CD,EAAAA,UAAU,CAACE,IAAX,GAAkBJ,OAAlB;AACD,CAFM,MAEA;AACLE,EAAAA,UAAU,CAACE,IAAX,GAAkBX,MAAlB;AACD;;eAEcS,U",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/config",
      "sourcesContent": [
        "// imports\nimport dotenv from \"dotenv\";\n\n// configure dotenv\ndotenv.config();\n\n// set necessary keys\nconst devkey = {\n  DB_URL: process.env.DEV_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\n\nconst prodKey = {\n  DB_URL: process.env.DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\n\nconst testKey = {\n  DB_URL: process.env.TEST_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\n\nconst exportKeys = {}\n\nif (process.env.NODE_ENV === 'production') {\n  exportKeys.keys = prodKey;\n} else if (process.env.NODE_ENV === 'testing') {\n  exportKeys.keys = testKey;\n} else {\n  exportKeys.keys = devkey;\n}\n\nexport default exportKeys;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571509191726
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models/User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models/User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models/User.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _keys = _interopRequireDefault(require(\"../../config/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar Schema = _mongoose[\"default\"].Schema;\nvar userSchema = new Schema({\n  firstName: {\n    type: String,\n    required: true\n  },\n  lastName: {\n    type: String,\n    required: true\n  },\n  userName: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    index: true\n  },\n  avatar: {\n    type: String\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  confirmed: {\n    type: Boolean,\n    \"default\": false\n  },\n  isAdmin: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true\n});\n\nuserSchema.methods.hashPassword = function hashPassword(newUser, res) {\n  var _this = this;\n\n  var password = newUser.password;\n  var errors = {};\n\n  _bcryptjs[\"default\"].genSalt(10, function (err, salt) {\n    if (err) {\n      throw err;\n    }\n\n    _bcryptjs[\"default\"].hash(password, salt, function (error, hash) {\n      if (error) {\n        throw error;\n      }\n\n      _this.password = hash;\n      newUser.save().then(function (user) {\n        res.json(user);\n      })[\"catch\"](function () {\n        errors.userName = \"User name already taken\";\n        return res.status(409).json({\n          status: '409',\n          errors: errors\n        });\n      });\n    });\n  });\n};\n\nuserSchema.methods.comparePassword = function comparePassword(password, userFound) {\n  var match = _bcryptjs[\"default\"].compare(password, userFound.password).then(function (isMatch) {\n    if (!isMatch) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return match;\n};\n\nuserSchema.methods.generateAuthToken = function generateAuthToken() {\n  var token = _jsonwebtoken[\"default\"].sign({\n    _id: this._id,\n    email: this.email,\n    password: this.password,\n    isAdmin: this.isAdmin\n  }, _keys[\"default\"].keys.SECRET_KEY, {\n    expiresIn: 3600\n  });\n\n  return token;\n};\n\nvar _default = _mongoose[\"default\"].model('User', userSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJ1c2VyU2NoZW1hIiwiZmlyc3ROYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibGFzdE5hbWUiLCJ1c2VyTmFtZSIsInVuaXF1ZSIsImVtYWlsIiwibG93ZXJjYXNlIiwiaW5kZXgiLCJhdmF0YXIiLCJwYXNzd29yZCIsImNvbmZpcm1lZCIsIkJvb2xlYW4iLCJpc0FkbWluIiwidGltZXN0YW1wcyIsIm1ldGhvZHMiLCJoYXNoUGFzc3dvcmQiLCJuZXdVc2VyIiwicmVzIiwiZXJyb3JzIiwiYmNyeXB0IiwiZ2VuU2FsdCIsImVyciIsInNhbHQiLCJoYXNoIiwiZXJyb3IiLCJzYXZlIiwidGhlbiIsInVzZXIiLCJqc29uIiwic3RhdHVzIiwiY29tcGFyZVBhc3N3b3JkIiwidXNlckZvdW5kIiwibWF0Y2giLCJjb21wYXJlIiwiaXNNYXRjaCIsImdlbmVyYXRlQXV0aFRva2VuIiwidG9rZW4iLCJqd3QiLCJzaWduIiwiX2lkIiwiZGF0YWJhc2VLZXlzIiwia2V5cyIsIlNFQ1JFVF9LRVkiLCJleHBpcmVzSW4iLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUdBOzs7O0FBTkE7QUFLQTtJQUdRQSxNLEdBQVdDLG9CLENBQVhELE07QUFFUixJQUFNRSxVQUFVLEdBQUcsSUFBSUYsTUFBSixDQUFXO0FBQzVCRyxFQUFBQSxTQUFTLEVBQUU7QUFDVEMsSUFBQUEsSUFBSSxFQUFFQyxNQURHO0FBRVRDLElBQUFBLFFBQVEsRUFBRTtBQUZELEdBRGlCO0FBSzVCQyxFQUFBQSxRQUFRLEVBQUU7QUFDUkgsSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJDLElBQUFBLFFBQVEsRUFBRTtBQUZGLEdBTGtCO0FBUzVCRSxFQUFBQSxRQUFRLEVBQUU7QUFDUkosSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJDLElBQUFBLFFBQVEsRUFBRSxJQUZGO0FB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QUtBLFFBSE07QUFJckJHLElBQUFBLE9BQU8sRUFBRSxLQUFLQTtBQUpPLEdBQVQsRUFNWjRCLGlCQUFhQyxJQUFiLENBQWtCQyxVQU5OLEVBT1o7QUFBRUMsSUFBQUEsU0FBUyxFQUFFO0FBQWIsR0FQWSxDQUFkOztBQVNBLFNBQU9QLEtBQVA7QUFDRCxDQVhEOztlQWFleEMscUJBQVNnRCxLQUFULENBQWUsTUFBZixFQUF1Qi9DLFVBQXZCLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlclBvb2wvYXBpL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydHNcbmltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcbmltcG9ydCBiY3J5cHQgZnJvbSBcImJjcnlwdGpzXCI7XG5pbXBvcnQgand0IGZyb20gXCJqc29ud2VidG9rZW5cIjtcblxuLy8gbG9jYWwgaW1wb3J0c1xuaW1wb3J0IGRhdGFiYXNlS2V5cyBmcm9tIFwiLi4vLi4vY29uZmlnL2tleXNcIjtcblxuY29uc3QgeyBTY2hlbWEgfSA9IG1vbmdvb3NlO1xuXG5jb25zdCB1c2VyU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIGZpcnN0TmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBsYXN0TmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICB1c2VyTmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB1bmlxdWU6IHRydWVcbiAgfSxcbiAgZW1haWw6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIGxvd2VyY2FzZTogdHJ1ZSxcbiAgICBpbmRleDogdHJ1ZVxuICB9LFxuICBhdmF0YXI6IHtcbiAgICB0eXBlOiBTdHJpbmdcbiAgfSxcbiAgcGFzc3dvcmQ6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgY29uZmlybWVkOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9LFxuICBpc0FkbWluOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9XG59LFxue1xuICB0aW1lc3RhbXBzOiB0cnVlXG59KTtcblxudXNlclNjaGVtYS5tZXRob2RzLmhhc2hQYXNzd29yZCA9IGZ1bmN0aW9uIGhhc2hQYXNzd29yZChuZXdVc2VyLCByZXMpIHtcbiAgY29uc3QgeyBwYXNzd29yZCB9ID0gbmV3VXNlcjtcbiAgY29uc3QgZXJyb3JzID0ge307XG4gIGJjcnlwdC5nZW5TYWx0KDEwLCAoZXJyLCBzYWx0KSA9PiB7XG4gICAgaWYgKGVycikge1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgICBiY3J5cHQuaGFzaChwYXNzd29yZCwgc2FsdCwgKGVycm9yLCBoYXNoKSA9PiB7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9XG4gICAgICB0aGlzLnBhc3N3b3JkID0gaGFzaDtcbiAgICAgIG5ld1VzZXIuc2F2ZSgpXG4gICAgICAgIC50aGVuKHVzZXIgPT4ge1xuICAgICAgICAgIHJlcy5qc29uKHVzZXIpXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgZXJyb3JzLnVzZXJOYW1lID0gXCJVc2VyIG5hbWUgYWxyZWFkeSB0YWtlblwiO1xuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwOSkuanNvbih7XG4gICAgICAgICAgICBzdGF0dXM6ICc0MDknLFxuICAgICAgICAgICAgZXJyb3JzXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcbn1cblxudXNlclNjaGVtYS5tZXRob2RzLmNvbXBhcmVQYXNzd29yZCA9IGZ1bmN0aW9uIGNvbXBhcmVQYXNzd29yZChwYXNzd29yZCwgdXNlckZvdW5kKSB7XG4gIGNvbnN0IG1hdGNoID0gYmNyeXB0XG4gICAgLmNvbXBhcmUocGFzc3dvcmQsIHVzZXJGb3VuZC5wYXNzd29yZClcbiAgICAudGhlbihpc01hdGNoID0+IHtcbiAgICAgIGlmICghaXNNYXRjaCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gbWF0Y2g7XG59O1xuXG51c2VyU2NoZW1hLm1ldGhvZHMuZ2VuZXJhdGVBdXRoVG9rZW4gPSBmdW5jdGlvbiBnZW5lcmF0ZUF1dGhUb2tlbigpIHtcbiAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbih7XG4gICAgX2lkOiB0aGlzLl9pZCxcbiAgICBlbWFpbDogdGhpcy5lbWFpbCxcbiAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZCxcbiAgICBpc0FkbWluOiB0aGlzLmlzQWRtaW5cbiAgfSxcbiAgICBkYXRhYmFzZUtleXMua2V5cy5TRUNSRVRfS0VZLFxuICAgIHsgZXhwaXJlc0luOiAzNjAwIH1cbik7XG4gIHJldHVybiB0b2tlbjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdVc2VyJywgdXNlclNjaGVtYSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "userSchema",
        "firstName",
        "type",
        "String",
        "required",
        "lastName",
        "userName",
        "unique",
        "email",
        "lowercase",
        "index",
        "avatar",
        "password",
        "confirmed",
        "Boolean",
        "isAdmin",
        "timestamps",
        "methods",
        "hashPassword",
        "newUser",
        "res",
        "errors",
        "bcrypt",
        "genSalt",
        "err",
        "salt",
        "hash",
        "error",
        "save",
        "then",
        "user",
        "json",
        "status",
        "comparePassword",
        "userFound",
        "match",
        "compare",
        "isMatch",
        "generateAuthToken",
        "token",
        "jwt",
        "sign",
        "_id",
        "databaseKeys",
        "keys",
        "SECRET_KEY",
        "expiresIn",
        "model"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models",
      "sourcesContent": [
        "// imports\nimport mongoose from \"mongoose\";\nimport bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\n\n// local imports\nimport databaseKeys from \"../../config/keys\";\n\nconst { Schema } = mongoose;\n\nconst userSchema = new Schema({\n  firstName: {\n    type: String,\n    required: true\n  },\n  lastName: {\n    type: String,\n    required: true\n  },\n  userName: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    index: true\n  },\n  avatar: {\n    type: String\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  confirmed: {\n    type: Boolean,\n    default: false\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false\n  }\n},\n{\n  timestamps: true\n});\n\nuserSchema.methods.hashPassword = function hashPassword(newUser, res) {\n  const { password } = newUser;\n  const errors = {};\n  bcrypt.genSalt(10, (err, salt) => {\n    if (err) {\n      throw err;\n    }\n    bcrypt.hash(password, salt, (error, hash) => {\n      if (error) {\n        throw error;\n      }\n      this.password = hash;\n      newUser.save()\n        .then(user => {\n          res.json(user)\n        })\n        .catch(() => {\n          errors.userName = \"User name already taken\";\n          return res.status(409).json({\n            status: '409',\n            errors\n          });\n        });\n    });\n  });\n}\n\nuserSchema.methods.comparePassword = function comparePassword(password, userFound) {\n  const match = bcrypt\n    .compare(password, userFound.password)\n    .then(isMatch => {\n      if (!isMatch) {\n        return false;\n      }\n      return true;\n    });\n    return match;\n};\n\nuserSchema.methods.generateAuthToken = function generateAuthToken() {\n  const token = jwt.sign({\n    _id: this._id,\n    email: this.email,\n    password: this.password,\n    isAdmin: this.isAdmin\n  },\n    databaseKeys.keys.SECRET_KEY,\n    { expiresIn: 3600 }\n);\n  return token;\n};\n\nexport default mongoose.model('User', userSchema);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571843250389
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateLoginInput = exports.validateSignupInput = void 0;\n\nvar _validator = _interopRequireDefault(require(\"validator\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"./isEmpty\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar validateSignupInput = function validateSignupInput(data) {\n  var errors = {};\n  data.firstName = !(0, _isEmpty[\"default\"])(data.firstName) ? data.firstName : '', data.lastName = !(0, _isEmpty[\"default\"])(data.lastName) ? data.lastName : '', data.userName = !(0, _isEmpty[\"default\"])(data.userName) ? data.userName : '', data.email = !(0, _isEmpty[\"default\"])(data.email) ? data.email : '', data.password = !(0, _isEmpty[\"default\"])(data.password) ? data.password : '', data.confirmPassword = !(0, _isEmpty[\"default\"])(data.confirmPassword) ? data.confirmPassword : '';\n\n  if (!_validator[\"default\"].isLength(data.firstName, {\n    min: 1,\n    max: 20\n  })) {\n    errors.firstName = 'First name must be between 1 and 20 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.firstName)) {\n    errors.firstName = 'First name field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.lastName, {\n    min: 1,\n    max: 20\n  })) {\n    errors.lastName = 'Last name must be between 1 and 20 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.lastName)) {\n    errors.lastName = 'Last name field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.userName, {\n    min: 1,\n    max: 20\n  })) {\n    errors.userName = 'User name must be between 1 and 20 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.userName)) {\n    errors.userName = 'User name field is required';\n  }\n\n  if (!_validator[\"default\"].isEmail(data.email)) {\n    errors.email = 'Email is invalid';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.email)) {\n    errors.email = 'Email field is required';\n  }\n\n  if (!data.password.match('^(?=.{8,}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[@#$%&^+=!]).*')) {\n    errors.password = 'A good password should contain uppercase, lowercase, special characters @#$%&^+=! , digits and above 8 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  if (data.password !== data.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match!!!';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.confirmPassword)) {\n    errors.confirmPassword = 'Confirm password field is required';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateSignupInput = validateSignupInput;\n\nvar validateLoginInput = function validateLoginInput(data) {\n  var errors = {};\n  data.email = !(0, _isEmpty[\"default\"])(data.email) ? data.email : '', data.password = !(0, _isEmpty[\"default\"])(data.password) ? data.password : '';\n\n  if (!_validator[\"default\"].isEmail(data.email)) {\n    errors.email = 'Email is invalid';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.email)) {\n    errors.email = 'Email field is required';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateLoginInput = validateLoginInput;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "validateSignupInput",
        "data",
        "errors",
        "firstName",
        "lastName",
        "userName",
        "email",
        "password",
        "confirmPassword",
        "Validator",
        "isLength",
        "min",
        "max",
        "isEmpty",
        "isEmail",
        "match",
        "isValid",
        "validateLoginInput"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations",
      "sourcesContent": [
        "import Validator from \"validator\";\n\nimport isEmpty from \"./isEmpty\";\n\nconst validateSignupInput = data => {\n\n  const errors = {};\n\n  data.firstName = !isEmpty(data.firstName) ? data.firstName : '',\n  data.lastName = !isEmpty(data.lastName) ? data.lastName : '',\n  data.userName = !isEmpty(data.userName) ? data.userName : '',\n  data.email = !isEmpty(data.email) ? data.email : '',\n  data.password = !isEmpty(data.password) ? data.password : '',\n  data.confirmPassword = !isEmpty(data.confirmPassword) ? data.confirmPassword : '';\n\n  if (!Validator.isLength(data.firstName, { min: 1, max: 20 })) {\n    errors.firstName = 'First name must be between 1 and 20 characters';\n  }\n\n  if (Validator.isEmpty(data.firstName)) {\n    errors.firstName = 'First name field is required';\n  }\n\n  if (!Validator.isLength(data.lastName, { min: 1, max: 20 })) {\n    errors.lastName = 'Last name must be between 1 and 20 characters';\n  }\n\n  if (Validator.isEmpty(data.lastName)) {\n    errors.lastName = 'Last name field is required';\n  }\n\n  if (!Validator.isLength(data.userName, { min: 1, max: 20 })) {\n    errors.userName = 'User name must be between 1 and 20 characters';\n  }\n\n  if (Validator.isEmpty(data.userName)) {\n    errors.userName = 'User name field is required';\n  }\n\n  if (!Validator.isEmail(data.email)) {\n    errors.email = 'Email is invalid'\n  }\n\n  if (Validator.isEmpty(data.email)) {\n    errors.email = 'Email field is required'\n  }\n\n  if (!data.password.match('^(?=.{8,}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[@#$%&^+=!]).*')) {\n    errors.password = 'A good password should contain uppercase, lowercase, special characters @#$%&^+=! , digits and above 8 characters'\n  }\n\n  if (Validator.isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  if (data.password !== data.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match!!!';\n  }\n\n  if (Validator.isEmpty(data.confirmPassword)) {\n    errors.confirmPassword = 'Confirm password field is required'\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\nconst validateLoginInput = data => {\n\n  const errors = {};\n\n  data.email = !isEmpty(data.email) ? data.email : '',\n  data.password = !isEmpty(data.password) ? data.password : '';\n\n  if (!Validator.isEmail(data.email)) {\n    errors.email = 'Email is invalid';\n  }\n\n  if (Validator.isEmpty(data.email)) {\n    errors.email = 'Email field is required';\n  }\n\n  if (Validator.isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n\n};\n\nexport {\n  validateSignupInput,\n  validateLoginInput\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571907224519
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/isEmpty.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/isEmpty.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/isEmpty.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/isEmpty.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations",
        "sourceFileName": "isEmpty.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar isEmpty = function isEmpty(value) {\n  return value === undefined || value === null || _typeof(value) === 'object' && Object.keys(value).length === 0 || typeof value === 'string' && value.trim().length === 0;\n};\n\nvar _default = isEmpty;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzRW1wdHkuanMiXSwibmFtZXMiOlsiaXNFbXB0eSIsInZhbHVlIiwidW5kZWZpbmVkIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInRyaW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQU1BLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUFDLEtBQUs7QUFBQSxTQUNuQkEsS0FBSyxLQUFLQyxTQUFWLElBQ0FELEtBQUssS0FBSyxJQURWLElBRUMsUUFBT0EsS0FBUCxNQUFpQixRQUFqQixJQUE2QkUsTUFBTSxDQUFDQyxJQUFQLENBQVlILEtBQVosRUFBbUJJLE1BQW5CLEtBQThCLENBRjVELElBR0MsT0FBT0osS0FBUCxLQUFpQixRQUFqQixJQUE2QkEsS0FBSyxDQUFDSyxJQUFOLEdBQWFELE1BQWIsS0FBd0IsQ0FKbkM7QUFBQSxDQUFyQjs7ZUFNZUwsTyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ibHVlL0Rlc2t0b3AvUHJvZ3JhbW1pbmcvSmF2YXNjcmlwdC9EZXZlbG9wZXIvZGV2ZWxvcGVyUG9vbC9hcGkvdmFsaWRhdGlvbnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpc0VtcHR5ID0gdmFsdWUgPT5cbiAgdmFsdWUgPT09IHVuZGVmaW5lZCB8fFxuICB2YWx1ZSA9PT0gbnVsbCB8fFxuICAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiBPYmplY3Qua2V5cyh2YWx1ZSkubGVuZ3RoID09PSAwKSB8fFxuICAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS50cmltKCkubGVuZ3RoID09PSAwKVxuXG5leHBvcnQgZGVmYXVsdCBpc0VtcHR5O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "isEmpty.js"
      ],
      "names": [
        "isEmpty",
        "value",
        "undefined",
        "Object",
        "keys",
        "length",
        "trim"
      ],
      "mappings": ";;;;;;;;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnBA,KAAK,KAAKC,SAAV,IACAD,KAAK,KAAK,IADV,IAEC,QAAOA,KAAP,MAAiB,QAAjB,IAA6BE,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MAAnB,KAA8B,CAF5D,IAGC,OAAOJ,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACK,IAAN,GAAaD,MAAb,KAAwB,CAJnC;AAAA,CAArB;;eAMeL,O",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations",
      "sourcesContent": [
        "const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0)\n\nexport default isEmpty;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571378142870
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes/questions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes/questions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes/questions.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes/questions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes",
        "sourceFileName": "questions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _auth = _interopRequireDefault(require(\"../middlewares/auth\"));\n\nvar _Question = _interopRequireDefault(require(\"../models/Question\"));\n\nvar _questionInput = require(\"../validations/questionInput\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar router = _express[\"default\"].Router(); // @task: Post a question\n// @Access: Private(User)\n// @desc: Enable logged in users to ask questions\n\n\nrouter.post(\"/question\", _auth[\"default\"], function (req, res) {\n  var _validateQuestionInpu = (0, _questionInput.validateQuestionInput)(req.body.addQuestion),\n      errors = _validateQuestionInpu.errors,\n      isValid = _validateQuestionInpu.isValid;\n\n  if (!isValid) {\n    res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  var question = req.body.addQuestion.question;\n\n  _Question[\"default\"].findOne({\n    question: question\n  }).then(function (questionFound) {\n    if (questionFound) {\n      // abort the process and give relevant response\n      return res.status(409).json({\n        status: '409',\n        questionExists: 'question already asked',\n        request: {\n          type: 'GET',\n          url: \"http://127.0.0.1:8080/api/questions/\".concat(questionFound._id)\n        }\n      });\n    }\n\n    var newQuestion = new _Question[\"default\"]({\n      user: req.user._id,\n      question: question\n    }); // save to database\n\n    newQuestion.save().then(function (savedQuestion) {\n      res.status(201).json({\n        status: '201',\n        savedQuestion: {\n          _id: savedQuestion._id,\n          question: savedQuestion.question,\n          user: {\n            _id: savedQuestion.user._id\n          }\n        }\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n}); // @task: Get all question\n// @Access: Public\n// @desc: Enable anyone to view the questions\n\nrouter.get(\"/questions\", function (req, res) {\n  _Question[\"default\"].find().select('_id question user').populate('user', ['userName']).then(function (questionsFound) {\n    if (questionsFound.length === 0) {\n      return res.json({\n        status: '404',\n        errors: {\n          notFound: 'There are no questions available'\n        }\n      });\n    } // continue\n\n\n    return res.json({\n      status: '200',\n      message: 'Question(s) listed below',\n      count: questionsFound.length,\n      questionsFound: questionsFound\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n}); // @task: Get a question by id\n// @Access: Private\n// @desc: Enable logged in user to view the question by id\n\nrouter.get(\"/:question_id\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).select('_id question answers user').populate('user', ['userName']).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    }\n\n    res.status(200).json({\n      status: '200',\n      questionFound: questionFound\n    });\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Edit (PUT) a question if there are no answers\n// @Access: Private(User)\n// @desc: Enable question owner to edit, should be logged in\n\nrouter.put(\"/:question_id\", _auth[\"default\"], function (req, res) {\n  var params = req.params.question_id;\n  var updateQuestion = req.body.putQuestion;\n  var question = updateQuestion.question;\n\n  var _validateQuestionInpu2 = (0, _questionInput.validateQuestionInput)(updateQuestion),\n      errors = _validateQuestionInpu2.errors,\n      isValid = _validateQuestionInpu2.isValid; // validate question update field input\n\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  _Question[\"default\"].findOne({\n    _id: params\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // check to confirm the update is granted to the user who asked the question\n\n\n    if (questionFound.user.toString() !== req.user._id) {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          noAuth: 'You don/t have that permission to edit the question'\n        }\n      });\n    } // check if question already has answers\n    // ensure no updates if the question already has answers\n\n\n    if (questionFound.answers.length !== 0) {\n      return res.status(400).json({\n        status: '400',\n        errors: {\n          answerFound: 'The question cannot be edited since it already has answers'\n        }\n      });\n    } // check for changes in question\n    // ensure no updates if no changes detected\n\n\n    if (questionFound.question === question) {\n      return res.status(409).json({\n        status: '409',\n        errors: {\n          noChange: 'No changes in question detected'\n        }\n      });\n    }\n\n    _Question[\"default\"].findOneAndUpdate({\n      _id: params\n    }, updateQuestion, {\n      \"new\": true\n    }).select('_id question answers user').then(function (updatedQuestion) {\n      res.status(200).json({\n        status: '200',\n        message: 'Question successfully updated',\n        updatedQuestion: updatedQuestion\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Delete a question by id\n// @Access: Private(Admin, User)\n// @desc: Enable question owner and admin to delete question\n\nrouter[\"delete\"](\"/:question_id\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    // check if question exists\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id is either deleted or does not exists'\n        }\n      });\n    } // check owner\n\n\n    if (questionFound.user.toString() === req.user._id || req.user.isAdmin === true) {\n      questionFound.remove().then(function () {\n        return res.status(200).json({\n          status: '200',\n          message: 'Question deleted'\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n    } else {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          noAuth: 'You don/t have that permission to delete the question'\n        }\n      });\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id is either deleted or does not exists'\n      }\n    });\n  });\n}); // @task: Answer a question\n// @Access: Private(Users)\n// @desc: Enable users to answers a question\n\nrouter.post(\"/:question_id/answer\", _auth[\"default\"], function (req, res) {\n  var addAnswer = req.body.addAnswer;\n  var answer = addAnswer.answer;\n\n  var _validateAnswerInput = (0, _questionInput.validateAnswerInput)(addAnswer),\n      errors = _validateAnswerInput.errors,\n      isValid = _validateAnswerInput.isValid; // check for empty fields\n\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // get user id and question id\n\n\n    var user = req.user._id;\n    var question = questionFound._id; // set answer\n\n    var newAnswer = {\n      answer: answer,\n      user: user,\n      question: question\n    }; // add the answer\n\n    questionFound.answers.unshift(newAnswer); // save the answer\n\n    questionFound.save().then(function (answered) {\n      return res.status(201).json({\n        status: '201',\n        _id: answered._id,\n        user: answered.user,\n        question: answered.question,\n        answers: answered.answers\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Check an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to check one answer as accepted\n\nrouter.post(\"/:question_id/:answer_id/check\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // confirm only the question owner can check it as accepted\n\n\n    if (questionFound.user.toString() !== req.user._id) {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          notAuth: 'Only the question owner can check an answer'\n        }\n      });\n    } // confirm no question is checked\n\n\n    for (var i = 0; i < questionFound.answers.length; i++) {\n      if (questionFound.answers[i].check) {\n        return res.json({\n          status: '400',\n          errors: {\n            alreadyChecked: 'You have already checked another answer'\n          }\n        });\n        ;\n      }\n    } // filter the answers to get obtain favorite answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer_id that matches the params\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // check key and user id value\n\n\n    var check = {\n      check: req.user._id\n    }; // save user id\n\n    for (var _i = 0; _i < filteredAnswer.length; _i++) {\n      filteredAnswer[_i].set(check);\n\n      questionFound.save().then(function (checkedQuestion) {\n        res.json({\n          status: '201',\n          message: 'Answer checked',\n          checkedQuestion: checkedQuestion\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Answer by that id not found'\n      }\n    });\n  });\n}); // @task: Uncheck an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to uncheck an answer\n\nrouter.post(\"/:question_id/:answer_id/uncheck\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // confirm only the question owner can uncheck an accepted answer\n\n\n    if (questionFound.user.toString() !== req.user._id) {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          noAuth: 'Only the question owner can uncheck an answer'\n        }\n      });\n    } // check if answer exists\n\n\n    var confirmQuestionExists = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return if answer doesn't exist\n\n    if (confirmQuestionExists.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // confirm if the answer has been checked before unchecking\n\n\n    for (var i = 0; confirmQuestionExists.length; i++) {\n      if (!confirmQuestionExists[i].check) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            notChecked: 'The answer has not been checked'\n          }\n        });\n      } // uncheck answer\n\n\n      confirmQuestionExists[i].check = null; // save\n\n      questionFound.save().then(function (answer) {\n        return res.status(200).json({\n          status: '200',\n          message: 'Answer unchecked',\n          answer: answer\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to upvote an answer they like\n\nrouter.post(\"/:question_id/:answer_id/upvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    });\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // ensure a user upvotes once\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      var filterUpvote = filteredAnswer[i].upvote.filter(function (upvote) {\n        return upvote.user.toString() === req.user._id;\n      });\n\n      if (filterUpvote.length !== 0) {\n        return res.status(400).json({\n          status: '404',\n          errors: {\n            alreadyUpvoted: 'You have already upvoted this answer'\n          }\n        });\n      } // set upvote\n\n\n      var makeUpvote = {\n        user: req.user._id\n      }; // make upvote\n\n      filteredAnswer[i].upvote.unshift(makeUpvote); // save\n\n      questionFound.save().then(function (answer) {\n        res.status(201).json({\n          status: '201',\n          message: 'You have upvoted the answer',\n          answer: answer\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Un-upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-upvote an answer they have upvoted\n\nrouter.post(\"/:question_id/:answer_id/unupvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    });\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // un-upvote if and only if the answer has been upvoted\n    // ensure that only the upvoter can un-upvote\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      var filterUpvote = filteredAnswer[i].upvote.filter(function (upvote) {\n        return upvote.user.toString() === req.user._id;\n      });\n\n      if (filterUpvote.length === 0) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            notUpvoted: 'You have not upvoted the answer'\n          }\n        });\n      } // create remove index\n\n\n      var removeIndex = filteredAnswer[i].upvote.map(function (upvote) {\n        return upvote.user.toString();\n      }).indexOf(req.user._id); // remove upvote\n\n      filteredAnswer[i].upvote.splice(removeIndex, 1); // save\n\n      questionFound.save().then(function (unupvote) {\n        return res.status(200).json({\n          status: '200',\n          message: 'You have un upvoted the answer',\n          unupvote: unupvote\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n\n    ;\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to downvote an answer they don't prefer\n\nrouter.post(\"/:question_id/:answer_id/downvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    }\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      // check if the user has already downvoted\n      var filterDownvote = filteredAnswer[i].downvote.filter(function (downvote) {\n        return downvote.user.toString() === req.user._id;\n      }); // return 400 bad request if the user has already downvoted\n\n      if (filterDownvote.length !== 0) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            alreadyDownvoted: 'You have already downvoted'\n          }\n        });\n      } // create downvote\n\n\n      var makeDownvote = {\n        user: req.user._id\n      }; // set downvote\n\n      filteredAnswer[i].downvote.unshift(makeDownvote); // save\n\n      questionFound.save().then(function (downvote) {\n        res.status(201).json({\n          status: '201',\n          message: 'You have downvoted the answer',\n          downvote: downvote\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Un-downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-downvote an answer they have downvoted\n\nrouter.post(\"/:question_id/:answer_id/undownvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // ensure no un-downvoting for non downvoted answers\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      console.log(filteredAnswer[i]); // filter downvotes\n\n      var filterDownvote = filteredAnswer[i].downvote.filter(function (downvote) {\n        return downvote.user.toString() === req.user._id;\n      }); // return bad request if user has not downvoted\n\n      if (filterDownvote.length === 0) {\n        return res.status(400).json({\n          status: '400',\n          notDownvoted: 'You have not downvoted the answer'\n        });\n      } // create remove index\n\n\n      var removeIndex = filteredAnswer[i].downvote.map(function (undownvote) {\n        return undownvote.user.toString();\n      }).indexOf(req.user._id); // un-downvote\n\n      filteredAnswer[i].downvote.splice(removeIndex, 1); // save\n\n      questionFound.save().then(function (undownvoted) {\n        return res.status(200).json({\n          status: '200',\n          message: 'You have un downvoted the answer',\n          undownvoted: undownvoted\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Comment on an answer\n// @Access: Private(Users)\n// @desc: Enable users to comment on an answer\n\nrouter.post(\"/:question_id/:answer_id/comment\", _auth[\"default\"], function (req, res) {\n  var addComment = req.body.addComment;\n\n  var _validateCommentInput = (0, _questionInput.validateCommentInput)(addComment),\n      errors = _validateCommentInput.errors,\n      isValid = _validateCommentInput.isValid; // return error if no comment field or if field is empty\n\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // access array like object\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      // get the comment\n      var comment = addComment.comment; // create comment object\n\n      var newComment = {\n        user: req.user._id,\n        answer: filteredAnswer[i]._id,\n        comment: comment\n      }; // set the object\n\n      filteredAnswer[i].comments.unshift(newComment);\n      questionFound.save().then(function (commented) {\n        return res.status(201).json({\n          status: '201',\n          message: 'Answer commented',\n          commented: commented\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Question with most answers\n// @Access: Private(Users)\n// @desc: Enable users to view the question with most answers\n\nrouter.get(\"/questions/mostanswered\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].find().select('_id user question answers').populate('user', ['userName']).then(function (questionsFound) {\n    if (questionsFound.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'There are no questions available'\n        }\n      });\n    } // continue\n    // map the answers and the number of answers in specifice questions\n\n\n    var mappedAnswers = questionsFound.map(function (question) {\n      return question.answers.length;\n    }); // check for questions with no answers\n\n    var noAnswers = questionsFound.filter(function (question) {\n      return question.answers.length === 0;\n    }); // return if no answers yet\n\n    if (mappedAnswers.length === noAnswers.length) {\n      return res.status(400).json({\n        status: '400',\n        errors: {\n          noAnswers: 'There are no answers yet for the questions'\n        }\n      });\n    } // get the search index on question with the highest answers\n\n\n    var searchIndex = mappedAnswers.indexOf(Math.max.apply(Math, _toConsumableArray(mappedAnswers))); // get the question with most answers\n\n    var mostAnswered = questionsFound[searchIndex]; // handle a case where there more than one question with equal -\n    // and highest answers\n    // map question answers\n\n    var moreThanOneQuestion = questionsFound.map(function (question) {\n      return question.answers;\n    }); // get array of questions with highest matched answers\n\n    var filterMoreThanOneQuestion = moreThanOneQuestion.filter(function (answers) {\n      return answers.length === Math.max.apply(Math, _toConsumableArray(mappedAnswers));\n    });\n\n    if (filterMoreThanOneQuestion.length <= 1) {\n      return res.status(200).json({\n        status: '200',\n        answersCount: mostAnswered.answers.length,\n        message: \"The question from \".concat(mostAnswered.user.userName, \" received most answers, (\").concat(mostAnswered.answers.length, \") in total\"),\n        mostAnswered: mostAnswered\n      });\n    }\n\n    return res.status(200).json({\n      status: '200',\n      answersCount: mostAnswered.answers.length,\n      message: \"The question from \".concat(mostAnswered.user.userName, \" received most answers, (\").concat(mostAnswered.answers.length, \") in total\"),\n      note: 'There are other question with the same number of answers. However, this question was asked earlier.',\n      mostAnswered: mostAnswered\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "questions.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "auth",
        "req",
        "res",
        "body",
        "addQuestion",
        "errors",
        "isValid",
        "status",
        "json",
        "question",
        "Question",
        "findOne",
        "then",
        "questionFound",
        "questionExists",
        "request",
        "type",
        "url",
        "_id",
        "newQuestion",
        "user",
        "save",
        "savedQuestion",
        "err",
        "get",
        "find",
        "select",
        "populate",
        "questionsFound",
        "length",
        "notFound",
        "message",
        "count",
        "params",
        "question_id",
        "put",
        "updateQuestion",
        "putQuestion",
        "toString",
        "noAuth",
        "answers",
        "answerFound",
        "noChange",
        "findOneAndUpdate",
        "updatedQuestion",
        "isAdmin",
        "remove",
        "addAnswer",
        "answer",
        "newAnswer",
        "unshift",
        "answered",
        "notAuth",
        "i",
        "check",
        "alreadyChecked",
        "filteredAnswer",
        "filter",
        "answer_id",
        "set",
        "checkedQuestion",
        "confirmQuestionExists",
        "notChecked",
        "filterUpvote",
        "upvote",
        "alreadyUpvoted",
        "makeUpvote",
        "notUpvoted",
        "removeIndex",
        "map",
        "indexOf",
        "splice",
        "unupvote",
        "filterDownvote",
        "downvote",
        "alreadyDownvoted",
        "makeDownvote",
        "console",
        "log",
        "notDownvoted",
        "undownvote",
        "undownvoted",
        "addComment",
        "comment",
        "newComment",
        "comments",
        "commented",
        "mappedAnswers",
        "noAnswers",
        "searchIndex",
        "Math",
        "max",
        "mostAnswered",
        "moreThanOneQuestion",
        "filterMoreThanOneQuestion",
        "answersCount",
        "userName",
        "note"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/routes",
      "sourcesContent": [
        "// imports\nimport express from \"express\";\n\n// local imports\nimport auth from \"../middlewares/auth\";\nimport Question from \"../models/Question\";\nimport {\n  validateQuestionInput, validateAnswerInput, validateCommentInput\n} from \"../validations/questionInput\";\n\nconst router = express.Router();\n\n\n// @task: Post a question\n// @Access: Private(User)\n// @desc: Enable logged in users to ask questions\nrouter.post(\"/question\", auth, (req, res) => {\n  const { errors, isValid } = validateQuestionInput(req.body.addQuestion);\n  if (!isValid) {\n    res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  const { question } = req.body.addQuestion;\n  Question\n    .findOne({question})\n    .then(questionFound => {\n      if (questionFound) {\n        // abort the process and give relevant response\n          return res.status(409).json({\n            status: '409',\n            questionExists: 'question already asked',\n            request: {\n              type: 'GET',\n              url: `http://127.0.0.1:8080/api/questions/${questionFound._id}`\n            }\n          });\n      }\n      const newQuestion = new Question({\n        user: req.user._id,\n        question\n      });\n      // save to database\n      newQuestion\n        .save()\n        .then(savedQuestion => {\n          res.status(201).json({\n            status: '201',\n            savedQuestion: {\n              _id: savedQuestion._id,\n              question: savedQuestion.question,\n              user: {\n                _id: savedQuestion.user._id\n              }\n            }\n          })\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(err => res.json(err));\n});\n\n// @task: Get all question\n// @Access: Public\n// @desc: Enable anyone to view the questions\nrouter.get(\"/questions\", (req, res) => {\n  Question\n    .find()\n    .select('_id question user')\n    .populate('user', ['userName'])\n    .then(questionsFound => {\n      if (questionsFound.length === 0) {\n        return res.json({\n          status: '404',\n          errors: {\n            notFound: 'There are no questions available'\n          }\n        });\n      }\n      // continue\n      return res.json({\n        status: '200',\n        message: 'Question(s) listed below',\n        count: questionsFound.length,\n        questionsFound\n      });\n    })\n    .catch(err => res.json(err));\n});\n\n// @task: Get a question by id\n// @Access: Private\n// @desc: Enable logged in user to view the question by id\nrouter.get(\"/:question_id\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .select('_id question answers user')\n    .populate('user', ['userName'])\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      res.status(200).json({\n        status: '200',\n        questionFound\n      });\n    })\n    .catch(() => res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    }));\n});\n\n// @task: Edit (PUT) a question if there are no answers\n// @Access: Private(User)\n// @desc: Enable question owner to edit, should be logged in\nrouter.put(\"/:question_id\", auth, (req, res) => {\n  const params = req.params.question_id;\n  const updateQuestion = req.body.putQuestion;\n  const { question } = updateQuestion;\n  const { errors, isValid } = validateQuestionInput(updateQuestion);\n\n  // validate question update field input\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  Question\n    .findOne({ _id: params })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // check to confirm the update is granted to the user who asked the question\n      if (questionFound.user.toString() !== req.user._id) {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            noAuth: 'You don/t have that permission to edit the question'\n          }\n        });\n      }\n\n      // check if question already has answers\n      // ensure no updates if the question already has answers\n      if (questionFound.answers.length !== 0) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            answerFound: 'The question cannot be edited since it already has answers'\n          }\n        });\n      }\n\n      // check for changes in question\n      // ensure no updates if no changes detected\n      if (questionFound.question === question) {\n        return res.status(409).json({\n          status: '409',\n          errors: {\n            noChange: 'No changes in question detected'\n          }\n        });\n      }\n\n      Question\n        .findOneAndUpdate({ _id: params }, updateQuestion, { new: true })\n        .select('_id question answers user')\n        .then(updatedQuestion => {\n          res.status(200).json({\n            status: '200',\n            message: 'Question successfully updated',\n            updatedQuestion\n          })\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(() => res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    }));\n});\n\n// @task: Delete a question by id\n// @Access: Private(Admin, User)\n// @desc: Enable question owner and admin to delete question\nrouter.delete(\"/:question_id\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      // check if question exists\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id is either deleted or does not exists'\n          }\n        });\n      }\n\n      // check owner\n      if (questionFound.user.toString() === req.user._id || req.user.isAdmin === true) {\n        questionFound\n          .remove()\n          .then(() => res.status(200).json({\n            status: '200',\n            message: 'Question deleted'\n          }))\n          .catch(err => res.json(err));\n      } else {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            noAuth: 'You don/t have that permission to delete the question'\n          }\n        });\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id is either deleted or does not exists'\n        }\n      });\n    });\n});\n\n// @task: Answer a question\n// @Access: Private(Users)\n// @desc: Enable users to answers a question\nrouter.post(\"/:question_id/answer\", auth, (req, res) => {\n  const { addAnswer } = req.body;\n  const { answer } = addAnswer;\n  const { errors, isValid } = validateAnswerInput(addAnswer);\n\n  // check for empty fields\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n\n      // get user id and question id\n      const user = req.user._id;\n      const question = questionFound._id;\n\n      // set answer\n      const newAnswer = {\n        answer,\n        user,\n        question\n      };\n\n      // add the answer\n      questionFound\n        .answers\n        .unshift(newAnswer)\n\n      // save the answer\n      questionFound\n        .save()\n        .then(answered => {\n          return res.status(201).json({\n            status: '201',\n            _id: answered._id,\n            user: answered.user,\n            question: answered.question,\n            answers: answered.answers\n          })\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Check an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to check one answer as accepted\nrouter.post(\"/:question_id/:answer_id/check\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // confirm only the question owner can check it as accepted\n      if (questionFound.user.toString() !== req.user._id) {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            notAuth: 'Only the question owner can check an answer'\n          }\n        });\n      }\n\n      // confirm no question is checked\n      for (let i = 0; i < questionFound.answers.length; i++) {\n        if (questionFound.answers[i].check) {\n          return res.json({\n            status: '400',\n            errors: {\n              alreadyChecked: 'You have already checked another answer'\n            }\n          });;\n        }\n      }\n\n      // filter the answers to get obtain favorite answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer_id that matches the params\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      // check key and user id value\n      const check = {\n        check: req.user._id\n      }\n      // save user id\n      for (let i = 0; i < filteredAnswer.length; i++) {\n        filteredAnswer[i]\n          .set(check)\n        questionFound\n          .save()\n          .then(checkedQuestion => {\n            res.json({\n              status: '201',\n              message: 'Answer checked',\n              checkedQuestion\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    })\n});\n\n// @task: Uncheck an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to uncheck an answer\nrouter.post(\"/:question_id/:answer_id/uncheck\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // confirm only the question owner can uncheck an accepted answer\n      if (questionFound.user.toString() !== req.user._id) {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            noAuth: 'Only the question owner can uncheck an answer'\n          }\n        });\n      }\n\n      // check if answer exists\n      const confirmQuestionExists = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return if answer doesn't exist\n      if (confirmQuestionExists.length === 0) {\n        return  res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      // confirm if the answer has been checked before unchecking\n      for (let i = 0; confirmQuestionExists.length; i++) {\n        if (!confirmQuestionExists[i].check) {\n          return res.status(400).json({\n            status: '400',\n            errors: {\n              notChecked: 'The answer has not been checked'\n            }\n          });\n        }\n        // uncheck answer\n        confirmQuestionExists[i].check = null;\n        // save\n        questionFound\n          .save()\n          .then(answer => {\n            return res.status(200).json({\n              status: '200',\n              message: 'Answer unchecked',\n              answer\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to upvote an answer they like\nrouter.post(\"/:question_id/:answer_id/upvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n      // ensure a user upvotes once\n      for (let i = 0; filteredAnswer.length; i++) {\n        const filterUpvote = filteredAnswer[i]\n          .upvote\n          .filter(upvote => upvote.user.toString() === req.user._id);\n        if (filterUpvote.length !== 0) {\n          return res.status(400).json({\n            status: '404',\n            errors: {\n              alreadyUpvoted: 'You have already upvoted this answer'\n            }\n          });\n        }\n        // set upvote\n        const makeUpvote = {\n          user: req.user._id\n        };\n        // make upvote\n        filteredAnswer[i]\n          .upvote\n          .unshift(makeUpvote)\n        // save\n        questionFound\n          .save()\n          .then(answer => {\n            res.status(201).json({\n              status: '201',\n              message: 'You have upvoted the answer',\n              answer\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Un-upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-upvote an answer they have upvoted\nrouter.post(\"/:question_id/:answer_id/unupvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      // un-upvote if and only if the answer has been upvoted\n      // ensure that only the upvoter can un-upvote\n      for (let i = 0; filteredAnswer.length; i++) {\n        const filterUpvote = filteredAnswer[i]\n          .upvote\n          .filter(upvote => upvote.user.toString() === req.user._id);\n\n        if (filterUpvote.length === 0) {\n          return res.status(400).json({\n            status: '400',\n            errors: {\n              notUpvoted: 'You have not upvoted the answer'\n            }\n          });\n        }\n\n        // create remove index\n        const removeIndex = filteredAnswer[i]\n          .upvote\n          .map(upvote => upvote.user.toString())\n          .indexOf(req.user._id);\n\n        // remove upvote\n        filteredAnswer[i]\n          .upvote\n          .splice(removeIndex, 1)\n\n        // save\n        questionFound\n          .save()\n          .then(unupvote => {\n            return res.status(200).json({\n              status: '200',\n              message: 'You have un upvoted the answer',\n              unupvote\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      };\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    })\n});\n\n// @task: Downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to downvote an answer they don't prefer\nrouter.post(\"/:question_id/:answer_id/downvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      for (let i = 0; filteredAnswer.length; i++) {\n        // check if the user has already downvoted\n        const filterDownvote = filteredAnswer[i]\n          .downvote\n          .filter(downvote => downvote.user.toString() === req.user._id);\n\n        // return 400 bad request if the user has already downvoted\n        if (filterDownvote.length !== 0) {\n          return res.status(400).json({\n            status: '400',\n            errors: {\n              alreadyDownvoted: 'You have already downvoted'\n            }\n          });\n        }\n\n        // create downvote\n        const makeDownvote = {\n          user: req.user._id\n        };\n\n        // set downvote\n        filteredAnswer[i]\n          .downvote\n          .unshift(makeDownvote)\n\n        // save\n        questionFound\n          .save()\n          .then(downvote => {\n            res.status(201).json({\n              status: '201',\n              message: 'You have downvoted the answer',\n              downvote\n            })\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Un-downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-downvote an answer they have downvoted\nrouter.post(\"/:question_id/:answer_id/undownvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n      // ensure no un-downvoting for non downvoted answers\n      for (let i = 0; filteredAnswer.length; i++) {\n        console.log(filteredAnswer[i]);\n        // filter downvotes\n        const filterDownvote = filteredAnswer[i]\n          .downvote\n          .filter(downvote => downvote.user.toString() === req.user._id);\n\n        // return bad request if user has not downvoted\n        if (filterDownvote.length === 0) {\n          return res.status(400).json({\n            status: '400',\n            notDownvoted: 'You have not downvoted the answer'\n          });\n        }\n\n        // create remove index\n        const removeIndex = filteredAnswer[i]\n          .downvote\n          .map(undownvote => undownvote.user.toString())\n          .indexOf(req.user._id);\n\n        // un-downvote\n        filteredAnswer[i]\n          .downvote\n          .splice(removeIndex, 1)\n\n        // save\n        questionFound\n          .save()\n          .then(undownvoted => {\n            return res.status(200).json({\n              status: '200',\n              message: 'You have un downvoted the answer',\n              undownvoted\n            });\n          })\n          .catch(err => res.json(err));\n\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Comment on an answer\n// @Access: Private(Users)\n// @desc: Enable users to comment on an answer\nrouter.post(\"/:question_id/:answer_id/comment\", auth, (req, res) => {\n  const { addComment } = req.body;\n  const { errors, isValid } = validateCommentInput(addComment);\n\n  // return error if no comment field or if field is empty\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n      // access array like object\n      for (let i = 0; filteredAnswer.length; i++) {\n        // get the comment\n        const { comment } = addComment;\n\n        // create comment object\n        const newComment = {\n          user: req.user._id,\n          answer: filteredAnswer[i]._id,\n          comment\n        };\n\n        // set the object\n        filteredAnswer[i]\n          .comments\n          .unshift(newComment);\n\n        questionFound\n          .save()\n          .then(commented => {\n            return res.status(201).json({\n              status: '201',\n              message: 'Answer commented',\n              commented\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Question with most answers\n// @Access: Private(Users)\n// @desc: Enable users to view the question with most answers\nrouter.get(\"/questions/mostanswered\", auth, (req, res) => {\n  Question\n    .find()\n    .select('_id user question answers')\n    .populate('user', ['userName'])\n    .then(questionsFound => {\n      if (questionsFound.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'There are no questions available'\n          }\n        })\n      }\n      // continue\n      // map the answers and the number of answers in specifice questions\n      const mappedAnswers = questionsFound\n        .map(question => question.answers.length);\n\n      // check for questions with no answers\n      const noAnswers = questionsFound\n        .filter(question => question.answers.length === 0);\n\n      // return if no answers yet\n      if (mappedAnswers.length === noAnswers.length) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            noAnswers: 'There are no answers yet for the questions'\n          }\n        });\n      }\n      \n      // get the search index on question with the highest answers\n      const searchIndex = mappedAnswers\n        .indexOf(Math.max(...mappedAnswers));\n\n      // get the question with most answers\n      const mostAnswered = questionsFound[searchIndex];\n\n      // handle a case where there more than one question with equal -\n      // and highest answers\n      // map question answers\n      const moreThanOneQuestion = questionsFound\n        .map(question => question.answers);\n\n      // get array of questions with highest matched answers\n      const filterMoreThanOneQuestion = moreThanOneQuestion\n        .filter(answers => answers.length === Math.max(...mappedAnswers));\n\n      if (filterMoreThanOneQuestion.length <= 1) {\n        return res.status(200).json({\n          status: '200',\n          answersCount: mostAnswered.answers.length,\n          message: `The question from ${mostAnswered.user.userName} received most answers, (${mostAnswered.answers.length}) in total`,\n          mostAnswered\n        });\n      }\n      return res.status(200).json({\n        status: '200',\n        answersCount: mostAnswered.answers.length,\n        message: `The question from ${mostAnswered.user.userName} received most answers, (${mostAnswered.answers.length}) in total`,\n        note: 'There are other question with the same number of answers. However, this question was asked earlier.',\n        mostAnswered\n      });\n    })\n    .catch(err => res.json(err))\n});\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572166022744
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models/Question.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models/Question.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models/Question.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models/Question.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models",
        "sourceFileName": "Question.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar questionSchema = new Schema({\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  question: {\n    type: String,\n    required: true\n  },\n  answers: [{\n    user: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    question: {\n      type: Schema.Types.ObjectId,\n      ref: 'Question'\n    },\n    answer: {\n      type: String,\n      required: true\n    },\n    comments: [{\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      },\n      answer: {\n        type: Schema.Types.ObjectId,\n        ref: 'Question'\n      },\n      comment: {\n        type: String,\n        required: true\n      }\n    }],\n    check: {\n      type: Schema.Types.ObjectId,\n      ref: 'User',\n      max: 1\n    },\n    upvote: [{\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      }\n    }],\n    downvote: [{\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      }\n    }],\n    time: {\n      type: Date,\n      \"default\": Date.now\n    }\n  }]\n});\n\nvar _default = _mongoose[\"default\"].model('Question', questionSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlF1ZXN0aW9uLmpzIl0sIm5hbWVzIjpbIlNjaGVtYSIsIm1vbmdvb3NlIiwicXVlc3Rpb25TY2hlbWEiLCJ1c2VyIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJxdWVzdGlvbiIsIlN0cmluZyIsInJlcXVpcmVkIiwiYW5zd2VycyIsImFuc3dlciIsImNvbW1lbnRzIiwiY29tbWVudCIsImNoZWNrIiwibWF4IiwidXB2b3RlIiwiZG93bnZvdGUiLCJ0aW1lIiwiRGF0ZSIsIm5vdyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7SUFFUUEsTSxHQUFXQyxvQixDQUFYRCxNO0FBRVIsSUFBTUUsY0FBYyxHQUFHLElBQUlGLE1BQUosQ0FBVztBQUNoQ0csRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUosTUFBTSxDQUFDSyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQsR0FEMEI7QUFLaENDLEVBQUFBLFFBQVEsRUFBRTtBQUNSSixJQUFBQSxJQUFJLEVBQUVLLE1BREU7QUFFUkMsSUFBQUEsUUFBUSxFQUFFO0FBRkYsR0FMc0I7QUFTaENDLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VSLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURmO0FBRUpDLE1BQUFBLEdBQUcsRUFBRTtBQUZELEtBRFI7QUFLRUMsSUFBQUEsUUFBUSxFQUFFO0FBQ1JKLE1BQUFBLElBQUksRUFBRUosTUFBTSxDQUFDSyxLQUFQLENBQWFDLFFBRFg7QUFFUkMsTUFBQUEsR0FBRyxFQUFFO0FBRkcsS0FMWjtBQVNFSyxJQUFBQSxNQUFNLEVBQUU7QUFDTlIsTUFBQUEsSUFBSSxFQUFFSyxNQURBO0FBRU5DLE1BQUFBLFFBQVEsRUFBRTtBQUZKLEtBVFY7QUFhRUcsSUFBQUEsUUFBUSxFQUFFLENBQ1I7QUFDRVYsTUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFFBQUFBLElBQUksRUFBRUosTUFBTSxDQUFDSyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsUUFBQUEsR0FBRyxFQUFFO0FBRkQsT0FEUjtBQUtFSyxNQUFBQSxNQUFNLEVBQUU7QUFDTlIsUUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxRQUFBQSxHQUFHLEVBQUU7QUFGQyxPQUxWO0FBU0VPLE1BQUFBLE9BQU8sRUFBRTtBQUNQVixRQUFBQSxJQUFJLEVBQUVLLE1BREM7QUFFUEMsUUFBQUEsUUFBUSxFQUFFO0FBRkg7QUFUWCxLQURRLENBYlo7QUE2QkVLLElBQUFBLEtBQUssRUFBRTtBQUNMWCxNQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURkO0FBRUxDLE1BQUFBLEdBQUcsRUFBRSxNQUZBO0FBR0xTLE1BQUFBLEdBQUcsRUFBRTtBQUhBLEtBN0JUO0FBa0NFQyxJQUFBQSxNQUFNLEVBQUUsQ0FDTjtBQUNFZCxNQUFBQSxJQUFJLEVBQUU7QUFDSkMsUUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxRQUFBQSxHQUFHLEVBQUU7QUFGRDtBQURSLEtBRE0sQ0FsQ1Y7QUEwQ0VXLElBQUFBLFFBQVEsRUFBRSxDQUNSO0FBQ0VmLE1BQUFBLElBQUksRUFBRTtBQUNKQyxRQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURmO0FBRUpDLFFBQUFBLEdBQUcsRUFBRTtBQUZEO0FBRFIsS0FEUSxDQTFDWjtBQWtERVksSUFBQUEsSUFBSSxFQUFFO0FBQ0pmLE1BQUFBLElBQUksRUFBRWdCLElBREY7QUFFSixpQkFBU0EsSUFBSSxDQUFDQztBQUZWO0FBbERSLEdBRE87QUFUdUIsQ0FBWCxDQUF2Qjs7ZUFxRWVwQixxQkFBU3FCLEtBQVQsQ0FBZSxVQUFmLEVBQTJCcEIsY0FBM0IsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ibHVlL0Rlc2t0b3AvUHJvZ3JhbW1pbmcvSmF2YXNjcmlwdC9EZXZlbG9wZXIvZGV2ZWxvcGVyUG9vbC9hcGkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xuXG5jb25zdCB7IFNjaGVtYSB9ID0gbW9uZ29vc2U7XG5cbmNvbnN0IHF1ZXN0aW9uU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIHVzZXI6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnVXNlcidcbiAgfSxcbiAgcXVlc3Rpb246IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgYW5zd2VyczogW1xuICAgIHtcbiAgICAgIHVzZXI6IHtcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdVc2VyJ1xuICAgICAgfSxcbiAgICAgIHF1ZXN0aW9uOiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnUXVlc3Rpb24nXG4gICAgICB9LFxuICAgICAgYW5zd2VyOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBjb21tZW50czogW1xuICAgICAgICB7XG4gICAgICAgICAgdXNlcjoge1xuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICAgICAgcmVmOiAnVXNlcidcbiAgICAgICAgICB9LFxuICAgICAgICAgIGFuc3dlcjoge1xuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICAgICAgcmVmOiAnUXVlc3Rpb24nXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb21tZW50OiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGNoZWNrOiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcicsXG4gICAgICAgIG1heDogMVxuICAgICAgfSxcbiAgICAgIHVwdm90ZTogW1xuICAgICAgICB7XG4gICAgICAgICAgdXNlcjoge1xuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICAgICAgcmVmOiAnVXNlcidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBkb3dudm90ZTogW1xuICAgICAgICB7XG4gICAgICAgICAgdXNlcjoge1xuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICAgICAgcmVmOiAnVXNlcidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICB0aW1lOiB7XG4gICAgICAgIHR5cGU6IERhdGUsXG4gICAgICAgIGRlZmF1bHQ6IERhdGUubm93XG4gICAgICB9XG4gICAgfVxuICBdXG59XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnUXVlc3Rpb24nLCBxdWVzdGlvblNjaGVtYSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Question.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "questionSchema",
        "user",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "question",
        "String",
        "required",
        "answers",
        "answer",
        "comments",
        "comment",
        "check",
        "max",
        "upvote",
        "downvote",
        "time",
        "Date",
        "now",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;IAEQA,M,GAAWC,oB,CAAXD,M;AAER,IAAME,cAAc,GAAG,IAAIF,MAAJ,CAAW;AAChCG,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD,GAD0B;AAKhCC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,IAAI,EAAEK,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GALsB;AAShCC,EAAAA,OAAO,EAAE,CACP;AACER,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,MAAAA,GAAG,EAAE;AAFD,KADR;AAKEC,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADX;AAERC,MAAAA,GAAG,EAAE;AAFG,KALZ;AASEK,IAAAA,MAAM,EAAE;AACNR,MAAAA,IAAI,EAAEK,MADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KATV;AAaEG,IAAAA,QAAQ,EAAE,CACR;AACEV,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,QAAAA,GAAG,EAAE;AAFD,OADR;AAKEK,MAAAA,MAAM,EAAE;AACNR,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADb;AAENC,QAAAA,GAAG,EAAE;AAFC,OALV;AASEO,MAAAA,OAAO,EAAE;AACPV,QAAAA,IAAI,EAAEK,MADC;AAEPC,QAAAA,QAAQ,EAAE;AAFH;AATX,KADQ,CAbZ;AA6BEK,IAAAA,KAAK,EAAE;AACLX,MAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADd;AAELC,MAAAA,GAAG,EAAE,MAFA;AAGLS,MAAAA,GAAG,EAAE;AAHA,KA7BT;AAkCEC,IAAAA,MAAM,EAAE,CACN;AACEd,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,QAAAA,GAAG,EAAE;AAFD;AADR,KADM,CAlCV;AA0CEW,IAAAA,QAAQ,EAAE,CACR;AACEf,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,QAAAA,GAAG,EAAE;AAFD;AADR,KADQ,CA1CZ;AAkDEY,IAAAA,IAAI,EAAE;AACJf,MAAAA,IAAI,EAAEgB,IADF;AAEJ,iBAASA,IAAI,CAACC;AAFV;AAlDR,GADO;AATuB,CAAX,CAAvB;;eAqEepB,qBAASqB,KAAT,CAAe,UAAf,EAA2BpB,cAA3B,C",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/models",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\n\nconst { Schema } = mongoose;\n\nconst questionSchema = new Schema({\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  question: {\n    type: String,\n    required: true\n  },\n  answers: [\n    {\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      },\n      question: {\n        type: Schema.Types.ObjectId,\n        ref: 'Question'\n      },\n      answer: {\n        type: String,\n        required: true\n      },\n      comments: [\n        {\n          user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n          },\n          answer: {\n            type: Schema.Types.ObjectId,\n            ref: 'Question'\n          },\n          comment: {\n            type: String,\n            required: true\n          }\n        }\n      ],\n      check: {\n        type: Schema.Types.ObjectId,\n        ref: 'User',\n        max: 1\n      },\n      upvote: [\n        {\n          user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n          }\n        }\n      ],\n      downvote: [\n        {\n          user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n          }\n        }\n      ],\n      time: {\n        type: Date,\n        default: Date.now\n      }\n    }\n  ]\n}\n);\n\nexport default mongoose.model('Question', questionSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572101124354
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/questionInput.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/questionInput.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/questionInput.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations/questionInput.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations",
        "sourceFileName": "questionInput.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateCommentInput = exports.validateAnswerInput = exports.validateQuestionInput = void 0;\n\nvar _validator = _interopRequireDefault(require(\"validator\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"./isEmpty\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar validateQuestionInput = function validateQuestionInput(data) {\n  var errors = {};\n  data.question = !(0, _isEmpty[\"default\"])(data.question) ? data.question : '';\n\n  if (!_validator[\"default\"].isLength(data.question, {\n    min: 3,\n    max: 255\n  })) {\n    errors.question = \"The minimum character expected is 3 while maximum is 255\";\n  }\n\n  if (_validator[\"default\"].isEmpty(data.question)) {\n    errors.question = 'Question field is required';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateQuestionInput = validateQuestionInput;\n\nvar validateAnswerInput = function validateAnswerInput(data) {\n  var errors = {};\n  data.answer = !(0, _isEmpty[\"default\"])(data.answer) ? data.answer : '';\n\n  if (_validator[\"default\"].isEmpty(data.answer)) {\n    errors.answer = 'Answer field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.answer, {\n    min: 5,\n    max: 400\n  })) {\n    errors.answer = 'The minimum character expected is 5 while maximum is 400';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateAnswerInput = validateAnswerInput;\n\nvar validateCommentInput = function validateCommentInput(data) {\n  var errors = {};\n  data.comment = !(0, _isEmpty[\"default\"])(data.comment) ? data.comment : '';\n\n  if (_validator[\"default\"].isEmpty(data.comment)) {\n    errors.comment = 'Comment field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.comment, {\n    max: 100\n  })) {\n    errors.comment = 'The minimum character expected is 1 while maximum is 100';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateCommentInput = validateCommentInput;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9uSW5wdXQuanMiXSwibmFtZXMiOlsidmFsaWRhdGVRdWVzdGlvbklucHV0IiwiZGF0YSIsImVycm9ycyIsInF1ZXN0aW9uIiwiVmFsaWRhdG9yIiwiaXNMZW5ndGgiLCJtaW4iLCJtYXgiLCJpc0VtcHR5IiwiaXNWYWxpZCIsInZhbGlkYXRlQW5zd2VySW5wdXQiLCJhbnN3ZXIiLCJ2YWxpZGF0ZUNvbW1lbnRJbnB1dCIsImNvbW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFHQTs7OztBQUpBO0FBR0E7QUFHQSxJQUFNQSxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXdCLENBQUFDLElBQUksRUFBSTtBQUVwQyxNQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUVBRCxFQUFBQSxJQUFJLENBQUNFLFFBQUwsR0FBZ0IsQ0FBQyx5QkFBUUYsSUFBSSxDQUFDRSxRQUFiLENBQUQsR0FBMEJGLElBQUksQ0FBQ0UsUUFBL0IsR0FBMEMsRUFBMUQ7O0FBRUEsTUFBSSxDQUFDQyxzQkFBVUMsUUFBVixDQUFtQkosSUFBSSxDQUFDRSxRQUF4QixFQUFrQztBQUFFRyxJQUFBQSxHQUFHLEVBQUUsQ0FBUDtBQUFVQyxJQUFBQSxHQUFHLEVBQUU7QUFBZixHQUFsQyxDQUFMLEVBQThEO0FBQzVETCxJQUFBQSxNQUFNLENBQUNDLFFBQVAsR0FBa0IsMERBQWxCO0FBQ0Q7O0FBRUQsTUFBSUMsc0JBQVVJLE9BQVYsQ0FBa0JQLElBQUksQ0FBQ0UsUUFBdkIsQ0FBSixFQUFzQztBQUNwQ0QsSUFBQUEsTUFBTSxDQUFDQyxRQUFQLEdBQWtCLDRCQUFsQjtBQUNEOztBQUVELFNBQU87QUFDTEQsSUFBQUEsTUFBTSxFQUFOQSxNQURLO0FBRUxPLElBQUFBLE9BQU8sRUFBRSx5QkFBUVAsTUFBUjtBQUZKLEdBQVA7QUFJRCxDQWxCRDs7OztBQW9CQSxJQUFNUSxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCLENBQUFULElBQUksRUFBSTtBQUVsQyxNQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUVBRCxFQUFBQSxJQUFJLENBQUNVLE1BQUwsR0FBYyxDQUFDLHlCQUFRVixJQUFJLENBQUNVLE1BQWIsQ0FBRCxHQUF3QlYsSUFBSSxDQUFDVSxNQUE3QixHQUFzQyxFQUFwRDs7QUFFQSxNQUFJUCxzQkFBVUksT0FBVixDQUFrQlAsSUFBSSxDQUFDVSxNQUF2QixDQUFKLEVBQW9DO0FBQ2xDVCxJQUFBQSxNQUFNLENBQUNTLE1BQVAsR0FBZ0IsMEJBQWhCO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDUCxzQkFBVUMsUUFBVixDQUFtQkosSUFBSSxDQUFDVSxNQUF4QixFQUFnQztBQUFFTCxJQUFBQSxHQUFHLEVBQUUsQ0FBUDtBQUFVQyxJQUFBQSxHQUFHLEVBQUU7QUFBZixHQUFoQyxDQUFMLEVBQTREO0FBQzFETCxJQUFBQSxNQUFNLENBQUNTLE1BQVAsR0FBZ0IsMERBQWhCO0FBQ0Q7O0FBRUQsU0FBTztBQUNMVCxJQUFBQSxNQUFNLEVBQU5BLE1BREs7QUFFTE8sSUFBQUEsT0FBTyxFQUFFLHlCQUFRUCxNQUFSO0FBRkosR0FBUDtBQUlELENBbEJEOzs7O0FBb0JBLElBQU1VLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBdUIsQ0FBQVgsSUFBSSxFQUFJO0FBRW5DLE1BQU1DLE1BQU0sR0FBRyxFQUFmO0FBRUFELEVBQUFBLElBQUksQ0FBQ1ksT0FBTCxHQUFlLENBQUMseUJBQVFaLElBQUksQ0FBQ1ksT0FBYixDQUFELEdBQXlCWixJQUFJLENBQUNZLE9BQTlCLEdBQXdDLEVBQXZEOztBQUVBLE1BQUlULHNCQUFVSSxPQUFWLENBQWtCUCxJQUFJLENBQUNZLE9BQXZCLENBQUosRUFBcUM7QUFDbkNYLElBQUFBLE1BQU0sQ0FBQ1csT0FBUCxHQUFpQiwyQkFBakI7QUFDRDs7QUFFRCxNQUFJLENBQUNULHNCQUFVQyxRQUFWLENBQW1CSixJQUFJLENBQUNZLE9BQXhCLEVBQWlDO0FBQUVOLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQWpDLENBQUwsRUFBcUQ7QUFDbkRMLElBQUFBLE1BQU0sQ0FBQ1csT0FBUCxHQUFpQiwwREFBakI7QUFDRDs7QUFFRCxTQUFPO0FBQ0xYLElBQUFBLE1BQU0sRUFBTkEsTUFESztBQUVMTyxJQUFBQSxPQUFPLEVBQUUseUJBQVFQLE1BQVI7QUFGSixHQUFQO0FBS0QsQ0FuQkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlclBvb2wvYXBpL3ZhbGlkYXRpb25zIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0c1xuaW1wb3J0IFZhbGlkYXRvciBmcm9tIFwidmFsaWRhdG9yXCI7XG5cbi8vIGxvY2FsIGltcG9ydHNcbmltcG9ydCBpc0VtcHR5IGZyb20gXCIuL2lzRW1wdHlcIjtcblxuY29uc3QgdmFsaWRhdGVRdWVzdGlvbklucHV0ID0gZGF0YSA9PiB7XG5cbiAgY29uc3QgZXJyb3JzID0ge307XG5cbiAgZGF0YS5xdWVzdGlvbiA9ICFpc0VtcHR5KGRhdGEucXVlc3Rpb24pID8gZGF0YS5xdWVzdGlvbiA6ICcnO1xuXG4gIGlmICghVmFsaWRhdG9yLmlzTGVuZ3RoKGRhdGEucXVlc3Rpb24sIHsgbWluOiAzLCBtYXg6IDI1NSB9KSkge1xuICAgIGVycm9ycy5xdWVzdGlvbiA9IFwiVGhlIG1pbmltdW0gY2hhcmFjdGVyIGV4cGVjdGVkIGlzIDMgd2hpbGUgbWF4aW11bSBpcyAyNTVcIlxuICB9XG5cbiAgaWYgKFZhbGlkYXRvci5pc0VtcHR5KGRhdGEucXVlc3Rpb24pKSB7XG4gICAgZXJyb3JzLnF1ZXN0aW9uID0gJ1F1ZXN0aW9uIGZpZWxkIGlzIHJlcXVpcmVkJztcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZXJyb3JzLFxuICAgIGlzVmFsaWQ6IGlzRW1wdHkoZXJyb3JzKVxuICB9O1xufTtcblxuY29uc3QgdmFsaWRhdGVBbnN3ZXJJbnB1dCA9IGRhdGEgPT4ge1xuXG4gIGNvbnN0IGVycm9ycyA9IHt9O1xuXG4gIGRhdGEuYW5zd2VyID0gIWlzRW1wdHkoZGF0YS5hbnN3ZXIpID8gZGF0YS5hbnN3ZXIgOiAnJztcblxuICBpZiAoVmFsaWRhdG9yLmlzRW1wdHkoZGF0YS5hbnN3ZXIpKSB7XG4gICAgZXJyb3JzLmFuc3dlciA9ICdBbnN3ZXIgZmllbGQgaXMgcmVxdWlyZWQnO1xuICB9XG5cbiAgaWYgKCFWYWxpZGF0b3IuaXNMZW5ndGgoZGF0YS5hbnN3ZXIsIHsgbWluOiA1LCBtYXg6IDQwMCB9KSkge1xuICAgIGVycm9ycy5hbnN3ZXIgPSAnVGhlIG1pbmltdW0gY2hhcmFjdGVyIGV4cGVjdGVkIGlzIDUgd2hpbGUgbWF4aW11bSBpcyA0MDAnO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBlcnJvcnMsXG4gICAgaXNWYWxpZDogaXNFbXB0eShlcnJvcnMpXG4gIH07XG59XG5cbmNvbnN0IHZhbGlkYXRlQ29tbWVudElucHV0ID0gZGF0YSA9PiB7XG5cbiAgY29uc3QgZXJyb3JzID0ge307XG5cbiAgZGF0YS5jb21tZW50ID0gIWlzRW1wdHkoZGF0YS5jb21tZW50KSA/IGRhdGEuY29tbWVudCA6ICcnO1xuXG4gIGlmIChWYWxpZGF0b3IuaXNFbXB0eShkYXRhLmNvbW1lbnQpKSB7XG4gICAgZXJyb3JzLmNvbW1lbnQgPSAnQ29tbWVudCBmaWVsZCBpcyByZXF1aXJlZCc7XG4gIH1cblxuICBpZiAoIVZhbGlkYXRvci5pc0xlbmd0aChkYXRhLmNvbW1lbnQsIHsgbWF4OiAxMDAgfSkpIHtcbiAgICBlcnJvcnMuY29tbWVudCA9ICdUaGUgbWluaW11bSBjaGFyYWN0ZXIgZXhwZWN0ZWQgaXMgMSB3aGlsZSBtYXhpbXVtIGlzIDEwMCc7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGVycm9ycyxcbiAgICBpc1ZhbGlkOiBpc0VtcHR5KGVycm9ycylcbiAgfTtcblxufTtcblxuZXhwb3J0IHtcbiAgdmFsaWRhdGVRdWVzdGlvbklucHV0LFxuICB2YWxpZGF0ZUFuc3dlcklucHV0LFxuICB2YWxpZGF0ZUNvbW1lbnRJbnB1dFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "questionInput.js"
      ],
      "names": [
        "validateQuestionInput",
        "data",
        "errors",
        "question",
        "Validator",
        "isLength",
        "min",
        "max",
        "isEmpty",
        "isValid",
        "validateAnswerInput",
        "answer",
        "validateCommentInput",
        "comment"
      ],
      "mappings": ";;;;;;;AACA;;AAGA;;;;AAJA;AAGA;AAGA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,IAAI,EAAI;AAEpC,MAAMC,MAAM,GAAG,EAAf;AAEAD,EAAAA,IAAI,CAACE,QAAL,GAAgB,CAAC,yBAAQF,IAAI,CAACE,QAAb,CAAD,GAA0BF,IAAI,CAACE,QAA/B,GAA0C,EAA1D;;AAEA,MAAI,CAACC,sBAAUC,QAAV,CAAmBJ,IAAI,CAACE,QAAxB,EAAkC;AAAEG,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAlC,CAAL,EAA8D;AAC5DL,IAAAA,MAAM,CAACC,QAAP,GAAkB,0DAAlB;AACD;;AAED,MAAIC,sBAAUI,OAAV,CAAkBP,IAAI,CAACE,QAAvB,CAAJ,EAAsC;AACpCD,IAAAA,MAAM,CAACC,QAAP,GAAkB,4BAAlB;AACD;;AAED,SAAO;AACLD,IAAAA,MAAM,EAANA,MADK;AAELO,IAAAA,OAAO,EAAE,yBAAQP,MAAR;AAFJ,GAAP;AAID,CAlBD;;;;AAoBA,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAT,IAAI,EAAI;AAElC,MAAMC,MAAM,GAAG,EAAf;AAEAD,EAAAA,IAAI,CAACU,MAAL,GAAc,CAAC,yBAAQV,IAAI,CAACU,MAAb,CAAD,GAAwBV,IAAI,CAACU,MAA7B,GAAsC,EAApD;;AAEA,MAAIP,sBAAUI,OAAV,CAAkBP,IAAI,CAACU,MAAvB,CAAJ,EAAoC;AAClCT,IAAAA,MAAM,CAACS,MAAP,GAAgB,0BAAhB;AACD;;AAED,MAAI,CAACP,sBAAUC,QAAV,CAAmBJ,IAAI,CAACU,MAAxB,EAAgC;AAAEL,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAhC,CAAL,EAA4D;AAC1DL,IAAAA,MAAM,CAACS,MAAP,GAAgB,0DAAhB;AACD;;AAED,SAAO;AACLT,IAAAA,MAAM,EAANA,MADK;AAELO,IAAAA,OAAO,EAAE,yBAAQP,MAAR;AAFJ,GAAP;AAID,CAlBD;;;;AAoBA,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAX,IAAI,EAAI;AAEnC,MAAMC,MAAM,GAAG,EAAf;AAEAD,EAAAA,IAAI,CAACY,OAAL,GAAe,CAAC,yBAAQZ,IAAI,CAACY,OAAb,CAAD,GAAyBZ,IAAI,CAACY,OAA9B,GAAwC,EAAvD;;AAEA,MAAIT,sBAAUI,OAAV,CAAkBP,IAAI,CAACY,OAAvB,CAAJ,EAAqC;AACnCX,IAAAA,MAAM,CAACW,OAAP,GAAiB,2BAAjB;AACD;;AAED,MAAI,CAACT,sBAAUC,QAAV,CAAmBJ,IAAI,CAACY,OAAxB,EAAiC;AAAEN,IAAAA,GAAG,EAAE;AAAP,GAAjC,CAAL,EAAqD;AACnDL,IAAAA,MAAM,CAACW,OAAP,GAAiB,0DAAjB;AACD;;AAED,SAAO;AACLX,IAAAA,MAAM,EAANA,MADK;AAELO,IAAAA,OAAO,EAAE,yBAAQP,MAAR;AAFJ,GAAP;AAKD,CAnBD",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/validations",
      "sourcesContent": [
        "// imports\nimport Validator from \"validator\";\n\n// local imports\nimport isEmpty from \"./isEmpty\";\n\nconst validateQuestionInput = data => {\n\n  const errors = {};\n\n  data.question = !isEmpty(data.question) ? data.question : '';\n\n  if (!Validator.isLength(data.question, { min: 3, max: 255 })) {\n    errors.question = \"The minimum character expected is 3 while maximum is 255\"\n  }\n\n  if (Validator.isEmpty(data.question)) {\n    errors.question = 'Question field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\nconst validateAnswerInput = data => {\n\n  const errors = {};\n\n  data.answer = !isEmpty(data.answer) ? data.answer : '';\n\n  if (Validator.isEmpty(data.answer)) {\n    errors.answer = 'Answer field is required';\n  }\n\n  if (!Validator.isLength(data.answer, { min: 5, max: 400 })) {\n    errors.answer = 'The minimum character expected is 5 while maximum is 400';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n}\n\nconst validateCommentInput = data => {\n\n  const errors = {};\n\n  data.comment = !isEmpty(data.comment) ? data.comment : '';\n\n  if (Validator.isEmpty(data.comment)) {\n    errors.comment = 'Comment field is required';\n  }\n\n  if (!Validator.isLength(data.comment, { max: 100 })) {\n    errors.comment = 'The minimum character expected is 1 while maximum is 100';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n\n};\n\nexport {\n  validateQuestionInput,\n  validateAnswerInput,\n  validateCommentInput\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572153031816
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/middlewares/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPool\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/middlewares/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/middlewares/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/middlewares/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/middlewares",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar auth = function auth(req, res, next) {\n  var token = req.header('Authorization');\n\n  if (!token) {\n    return res.status(401).json({\n      status: '401',\n      errors: {\n        message: 'Access denied. No token provided'\n      }\n    });\n  }\n\n  try {\n    var decoded = _jsonwebtoken[\"default\"].verify(token, process.env.SECRET_KEY);\n\n    req.user = decoded;\n    next();\n  } catch (e) {\n    res.status(400).json({\n      status: '400',\n      errors: e\n    });\n  }\n\n  ;\n};\n\nvar _default = auth;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiYXV0aCIsInJlcSIsInJlcyIsIm5leHQiLCJ0b2tlbiIsImhlYWRlciIsInN0YXR1cyIsImpzb24iLCJlcnJvcnMiLCJtZXNzYWdlIiwiZGVjb2RlZCIsImp3dCIsInZlcmlmeSIsInByb2Nlc3MiLCJlbnYiLCJTRUNSRVRfS0VZIiwidXNlciIsImUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQy9CLE1BQU1DLEtBQUssR0FBR0gsR0FBRyxDQUFDSSxNQUFKLENBQVcsZUFBWCxDQUFkOztBQUNBLE1BQUksQ0FBQ0QsS0FBTCxFQUFZO0FBQ1YsV0FBT0YsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELE1BQUFBLE1BQU0sRUFBRSxLQURrQjtBQUUxQkUsTUFBQUEsTUFBTSxFQUFFO0FBQUVDLFFBQUFBLE9BQU8sRUFBRTtBQUFYO0FBRmtCLEtBQXJCLENBQVA7QUFJRDs7QUFDRCxNQUFJO0FBQ0YsUUFBTUMsT0FBTyxHQUFHQyx5QkFBSUMsTUFBSixDQUFXUixLQUFYLEVBQWtCUyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFBOUIsQ0FBaEI7O0FBQ0FkLElBQUFBLEdBQUcsQ0FBQ2UsSUFBSixHQUFXTixPQUFYO0FBQ0FQLElBQUFBLElBQUk7QUFDTCxHQUpELENBSUUsT0FBT2MsQ0FBUCxFQUFVO0FBQ1ZmLElBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CRCxNQUFBQSxNQUFNLEVBQUUsS0FEVztBQUVuQkUsTUFBQUEsTUFBTSxFQUFFUztBQUZXLEtBQXJCO0FBSUQ7O0FBQUE7QUFDRixDQWxCRDs7ZUFvQmVqQixJIiwic291cmNlUm9vdCI6Ii9ob21lL2JsdWUvRGVza3RvcC9Qcm9ncmFtbWluZy9KYXZhc2NyaXB0L0RldmVsb3Blci9kZXZlbG9wZXJQb29sL2FwaS9taWRkbGV3YXJlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSBcImpzb253ZWJ0b2tlblwiO1xuXG5jb25zdCBhdXRoID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHRva2VuID0gcmVxLmhlYWRlcignQXV0aG9yaXphdGlvbicpO1xuICBpZiAoIXRva2VuKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgIHN0YXR1czogJzQwMScsXG4gICAgICBlcnJvcnM6IHsgbWVzc2FnZTogJ0FjY2VzcyBkZW5pZWQuIE5vIHRva2VuIHByb3ZpZGVkJyB9XG4gICAgfSk7XG4gIH1cbiAgdHJ5IHtcbiAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuU0VDUkVUX0tFWSk7XG4gICAgcmVxLnVzZXIgPSBkZWNvZGVkO1xuICAgIG5leHQoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgIHN0YXR1czogJzQwMCcsXG4gICAgICBlcnJvcnM6IGVcbiAgICB9KTtcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGF1dGg7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "auth",
        "req",
        "res",
        "next",
        "token",
        "header",
        "status",
        "json",
        "errors",
        "message",
        "decoded",
        "jwt",
        "verify",
        "process",
        "env",
        "SECRET_KEY",
        "user",
        "e"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,eAAX,CAAd;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,KADkB;AAE1BE,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAFkB,KAArB,CAAP;AAID;;AACD,MAAI;AACF,QAAMC,OAAO,GAAGC,yBAAIC,MAAJ,CAAWR,KAAX,EAAkBS,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAhB;;AACAd,IAAAA,GAAG,CAACe,IAAJ,GAAWN,OAAX;AACAP,IAAAA,IAAI;AACL,GAJD,CAIE,OAAOc,CAAP,EAAU;AACVf,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,KADW;AAEnBE,MAAAA,MAAM,EAAES;AAFW,KAArB;AAID;;AAAA;AACF,CAlBD;;eAoBejB,I",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPool/api/middlewares",
      "sourcesContent": [
        "import jwt from \"jsonwebtoken\";\n\nconst auth = (req, res, next) => {\n  const token = req.header('Authorization');\n  if (!token) {\n    return res.status(401).json({\n      status: '401',\n      errors: { message: 'Access denied. No token provided' }\n    });\n  }\n  try {\n    const decoded = jwt.verify(token, process.env.SECRET_KEY);\n    req.user = decoded;\n    next();\n  } catch (e) {\n    res.status(400).json({\n      status: '400',\n      errors: e\n    });\n  };\n};\n\nexport default auth;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571914036469
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _users = _interopRequireDefault(require(\"./routes/users\"));\n\nvar _questions = _interopRequireDefault(require(\"./routes/questions\"));\n\nvar _keys = _interopRequireDefault(require(\"../config/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar app = (0, _express[\"default\"])(); // manage middlewares\n\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nvar database = _keys[\"default\"].keys.DB_URL;\n\n_mongoose[\"default\"].connect(database, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n}).then(function () {\n  return console.log(\"Connected to \".concat(database));\n})[\"catch\"](function (err) {\n  return console.log(err);\n}); // register endpoints\n\n\napp.get(\"/\", function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname, \"index.html\"));\n});\napp.use(\"/api/users\", _users[\"default\"]);\napp.use(\"/api/questions\", _questions[\"default\"]);\nvar port = process.env.PORT || 5000;\nvar server = app.listen(port, function () {\n  return console.log(\"Server running on port \".concat(port));\n});\nvar _default = server;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiZGF0YWJhc2UiLCJkYXRhYmFzZUtleXMiLCJrZXlzIiwiREJfVVJMIiwibW9uZ29vc2UiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlQ3JlYXRlSW5kZXgiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImVyciIsImdldCIsInJlcSIsInJlcyIsInNlbmRGaWxlIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJ1c2VycyIsInF1ZXN0aW9ucyIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInNlcnZlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUdBOztBQUNBOztBQUNBOzs7O0FBVEE7QUFNQTtBQUtBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0UsVUFBWCxDQUF1QjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF2QixDQUFSO0FBRUEsSUFBTUMsUUFBUSxHQUFHQyxpQkFBYUMsSUFBYixDQUFrQkMsTUFBbkM7O0FBQ0FDLHFCQUNHQyxPQURILENBQ1dMLFFBRFgsRUFDcUI7QUFDakJNLEVBQUFBLGVBQWUsRUFBRSxJQURBO0FBRWpCQyxFQUFBQSxjQUFjLEVBQUUsSUFGQztBQUdqQkMsRUFBQUEsa0JBQWtCLEVBQUU7QUFISCxDQURyQixFQU1HQyxJQU5ILENBTVE7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsd0JBQTRCWCxRQUE1QixFQUFOO0FBQUEsQ0FOUixXQU9TLFVBQUFZLEdBQUc7QUFBQSxTQUFJRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsR0FBWixDQUFKO0FBQUEsQ0FQWixFLENBU0E7OztBQUNBbEIsR0FBRyxDQUFDbUIsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN6QkEsRUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWFDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsWUFBckIsQ0FBYjtBQUNELENBRkQ7QUFJQXpCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFlBQVIsRUFBc0J5QixpQkFBdEI7QUFDQTFCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGdCQUFSLEVBQTBCMEIscUJBQTFCO0FBRUEsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUVBLElBQU1DLE1BQU0sR0FBR2hDLEdBQUcsQ0FBQ2lDLE1BQUosQ0FBV0wsSUFBWCxFQUFpQjtBQUFBLFNBQU1aLE9BQU8sQ0FBQ0MsR0FBUixrQ0FBc0NXLElBQXRDLEVBQU47QUFBQSxDQUFqQixDQUFmO2VBRWVJLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlclBvb2xBcGkvYXBpIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0c1xuaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcbmltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcblxuLy8gbG9jYWwgaW1wb3J0c1xuaW1wb3J0IHVzZXJzIGZyb20gXCIuL3JvdXRlcy91c2Vyc1wiO1xuaW1wb3J0IHF1ZXN0aW9ucyBmcm9tIFwiLi9yb3V0ZXMvcXVlc3Rpb25zXCI7XG5pbXBvcnQgZGF0YWJhc2VLZXlzIGZyb20gXCIuLi9jb25maWcva2V5c1wiO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbi8vIG1hbmFnZSBtaWRkbGV3YXJlc1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCAoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xuXG5jb25zdCBkYXRhYmFzZSA9IGRhdGFiYXNlS2V5cy5rZXlzLkRCX1VSTDtcbm1vbmdvb3NlXG4gIC5jb25uZWN0KGRhdGFiYXNlLCB7XG4gICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgIHVzZUNyZWF0ZUluZGV4OiB0cnVlLFxuICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZVxuICB9KVxuICAudGhlbigoKSA9PiBjb25zb2xlLmxvZyhgQ29ubmVjdGVkIHRvICR7ZGF0YWJhc2V9YCkpXG4gIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcblxuLy8gcmVnaXN0ZXIgZW5kcG9pbnRzXG5hcHAuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUsIFwiaW5kZXguaHRtbFwiKSlcbn0pO1xuXG5hcHAudXNlKFwiL2FwaS91c2Vyc1wiLCB1c2Vycyk7XG5hcHAudXNlKFwiL2FwaS9xdWVzdGlvbnNcIiwgcXVlc3Rpb25zKTtcblxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNTAwMDtcblxuY29uc3Qgc2VydmVyID0gYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YCkpO1xuXG5leHBvcnQgZGVmYXVsdCBzZXJ2ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "database",
        "databaseKeys",
        "keys",
        "DB_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useCreateIndex",
        "useUnifiedTopology",
        "then",
        "console",
        "log",
        "err",
        "get",
        "req",
        "res",
        "sendFile",
        "path",
        "join",
        "__dirname",
        "users",
        "questions",
        "port",
        "process",
        "env",
        "PORT",
        "server",
        "listen"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;;;AATA;AAMA;AAKA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAWE,UAAX,CAAuB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAvB,CAAR;AAEA,IAAMC,QAAQ,GAAGC,iBAAaC,IAAb,CAAkBC,MAAnC;;AACAC,qBACGC,OADH,CACWL,QADX,EACqB;AACjBM,EAAAA,eAAe,EAAE,IADA;AAEjBC,EAAAA,cAAc,EAAE,IAFC;AAGjBC,EAAAA,kBAAkB,EAAE;AAHH,CADrB,EAMGC,IANH,CAMQ;AAAA,SAAMC,OAAO,CAACC,GAAR,wBAA4BX,QAA5B,EAAN;AAAA,CANR,WAOS,UAAAY,GAAG;AAAA,SAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,CAPZ,E,CASA;;;AACAlB,GAAG,CAACmB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,QAAJ,CAAaC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAb;AACD,CAFD;AAIAzB,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsByB,iBAAtB;AACA1B,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0B0B,qBAA1B;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA,IAAMC,MAAM,GAAGhC,GAAG,CAACiC,MAAJ,CAAWL,IAAX,EAAiB;AAAA,SAAMZ,OAAO,CAACC,GAAR,kCAAsCW,IAAtC,EAAN;AAAA,CAAjB,CAAf;eAEeI,M",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api",
      "sourcesContent": [
        "// imports\nimport express from \"express\";\nimport path from \"path\";\nimport bodyParser from \"body-parser\";\nimport mongoose from \"mongoose\";\n\n// local imports\nimport users from \"./routes/users\";\nimport questions from \"./routes/questions\";\nimport databaseKeys from \"../config/keys\";\n\nconst app = express();\n\n// manage middlewares\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded ({ extended: false }));\n\nconst database = databaseKeys.keys.DB_URL;\nmongoose\n  .connect(database, {\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useUnifiedTopology: true\n  })\n  .then(() => console.log(`Connected to ${database}`))\n  .catch(err => console.log(err))\n\n// register endpoints\napp.get(\"/\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"index.html\"))\n});\n\napp.use(\"/api/users\", users);\napp.use(\"/api/questions\", questions);\n\nconst port = process.env.PORT || 5000;\n\nconst server = app.listen(port, () => console.log(`Server running on port ${port}`));\n\nexport default server;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572636388795
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _gravatar = _interopRequireDefault(require(\"gravatar\"));\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nvar _auth = require(\"../validations/auth\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar router = _express[\"default\"].Router(); // @task: Signup\n// @Access: Public\n// @desc: Enable signup functionality\n\n\nrouter.post(\"/signup\", function (req, res) {\n  var _validateSignupInput = (0, _auth.validateSignupInput)(req.body.registerUser),\n      errors = _validateSignupInput.errors,\n      isValid = _validateSignupInput.isValid;\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  var _req$body$registerUse = req.body.registerUser,\n      firstName = _req$body$registerUse.firstName,\n      lastName = _req$body$registerUse.lastName,\n      userName = _req$body$registerUse.userName,\n      email = _req$body$registerUse.email,\n      password = _req$body$registerUse.password;\n\n  _User[\"default\"].findOne({\n    email: email\n  }).then(function (userFound) {\n    if (userFound) {\n      errors.global = \"Email already exists\";\n      return res.status(409).json({\n        status: '409',\n        errors: errors\n      });\n    }\n\n    var avatar = _gravatar[\"default\"].url(req.body.registerUser.email, {\n      s: '200',\n      r: 'pg',\n      d: 'mm'\n    });\n\n    var newUser = new _User[\"default\"]({\n      firstName: firstName,\n      lastName: lastName,\n      userName: userName,\n      email: email,\n      avatar: avatar,\n      password: password\n    }); // hash password function from the model. It saves\n    // and returns the newly added user or the error if any\n\n    newUser.hashPassword(newUser, res);\n  })[\"catch\"](function (err) {\n    res.json(err);\n  });\n}); // @task: Login\n// @Access: Public\n// @desc: Enable login functionality and generate token\n\nrouter.post(\"/login\", function (req, res) {\n  var _validateLoginInput = (0, _auth.validateLoginInput)(req.body.credentials),\n      isValid = _validateLoginInput.isValid,\n      errors = _validateLoginInput.errors;\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  var _req$body$credentials = req.body.credentials,\n      email = _req$body$credentials.email,\n      password = _req$body$credentials.password;\n\n  _User[\"default\"].findOne({\n    email: email\n  }).then(function (userFound) {\n    // check if user is registered\n    if (!userFound) {\n      errors.global = \"Failed to log in. Confirm email and password\";\n      return res.status(401).json({\n        status: '401',\n        errors: errors\n      });\n    } // continue and check password\n\n\n    userFound.comparePassword(password, userFound).then(function (match) {\n      if (!match) {\n        errors.global = \"Invalid credentials\";\n        return res.status(401).json({\n          status: '401',\n          errors: errors\n        });\n      } // generate authentification token\n\n\n      var token = userFound.generateAuthToken();\n      return res.status(200).json({\n        status: '200',\n        message: \"You have logged in as \".concat(email),\n        token: token,\n        user: {\n          email: userFound.email,\n          firstName: userFound.firstName,\n          lastName: userFound.lastName,\n          userName: userFound.userName,\n          avatar: userFound.avatar\n        }\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function (err) {\n    res.json(err);\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "req",
        "res",
        "body",
        "registerUser",
        "errors",
        "isValid",
        "status",
        "json",
        "firstName",
        "lastName",
        "userName",
        "email",
        "password",
        "User",
        "findOne",
        "then",
        "userFound",
        "global",
        "avatar",
        "gravatar",
        "url",
        "s",
        "r",
        "d",
        "newUser",
        "hashPassword",
        "err",
        "credentials",
        "comparePassword",
        "match",
        "token",
        "generateAuthToken",
        "message",
        "user"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes",
      "sourcesContent": [
        "// imports\nimport express from \"express\";\nimport gravatar from \"gravatar\";\n\n// local imports\nimport User from \"../models/User\";\nimport { validateSignupInput, validateLoginInput } from \"../validations/auth\"\n\nconst router = express.Router();\n\n\n// @task: Signup\n// @Access: Public\n// @desc: Enable signup functionality\nrouter.post(\"/signup\", (req, res) => {\n  const { errors, isValid } = validateSignupInput(req.body.registerUser);\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  const { firstName, lastName, userName, email, password  } = req.body.registerUser;\n\n  User\n  .findOne({ email })\n  .then(userFound => {\n    if (userFound) {\n      errors.global = \"Email already exists\"\n      return res.status(409).json({\n        status: '409',\n        errors\n      })\n    }\n\n    const avatar = gravatar.url(req.body.registerUser.email, {\n      s: '200',\n      r: 'pg',\n      d: 'mm'\n    });\n\n    const newUser = new User({\n      firstName,\n      lastName,\n      userName,\n      email,\n      avatar,\n      password\n    });\n\n    // hash password function from the model. It saves\n    // and returns the newly added user or the error if any\n    newUser.hashPassword(newUser, res);\n  })\n  .catch(err => {\n    res.json(err)\n  })\n});\n\n// @task: Login\n// @Access: Public\n// @desc: Enable login functionality and generate token\nrouter.post(\"/login\", (req, res) => {\n  const { isValid, errors } = validateLoginInput(req.body.credentials);\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  const { email, password } = req.body.credentials;\n  User\n    .findOne({ email })\n    .then(userFound => {\n      // check if user is registered\n      if (!userFound) {\n        errors.global = \"Failed to log in. Confirm email and password\";\n        return res.status(401).json({\n          status: '401',\n          errors\n        });\n      }\n      // continue and check password\n      userFound.comparePassword(password, userFound)\n        .then(match => {\n          if (!match) {\n            errors.global = \"Invalid credentials\";\n            return res.status(401).json({\n              status: '401',\n              errors\n            });\n          }\n\n          // generate authentification token\n          const token = userFound.generateAuthToken();\n          return res.status(200).json({\n            status: '200',\n            message: `You have logged in as ${email}`,\n            token,\n            user: {\n                email: userFound.email,\n                firstName: userFound.firstName,\n                lastName: userFound.lastName,\n                userName: userFound.userName,\n                avatar: userFound.avatar\n              }\n          });\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(err => {\n      res.json(err)\n    });\n});\n\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571904740323
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models/User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models/User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models/User.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _keys = _interopRequireDefault(require(\"../../config/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar Schema = _mongoose[\"default\"].Schema;\nvar userSchema = new Schema({\n  firstName: {\n    type: String,\n    required: true\n  },\n  lastName: {\n    type: String,\n    required: true\n  },\n  userName: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    index: true\n  },\n  avatar: {\n    type: String\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  confirmed: {\n    type: Boolean,\n    \"default\": false\n  },\n  isAdmin: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true\n});\n\nuserSchema.methods.hashPassword = function hashPassword(newUser, res) {\n  var _this = this;\n\n  var password = newUser.password;\n  var errors = {};\n\n  _bcryptjs[\"default\"].genSalt(10, function (err, salt) {\n    if (err) {\n      throw err;\n    }\n\n    _bcryptjs[\"default\"].hash(password, salt, function (error, hash) {\n      if (error) {\n        throw error;\n      }\n\n      _this.password = hash;\n      newUser.save().then(function (user) {\n        res.json(user);\n      })[\"catch\"](function () {\n        errors.userName = \"User name already taken\";\n        return res.status(409).json({\n          status: '409',\n          errors: errors\n        });\n      });\n    });\n  });\n};\n\nuserSchema.methods.comparePassword = function comparePassword(password, userFound) {\n  var match = _bcryptjs[\"default\"].compare(password, userFound.password).then(function (isMatch) {\n    if (!isMatch) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return match;\n};\n\nuserSchema.methods.generateAuthToken = function generateAuthToken() {\n  var token = _jsonwebtoken[\"default\"].sign({\n    _id: this._id,\n    email: this.email,\n    password: this.password,\n    isAdmin: this.isAdmin\n  }, _keys[\"default\"].keys.SECRET_KEY, {\n    expiresIn: 3600\n  });\n\n  return token;\n};\n\nvar _default = _mongoose[\"default\"].model('User', userSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJ1c2VyU2NoZW1hIiwiZmlyc3ROYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibGFzdE5hbWUiLCJ1c2VyTmFtZSIsInVuaXF1ZSIsImVtYWlsIiwibG93ZXJjYXNlIiwiaW5kZXgiLCJhdmF0YXIiLCJwYXNzd29yZCIsImNvbmZpcm1lZCIsIkJvb2xlYW4iLCJpc0FkbWluIiwidGltZXN0YW1wcyIsIm1ldGhvZHMiLCJoYXNoUGFzc3dvcmQiLCJuZXdVc2VyIiwicmVzIiwiZXJyb3JzIiwiYmNyeXB0IiwiZ2VuU2FsdCIsImVyciIsInNhbHQiLCJoYXNoIiwiZXJyb3IiLCJzYXZlIiwidGhlbiIsInVzZXIiLCJqc29uIiwic3RhdHVzIiwiY29tcGFyZVBhc3N3b3JkIiwidXNlckZvdW5kIiwibWF0Y2giLCJjb21wYXJlIiwiaXNNYXRjaCIsImdlbmVyYXRlQXV0aFRva2VuIiwidG9rZW4iLCJqd3QiLCJzaWduIiwiX2lkIiwiZGF0YWJhc2VLZXlzIiwia2V5cyIsIlNFQ1JFVF9LRVkiLCJleHBpcmVzSW4iLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUdBOzs7O0FBTkE7QUFLQTtJQUdRQSxNLEdBQVdDLG9CLENBQVhELE07QUFFUixJQUFNRSxVQUFVLEdBQUcsSUFBSUYsTUFBSixDQUFXO0FBQzVCRyxFQUFBQSxTQUFTLEVBQUU7QUFDVEMsSUFBQUEsSUFBSSxFQUFFQyxNQURHO0FBRVRDLElBQUFBLFFBQVEsRUFBRTtBQUZELEdBRGlCO0FBSzVCQyxFQUFBQSxRQUFRLEVBQUU7QUFDUkgsSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJDLElBQUFBLFFBQVEsRUFBRTtBQUZGLEdBTGtCO0FBUzVCRSxFQUFBQSxRQUFRLEVBQUU7QUFDUkosSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJDLElBQUFBLFFBQVEsRUFBRSxJQUZGO0FB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QUtBLFFBSE07QUFJckJHLElBQUFBLE9BQU8sRUFBRSxLQUFLQTtBQUpPLEdBQVQsRUFNWjRCLGlCQUFhQyxJQUFiLENBQWtCQyxVQU5OLEVBT1o7QUFBRUMsSUFBQUEsU0FBUyxFQUFFO0FBQWIsR0FQWSxDQUFkOztBQVNBLFNBQU9QLEtBQVA7QUFDRCxDQVhEOztlQWFleEMscUJBQVNnRCxLQUFULENBQWUsTUFBZixFQUF1Qi9DLFVBQXZCLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlclBvb2xBcGkvYXBpL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydHNcbmltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcbmltcG9ydCBiY3J5cHQgZnJvbSBcImJjcnlwdGpzXCI7XG5pbXBvcnQgand0IGZyb20gXCJqc29ud2VidG9rZW5cIjtcblxuLy8gbG9jYWwgaW1wb3J0c1xuaW1wb3J0IGRhdGFiYXNlS2V5cyBmcm9tIFwiLi4vLi4vY29uZmlnL2tleXNcIjtcblxuY29uc3QgeyBTY2hlbWEgfSA9IG1vbmdvb3NlO1xuXG5jb25zdCB1c2VyU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIGZpcnN0TmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBsYXN0TmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICB1c2VyTmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB1bmlxdWU6IHRydWVcbiAgfSxcbiAgZW1haWw6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIGxvd2VyY2FzZTogdHJ1ZSxcbiAgICBpbmRleDogdHJ1ZVxuICB9LFxuICBhdmF0YXI6IHtcbiAgICB0eXBlOiBTdHJpbmdcbiAgfSxcbiAgcGFzc3dvcmQ6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgY29uZmlybWVkOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9LFxuICBpc0FkbWluOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9XG59LFxue1xuICB0aW1lc3RhbXBzOiB0cnVlXG59KTtcblxudXNlclNjaGVtYS5tZXRob2RzLmhhc2hQYXNzd29yZCA9IGZ1bmN0aW9uIGhhc2hQYXNzd29yZChuZXdVc2VyLCByZXMpIHtcbiAgY29uc3QgeyBwYXNzd29yZCB9ID0gbmV3VXNlcjtcbiAgY29uc3QgZXJyb3JzID0ge307XG4gIGJjcnlwdC5nZW5TYWx0KDEwLCAoZXJyLCBzYWx0KSA9PiB7XG4gICAgaWYgKGVycikge1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgICBiY3J5cHQuaGFzaChwYXNzd29yZCwgc2FsdCwgKGVycm9yLCBoYXNoKSA9PiB7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9XG4gICAgICB0aGlzLnBhc3N3b3JkID0gaGFzaDtcbiAgICAgIG5ld1VzZXIuc2F2ZSgpXG4gICAgICAgIC50aGVuKHVzZXIgPT4ge1xuICAgICAgICAgIHJlcy5qc29uKHVzZXIpXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgZXJyb3JzLnVzZXJOYW1lID0gXCJVc2VyIG5hbWUgYWxyZWFkeSB0YWtlblwiO1xuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwOSkuanNvbih7XG4gICAgICAgICAgICBzdGF0dXM6ICc0MDknLFxuICAgICAgICAgICAgZXJyb3JzXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcbn1cblxudXNlclNjaGVtYS5tZXRob2RzLmNvbXBhcmVQYXNzd29yZCA9IGZ1bmN0aW9uIGNvbXBhcmVQYXNzd29yZChwYXNzd29yZCwgdXNlckZvdW5kKSB7XG4gIGNvbnN0IG1hdGNoID0gYmNyeXB0XG4gICAgLmNvbXBhcmUocGFzc3dvcmQsIHVzZXJGb3VuZC5wYXNzd29yZClcbiAgICAudGhlbihpc01hdGNoID0+IHtcbiAgICAgIGlmICghaXNNYXRjaCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gbWF0Y2g7XG59O1xuXG51c2VyU2NoZW1hLm1ldGhvZHMuZ2VuZXJhdGVBdXRoVG9rZW4gPSBmdW5jdGlvbiBnZW5lcmF0ZUF1dGhUb2tlbigpIHtcbiAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbih7XG4gICAgX2lkOiB0aGlzLl9pZCxcbiAgICBlbWFpbDogdGhpcy5lbWFpbCxcbiAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZCxcbiAgICBpc0FkbWluOiB0aGlzLmlzQWRtaW5cbiAgfSxcbiAgICBkYXRhYmFzZUtleXMua2V5cy5TRUNSRVRfS0VZLFxuICAgIHsgZXhwaXJlc0luOiAzNjAwIH1cbik7XG4gIHJldHVybiB0b2tlbjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdVc2VyJywgdXNlclNjaGVtYSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "userSchema",
        "firstName",
        "type",
        "String",
        "required",
        "lastName",
        "userName",
        "unique",
        "email",
        "lowercase",
        "index",
        "avatar",
        "password",
        "confirmed",
        "Boolean",
        "isAdmin",
        "timestamps",
        "methods",
        "hashPassword",
        "newUser",
        "res",
        "errors",
        "bcrypt",
        "genSalt",
        "err",
        "salt",
        "hash",
        "error",
        "save",
        "then",
        "user",
        "json",
        "status",
        "comparePassword",
        "userFound",
        "match",
        "compare",
        "isMatch",
        "generateAuthToken",
        "token",
        "jwt",
        "sign",
        "_id",
        "databaseKeys",
        "keys",
        "SECRET_KEY",
        "expiresIn",
        "model"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models",
      "sourcesContent": [
        "// imports\nimport mongoose from \"mongoose\";\nimport bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\n\n// local imports\nimport databaseKeys from \"../../config/keys\";\n\nconst { Schema } = mongoose;\n\nconst userSchema = new Schema({\n  firstName: {\n    type: String,\n    required: true\n  },\n  lastName: {\n    type: String,\n    required: true\n  },\n  userName: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    index: true\n  },\n  avatar: {\n    type: String\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  confirmed: {\n    type: Boolean,\n    default: false\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false\n  }\n},\n{\n  timestamps: true\n});\n\nuserSchema.methods.hashPassword = function hashPassword(newUser, res) {\n  const { password } = newUser;\n  const errors = {};\n  bcrypt.genSalt(10, (err, salt) => {\n    if (err) {\n      throw err;\n    }\n    bcrypt.hash(password, salt, (error, hash) => {\n      if (error) {\n        throw error;\n      }\n      this.password = hash;\n      newUser.save()\n        .then(user => {\n          res.json(user)\n        })\n        .catch(() => {\n          errors.userName = \"User name already taken\";\n          return res.status(409).json({\n            status: '409',\n            errors\n          });\n        });\n    });\n  });\n}\n\nuserSchema.methods.comparePassword = function comparePassword(password, userFound) {\n  const match = bcrypt\n    .compare(password, userFound.password)\n    .then(isMatch => {\n      if (!isMatch) {\n        return false;\n      }\n      return true;\n    });\n    return match;\n};\n\nuserSchema.methods.generateAuthToken = function generateAuthToken() {\n  const token = jwt.sign({\n    _id: this._id,\n    email: this.email,\n    password: this.password,\n    isAdmin: this.isAdmin\n  },\n    databaseKeys.keys.SECRET_KEY,\n    { expiresIn: 3600 }\n);\n  return token;\n};\n\nexport default mongoose.model('User', userSchema);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571843250389
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/config/keys.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/config/keys.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/config/keys.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/config/keys.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/config",
        "sourceFileName": "keys.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// configure dotenv\n_dotenv[\"default\"].config(); // set necessary keys\n\n\nvar devkey = {\n  DB_URL: process.env.DEV_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\nvar prodKey = {\n  DB_URL: process.env.DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\nvar testKey = {\n  DB_URL: process.env.TEST_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\nvar exportKeys = {};\n\nif (process.env.NODE_ENV === 'production') {\n  exportKeys.keys = prodKey;\n} else if (process.env.NODE_ENV === 'testing') {\n  exportKeys.keys = testKey;\n} else {\n  exportKeys.keys = devkey;\n}\n\nvar _default = exportKeys;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtleXMuanMiXSwibmFtZXMiOlsiZG90ZW52IiwiY29uZmlnIiwiZGV2a2V5IiwiREJfVVJMIiwicHJvY2VzcyIsImVudiIsIkRFVl9EQl9VUkwiLCJTRUNSRVRfS0VZIiwicHJvZEtleSIsInRlc3RLZXkiLCJURVNUX0RCX1VSTCIsImV4cG9ydEtleXMiLCJOT0RFX0VOViIsImtleXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7OztBQURBO0FBR0E7QUFDQUEsbUJBQU9DLE1BQVAsRyxDQUVBOzs7QUFDQSxJQUFNQyxNQUFNLEdBQUc7QUFDYkMsRUFBQUEsTUFBTSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFEUDtBQUViQyxFQUFBQSxVQUFVLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRTtBQUZYLENBQWY7QUFLQSxJQUFNQyxPQUFPLEdBQUc7QUFDZEwsRUFBQUEsTUFBTSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsTUFETjtBQUVkSSxFQUFBQSxVQUFVLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRTtBQUZWLENBQWhCO0FBS0EsSUFBTUUsT0FBTyxHQUFHO0FBQ2ROLEVBQUFBLE1BQU0sRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlLLFdBRE47QUFFZEgsRUFBQUEsVUFBVSxFQUFFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUU7QUFGVixDQUFoQjtBQUtBLElBQU1JLFVBQVUsR0FBRyxFQUFuQjs7QUFFQSxJQUFJUCxPQUFPLENBQUNDLEdBQVIsQ0FBWU8sUUFBWixLQUF5QixZQUE3QixFQUEyQztBQUN6Q0QsRUFBQUEsVUFBVSxDQUFDRSxJQUFYLEdBQWtCTCxPQUFsQjtBQUNELENBRkQsTUFFTyxJQUFJSixPQUFPLENBQUNDLEdBQVIsQ0FBWU8sUUFBWixLQUF5QixTQUE3QixFQUF3QztBQUM3Q0QsRUFBQUEsVUFBVSxDQUFDRSxJQUFYLEdBQWtCSixPQUFsQjtBQUNELENBRk0sTUFFQTtBQUNMRSxFQUFBQSxVQUFVLENBQUNFLElBQVgsR0FBa0JYLE1BQWxCO0FBQ0Q7O2VBRWNTLFUiLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlclBvb2xBcGkvY29uZmlnIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0c1xuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5cbi8vIGNvbmZpZ3VyZSBkb3RlbnZcbmRvdGVudi5jb25maWcoKTtcblxuLy8gc2V0IG5lY2Vzc2FyeSBrZXlzXG5jb25zdCBkZXZrZXkgPSB7XG4gIERCX1VSTDogcHJvY2Vzcy5lbnYuREVWX0RCX1VSTCxcbiAgU0VDUkVUX0tFWTogcHJvY2Vzcy5lbnYuU0VDUkVUX0tFWVxufTtcblxuY29uc3QgcHJvZEtleSA9IHtcbiAgREJfVVJMOiBwcm9jZXNzLmVudi5EQl9VUkwsXG4gIFNFQ1JFVF9LRVk6IHByb2Nlc3MuZW52LlNFQ1JFVF9LRVlcbn07XG5cbmNvbnN0IHRlc3RLZXkgPSB7XG4gIERCX1VSTDogcHJvY2Vzcy5lbnYuVEVTVF9EQl9VUkwsXG4gIFNFQ1JFVF9LRVk6IHByb2Nlc3MuZW52LlNFQ1JFVF9LRVlcbn07XG5cbmNvbnN0IGV4cG9ydEtleXMgPSB7fVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBleHBvcnRLZXlzLmtleXMgPSBwcm9kS2V5O1xufSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3RpbmcnKSB7XG4gIGV4cG9ydEtleXMua2V5cyA9IHRlc3RLZXk7XG59IGVsc2Uge1xuICBleHBvcnRLZXlzLmtleXMgPSBkZXZrZXk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGV4cG9ydEtleXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "keys.js"
      ],
      "names": [
        "dotenv",
        "config",
        "devkey",
        "DB_URL",
        "process",
        "env",
        "DEV_DB_URL",
        "SECRET_KEY",
        "prodKey",
        "testKey",
        "TEST_DB_URL",
        "exportKeys",
        "NODE_ENV",
        "keys"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;AAGA;AACAA,mBAAOC,MAAP,G,CAEA;;;AACA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADP;AAEbC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYE;AAFX,CAAf;AAKA,IAAMC,OAAO,GAAG;AACdL,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYF,MADN;AAEdI,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYE;AAFV,CAAhB;AAKA,IAAME,OAAO,GAAG;AACdN,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYK,WADN;AAEdH,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYE;AAFV,CAAhB;AAKA,IAAMI,UAAU,GAAG,EAAnB;;AAEA,IAAIP,OAAO,CAACC,GAAR,CAAYO,QAAZ,KAAyB,YAA7B,EAA2C;AACzCD,EAAAA,UAAU,CAACE,IAAX,GAAkBL,OAAlB;AACD,CAFD,MAEO,IAAIJ,OAAO,CAACC,GAAR,CAAYO,QAAZ,KAAyB,SAA7B,EAAwC;AAC7CD,EAAAA,UAAU,CAACE,IAAX,GAAkBJ,OAAlB;AACD,CAFM,MAEA;AACLE,EAAAA,UAAU,CAACE,IAAX,GAAkBX,MAAlB;AACD;;eAEcS,U",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/config",
      "sourcesContent": [
        "// imports\nimport dotenv from \"dotenv\";\n\n// configure dotenv\ndotenv.config();\n\n// set necessary keys\nconst devkey = {\n  DB_URL: process.env.DEV_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\n\nconst prodKey = {\n  DB_URL: process.env.DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\n\nconst testKey = {\n  DB_URL: process.env.TEST_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\n\nconst exportKeys = {}\n\nif (process.env.NODE_ENV === 'production') {\n  exportKeys.keys = prodKey;\n} else if (process.env.NODE_ENV === 'testing') {\n  exportKeys.keys = testKey;\n} else {\n  exportKeys.keys = devkey;\n}\n\nexport default exportKeys;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571509191726
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateLoginInput = exports.validateSignupInput = void 0;\n\nvar _validator = _interopRequireDefault(require(\"validator\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"./isEmpty\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar validateSignupInput = function validateSignupInput(data) {\n  var errors = {};\n  data.firstName = !(0, _isEmpty[\"default\"])(data.firstName) ? data.firstName : '', data.lastName = !(0, _isEmpty[\"default\"])(data.lastName) ? data.lastName : '', data.userName = !(0, _isEmpty[\"default\"])(data.userName) ? data.userName : '', data.email = !(0, _isEmpty[\"default\"])(data.email) ? data.email : '', data.password = !(0, _isEmpty[\"default\"])(data.password) ? data.password : '', data.confirmPassword = !(0, _isEmpty[\"default\"])(data.confirmPassword) ? data.confirmPassword : '';\n\n  if (!_validator[\"default\"].isLength(data.firstName, {\n    min: 1,\n    max: 20\n  })) {\n    errors.firstName = 'First name must be between 1 and 20 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.firstName)) {\n    errors.firstName = 'First name field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.lastName, {\n    min: 1,\n    max: 20\n  })) {\n    errors.lastName = 'Last name must be between 1 and 20 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.lastName)) {\n    errors.lastName = 'Last name field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.userName, {\n    min: 1,\n    max: 20\n  })) {\n    errors.userName = 'User name must be between 1 and 20 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.userName)) {\n    errors.userName = 'User name field is required';\n  }\n\n  if (!_validator[\"default\"].isEmail(data.email)) {\n    errors.email = 'Email is invalid';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.email)) {\n    errors.email = 'Email field is required';\n  }\n\n  if (!data.password.match('^(?=.{8,}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[@#$%&^+=!]).*')) {\n    errors.password = 'A good password should contain uppercase, lowercase, special characters @#$%&^+=! , digits and above 8 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  if (data.password !== data.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match!!!';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.confirmPassword)) {\n    errors.confirmPassword = 'Confirm password field is required';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateSignupInput = validateSignupInput;\n\nvar validateLoginInput = function validateLoginInput(data) {\n  var errors = {};\n  data.email = !(0, _isEmpty[\"default\"])(data.email) ? data.email : '', data.password = !(0, _isEmpty[\"default\"])(data.password) ? data.password : '';\n\n  if (!_validator[\"default\"].isEmail(data.email)) {\n    errors.email = 'Email is invalid';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.email)) {\n    errors.email = 'Email field is required';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateLoginInput = validateLoginInput;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "validateSignupInput",
        "data",
        "errors",
        "firstName",
        "lastName",
        "userName",
        "email",
        "password",
        "confirmPassword",
        "Validator",
        "isLength",
        "min",
        "max",
        "isEmpty",
        "isEmail",
        "match",
        "isValid",
        "validateLoginInput"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations",
      "sourcesContent": [
        "import Validator from \"validator\";\n\nimport isEmpty from \"./isEmpty\";\n\nconst validateSignupInput = data => {\n\n  const errors = {};\n\n  data.firstName = !isEmpty(data.firstName) ? data.firstName : '',\n  data.lastName = !isEmpty(data.lastName) ? data.lastName : '',\n  data.userName = !isEmpty(data.userName) ? data.userName : '',\n  data.email = !isEmpty(data.email) ? data.email : '',\n  data.password = !isEmpty(data.password) ? data.password : '',\n  data.confirmPassword = !isEmpty(data.confirmPassword) ? data.confirmPassword : '';\n\n  if (!Validator.isLength(data.firstName, { min: 1, max: 20 })) {\n    errors.firstName = 'First name must be between 1 and 20 characters';\n  }\n\n  if (Validator.isEmpty(data.firstName)) {\n    errors.firstName = 'First name field is required';\n  }\n\n  if (!Validator.isLength(data.lastName, { min: 1, max: 20 })) {\n    errors.lastName = 'Last name must be between 1 and 20 characters';\n  }\n\n  if (Validator.isEmpty(data.lastName)) {\n    errors.lastName = 'Last name field is required';\n  }\n\n  if (!Validator.isLength(data.userName, { min: 1, max: 20 })) {\n    errors.userName = 'User name must be between 1 and 20 characters';\n  }\n\n  if (Validator.isEmpty(data.userName)) {\n    errors.userName = 'User name field is required';\n  }\n\n  if (!Validator.isEmail(data.email)) {\n    errors.email = 'Email is invalid'\n  }\n\n  if (Validator.isEmpty(data.email)) {\n    errors.email = 'Email field is required'\n  }\n\n  if (!data.password.match('^(?=.{8,}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[@#$%&^+=!]).*')) {\n    errors.password = 'A good password should contain uppercase, lowercase, special characters @#$%&^+=! , digits and above 8 characters'\n  }\n\n  if (Validator.isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  if (data.password !== data.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match!!!';\n  }\n\n  if (Validator.isEmpty(data.confirmPassword)) {\n    errors.confirmPassword = 'Confirm password field is required'\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\nconst validateLoginInput = data => {\n\n  const errors = {};\n\n  data.email = !isEmpty(data.email) ? data.email : '',\n  data.password = !isEmpty(data.password) ? data.password : '';\n\n  if (!Validator.isEmail(data.email)) {\n    errors.email = 'Email is invalid';\n  }\n\n  if (Validator.isEmpty(data.email)) {\n    errors.email = 'Email field is required';\n  }\n\n  if (Validator.isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n\n};\n\nexport {\n  validateSignupInput,\n  validateLoginInput\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571907224519
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/isEmpty.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/isEmpty.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/isEmpty.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/isEmpty.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations",
        "sourceFileName": "isEmpty.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar isEmpty = function isEmpty(value) {\n  return value === undefined || value === null || _typeof(value) === 'object' && Object.keys(value).length === 0 || typeof value === 'string' && value.trim().length === 0;\n};\n\nvar _default = isEmpty;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzRW1wdHkuanMiXSwibmFtZXMiOlsiaXNFbXB0eSIsInZhbHVlIiwidW5kZWZpbmVkIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInRyaW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQU1BLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUFDLEtBQUs7QUFBQSxTQUNuQkEsS0FBSyxLQUFLQyxTQUFWLElBQ0FELEtBQUssS0FBSyxJQURWLElBRUMsUUFBT0EsS0FBUCxNQUFpQixRQUFqQixJQUE2QkUsTUFBTSxDQUFDQyxJQUFQLENBQVlILEtBQVosRUFBbUJJLE1BQW5CLEtBQThCLENBRjVELElBR0MsT0FBT0osS0FBUCxLQUFpQixRQUFqQixJQUE2QkEsS0FBSyxDQUFDSyxJQUFOLEdBQWFELE1BQWIsS0FBd0IsQ0FKbkM7QUFBQSxDQUFyQjs7ZUFNZUwsTyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ibHVlL0Rlc2t0b3AvUHJvZ3JhbW1pbmcvSmF2YXNjcmlwdC9EZXZlbG9wZXIvZGV2ZWxvcGVyUG9vbEFwaS9hcGkvdmFsaWRhdGlvbnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpc0VtcHR5ID0gdmFsdWUgPT5cbiAgdmFsdWUgPT09IHVuZGVmaW5lZCB8fFxuICB2YWx1ZSA9PT0gbnVsbCB8fFxuICAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiBPYmplY3Qua2V5cyh2YWx1ZSkubGVuZ3RoID09PSAwKSB8fFxuICAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS50cmltKCkubGVuZ3RoID09PSAwKVxuXG5leHBvcnQgZGVmYXVsdCBpc0VtcHR5O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "isEmpty.js"
      ],
      "names": [
        "isEmpty",
        "value",
        "undefined",
        "Object",
        "keys",
        "length",
        "trim"
      ],
      "mappings": ";;;;;;;;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnBA,KAAK,KAAKC,SAAV,IACAD,KAAK,KAAK,IADV,IAEC,QAAOA,KAAP,MAAiB,QAAjB,IAA6BE,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MAAnB,KAA8B,CAF5D,IAGC,OAAOJ,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACK,IAAN,GAAaD,MAAb,KAAwB,CAJnC;AAAA,CAArB;;eAMeL,O",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations",
      "sourcesContent": [
        "const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0)\n\nexport default isEmpty;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571378142870
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes/questions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes/questions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes/questions.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes/questions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes",
        "sourceFileName": "questions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _auth = _interopRequireDefault(require(\"../middlewares/auth\"));\n\nvar _Question = _interopRequireDefault(require(\"../models/Question\"));\n\nvar _questionInput = require(\"../validations/questionInput\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar router = _express[\"default\"].Router(); // @task: Post a question\n// @Access: Private(User)\n// @desc: Enable logged in users to ask questions\n\n\nrouter.post(\"/question\", _auth[\"default\"], function (req, res) {\n  var _validateQuestionInpu = (0, _questionInput.validateQuestionInput)(req.body.addQuestion),\n      errors = _validateQuestionInpu.errors,\n      isValid = _validateQuestionInpu.isValid;\n\n  if (!isValid) {\n    res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  var question = req.body.addQuestion.question;\n\n  _Question[\"default\"].findOne({\n    question: question\n  }).then(function (questionFound) {\n    if (questionFound) {\n      // abort the process and give relevant response\n      return res.status(409).json({\n        status: '409',\n        questionExists: 'question already asked',\n        request: {\n          type: 'GET',\n          url: \"http://127.0.0.1:8080/api/questions/\".concat(questionFound._id)\n        }\n      });\n    }\n\n    var newQuestion = new _Question[\"default\"]({\n      user: req.user._id,\n      question: question\n    }); // save to database\n\n    newQuestion.save().then(function (savedQuestion) {\n      res.status(201).json({\n        status: '201',\n        savedQuestion: {\n          _id: savedQuestion._id,\n          question: savedQuestion.question,\n          user: {\n            _id: savedQuestion.user._id\n          }\n        }\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n}); // @task: Get all question\n// @Access: Public\n// @desc: Enable anyone to view the questions\n\nrouter.get(\"/questions\", function (req, res) {\n  _Question[\"default\"].find().select('_id question user').populate('user', ['userName']).then(function (questionsFound) {\n    if (questionsFound.length === 0) {\n      return res.json({\n        status: '404',\n        errors: {\n          notFound: 'There are no questions available'\n        }\n      });\n    } // continue\n\n\n    return res.json({\n      status: '200',\n      message: 'Question(s) listed below',\n      count: questionsFound.length,\n      questionsFound: questionsFound\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n}); // @task: Get a question by id\n// @Access: Private\n// @desc: Enable logged in user to view the question by id\n\nrouter.get(\"/:question_id\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).select('_id question answers user').populate('user', ['userName']).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    }\n\n    res.status(200).json({\n      status: '200',\n      questionFound: questionFound\n    });\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Edit (PUT) a question if there are no answers\n// @Access: Private(User)\n// @desc: Enable question owner to edit, should be logged in\n\nrouter.put(\"/:question_id\", _auth[\"default\"], function (req, res) {\n  var params = req.params.question_id;\n  var updateQuestion = req.body.putQuestion;\n  var question = updateQuestion.question;\n\n  var _validateQuestionInpu2 = (0, _questionInput.validateQuestionInput)(updateQuestion),\n      errors = _validateQuestionInpu2.errors,\n      isValid = _validateQuestionInpu2.isValid; // validate question update field input\n\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  _Question[\"default\"].findOne({\n    _id: params\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // check to confirm the update is granted to the user who asked the question\n\n\n    if (questionFound.user.toString() !== req.user._id) {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          noAuth: 'You don/t have that permission to edit the question'\n        }\n      });\n    } // check if question already has answers\n    // ensure no updates if the question already has answers\n\n\n    if (questionFound.answers.length !== 0) {\n      return res.status(400).json({\n        status: '400',\n        errors: {\n          answerFound: 'The question cannot be edited since it already has answers'\n        }\n      });\n    } // check for changes in question\n    // ensure no updates if no changes detected\n\n\n    if (questionFound.question === question) {\n      return res.status(409).json({\n        status: '409',\n        errors: {\n          noChange: 'No changes in question detected'\n        }\n      });\n    }\n\n    _Question[\"default\"].findOneAndUpdate({\n      _id: params\n    }, updateQuestion, {\n      \"new\": true\n    }).select('_id question answers user').then(function (updatedQuestion) {\n      res.status(200).json({\n        status: '200',\n        message: 'Question successfully updated',\n        updatedQuestion: updatedQuestion\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Delete a question by id\n// @Access: Private(Admin, User)\n// @desc: Enable question owner and admin to delete question\n\nrouter[\"delete\"](\"/:question_id\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    // check if question exists\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id is either deleted or does not exists'\n        }\n      });\n    } // check owner\n\n\n    if (questionFound.user.toString() === req.user._id || req.user.isAdmin === true) {\n      questionFound.remove().then(function () {\n        return res.status(200).json({\n          status: '200',\n          message: 'Question deleted'\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n    } else {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          noAuth: 'You don/t have that permission to delete the question'\n        }\n      });\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id is either deleted or does not exists'\n      }\n    });\n  });\n}); // @task: Answer a question\n// @Access: Private(Users)\n// @desc: Enable users to answers a question\n\nrouter.post(\"/:question_id/answer\", _auth[\"default\"], function (req, res) {\n  var addAnswer = req.body.addAnswer;\n  var answer = addAnswer.answer;\n\n  var _validateAnswerInput = (0, _questionInput.validateAnswerInput)(addAnswer),\n      errors = _validateAnswerInput.errors,\n      isValid = _validateAnswerInput.isValid; // check for empty fields\n\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // get user id and question id\n\n\n    var user = req.user._id;\n    var question = questionFound._id; // set answer\n\n    var newAnswer = {\n      answer: answer,\n      user: user,\n      question: question\n    }; // add the answer\n\n    questionFound.answers.unshift(newAnswer); // save the answer\n\n    questionFound.save().then(function (answered) {\n      return res.status(201).json({\n        status: '201',\n        _id: answered._id,\n        user: answered.user,\n        question: answered.question,\n        answers: answered.answers\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Check an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to check one answer as accepted\n\nrouter.post(\"/:question_id/:answer_id/check\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // confirm only the question owner can check it as accepted\n\n\n    if (questionFound.user.toString() !== req.user._id) {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          notAuth: 'Only the question owner can check an answer'\n        }\n      });\n    } // confirm no question is checked\n\n\n    for (var i = 0; i < questionFound.answers.length; i++) {\n      if (questionFound.answers[i].check) {\n        return res.json({\n          status: '400',\n          errors: {\n            alreadyChecked: 'You have already checked another answer'\n          }\n        });\n        ;\n      }\n    } // filter the answers to get obtain favorite answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer_id that matches the params\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // check key and user id value\n\n\n    var check = {\n      check: req.user._id\n    }; // save user id\n\n    for (var _i = 0; _i < filteredAnswer.length; _i++) {\n      filteredAnswer[_i].set(check);\n\n      questionFound.save().then(function (checkedQuestion) {\n        res.json({\n          status: '201',\n          message: 'Answer checked',\n          checkedQuestion: checkedQuestion\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Answer by that id not found'\n      }\n    });\n  });\n}); // @task: Uncheck an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to uncheck an answer\n\nrouter.post(\"/:question_id/:answer_id/uncheck\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // confirm only the question owner can uncheck an accepted answer\n\n\n    if (questionFound.user.toString() !== req.user._id) {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          noAuth: 'Only the question owner can uncheck an answer'\n        }\n      });\n    } // check if answer exists\n\n\n    var confirmQuestionExists = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return if answer doesn't exist\n\n    if (confirmQuestionExists.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // confirm if the answer has been checked before unchecking\n\n\n    for (var i = 0; confirmQuestionExists.length; i++) {\n      if (!confirmQuestionExists[i].check) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            notChecked: 'The answer has not been checked'\n          }\n        });\n      } // uncheck answer\n\n\n      confirmQuestionExists[i].check = null; // save\n\n      questionFound.save().then(function (answer) {\n        return res.status(200).json({\n          status: '200',\n          message: 'Answer unchecked',\n          answer: answer\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to upvote an answer they like\n\nrouter.post(\"/:question_id/:answer_id/upvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    });\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // ensure a user upvotes once\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      var filterUpvote = filteredAnswer[i].upvote.filter(function (upvote) {\n        return upvote.user.toString() === req.user._id;\n      });\n\n      if (filterUpvote.length !== 0) {\n        return res.status(400).json({\n          status: '404',\n          errors: {\n            alreadyUpvoted: 'You have already upvoted this answer'\n          }\n        });\n      } // set upvote\n\n\n      var makeUpvote = {\n        user: req.user._id\n      }; // make upvote\n\n      filteredAnswer[i].upvote.unshift(makeUpvote); // save\n\n      questionFound.save().then(function (answer) {\n        res.status(201).json({\n          status: '201',\n          message: 'You have upvoted the answer',\n          answer: answer\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Un-upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-upvote an answer they have upvoted\n\nrouter.post(\"/:question_id/:answer_id/unupvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    });\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // un-upvote if and only if the answer has been upvoted\n    // ensure that only the upvoter can un-upvote\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      var filterUpvote = filteredAnswer[i].upvote.filter(function (upvote) {\n        return upvote.user.toString() === req.user._id;\n      });\n\n      if (filterUpvote.length === 0) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            notUpvoted: 'You have not upvoted the answer'\n          }\n        });\n      } // create remove index\n\n\n      var removeIndex = filteredAnswer[i].upvote.map(function (upvote) {\n        return upvote.user.toString();\n      }).indexOf(req.user._id); // remove upvote\n\n      filteredAnswer[i].upvote.splice(removeIndex, 1); // save\n\n      questionFound.save().then(function (unupvote) {\n        return res.status(200).json({\n          status: '200',\n          message: 'You have un upvoted the answer',\n          unupvote: unupvote\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n\n    ;\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to downvote an answer they don't prefer\n\nrouter.post(\"/:question_id/:answer_id/downvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    }\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      // check if the user has already downvoted\n      var filterDownvote = filteredAnswer[i].downvote.filter(function (downvote) {\n        return downvote.user.toString() === req.user._id;\n      }); // return 400 bad request if the user has already downvoted\n\n      if (filterDownvote.length !== 0) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            alreadyDownvoted: 'You have already downvoted'\n          }\n        });\n      } // create downvote\n\n\n      var makeDownvote = {\n        user: req.user._id\n      }; // set downvote\n\n      filteredAnswer[i].downvote.unshift(makeDownvote); // save\n\n      questionFound.save().then(function (downvote) {\n        res.status(201).json({\n          status: '201',\n          message: 'You have downvoted the answer',\n          downvote: downvote\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Un-downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-downvote an answer they have downvoted\n\nrouter.post(\"/:question_id/:answer_id/undownvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // ensure no un-downvoting for non downvoted answers\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      console.log(filteredAnswer[i]); // filter downvotes\n\n      var filterDownvote = filteredAnswer[i].downvote.filter(function (downvote) {\n        return downvote.user.toString() === req.user._id;\n      }); // return bad request if user has not downvoted\n\n      if (filterDownvote.length === 0) {\n        return res.status(400).json({\n          status: '400',\n          notDownvoted: 'You have not downvoted the answer'\n        });\n      } // create remove index\n\n\n      var removeIndex = filteredAnswer[i].downvote.map(function (undownvote) {\n        return undownvote.user.toString();\n      }).indexOf(req.user._id); // un-downvote\n\n      filteredAnswer[i].downvote.splice(removeIndex, 1); // save\n\n      questionFound.save().then(function (undownvoted) {\n        return res.status(200).json({\n          status: '200',\n          message: 'You have un downvoted the answer',\n          undownvoted: undownvoted\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Comment on an answer\n// @Access: Private(Users)\n// @desc: Enable users to comment on an answer\n\nrouter.post(\"/:question_id/:answer_id/comment\", _auth[\"default\"], function (req, res) {\n  var addComment = req.body.addComment;\n\n  var _validateCommentInput = (0, _questionInput.validateCommentInput)(addComment),\n      errors = _validateCommentInput.errors,\n      isValid = _validateCommentInput.isValid; // return error if no comment field or if field is empty\n\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // access array like object\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      // get the comment\n      var comment = addComment.comment; // create comment object\n\n      var newComment = {\n        user: req.user._id,\n        answer: filteredAnswer[i]._id,\n        comment: comment\n      }; // set the object\n\n      filteredAnswer[i].comments.unshift(newComment);\n      questionFound.save().then(function (commented) {\n        return res.status(201).json({\n          status: '201',\n          message: 'Answer commented',\n          commented: commented\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Question with most answers\n// @Access: Private(Users)\n// @desc: Enable users to view the question with most answers\n\nrouter.get(\"/questions/mostanswered\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].find().select('_id user question answers').populate('user', ['userName']).then(function (questionsFound) {\n    if (questionsFound.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'There are no questions available'\n        }\n      });\n    } // continue\n    // map the answers and the number of answers in specifice questions\n\n\n    var mappedAnswers = questionsFound.map(function (question) {\n      return question.answers.length;\n    }); // check for questions with no answers\n\n    var noAnswers = questionsFound.filter(function (question) {\n      return question.answers.length === 0;\n    }); // return if no answers yet\n\n    if (mappedAnswers.length === noAnswers.length) {\n      return res.status(400).json({\n        status: '400',\n        errors: {\n          noAnswers: 'There are no answers yet for the questions'\n        }\n      });\n    } // get the search index on question with the highest answers\n\n\n    var searchIndex = mappedAnswers.indexOf(Math.max.apply(Math, _toConsumableArray(mappedAnswers))); // get the question with most answers\n\n    var mostAnswered = questionsFound[searchIndex]; // handle a case where there more than one question with equal -\n    // and highest answers\n    // map question answers\n\n    var moreThanOneQuestion = questionsFound.map(function (question) {\n      return question.answers;\n    }); // get array of questions with highest matched answers\n\n    var filterMoreThanOneQuestion = moreThanOneQuestion.filter(function (answers) {\n      return answers.length === Math.max.apply(Math, _toConsumableArray(mappedAnswers));\n    });\n\n    if (filterMoreThanOneQuestion.length <= 1) {\n      return res.status(200).json({\n        status: '200',\n        answersCount: mostAnswered.answers.length,\n        message: \"The question from \".concat(mostAnswered.user.userName, \" received most answers, (\").concat(mostAnswered.answers.length, \") in total\"),\n        mostAnswered: mostAnswered\n      });\n    }\n\n    return res.status(200).json({\n      status: '200',\n      answersCount: mostAnswered.answers.length,\n      message: \"The question from \".concat(mostAnswered.user.userName, \" received most answers, (\").concat(mostAnswered.answers.length, \") in total\"),\n      note: 'There are other question with the same number of answers. However, this question was asked earlier.',\n      mostAnswered: mostAnswered\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n}); // @task: All user questions\n// @Access: Private(Users)\n// @desc: Enable users to view all their questions\n\nrouter.get(\"/questions/all\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].find({\n    user: req.user._id\n  }).select('_id user question answers').then(function (userQuestions) {\n    if (userQuestions.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'This user has no questions yet'\n        }\n      });\n    } // continue\n\n\n    var noOfQuestions = userQuestions.length;\n    res.status(200).json({\n      status: '200',\n      questionsCount: noOfQuestions,\n      message: \"You have \".concat(noOfQuestions, \" questions\"),\n      userQuestions: userQuestions\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "questions.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "auth",
        "req",
        "res",
        "body",
        "addQuestion",
        "errors",
        "isValid",
        "status",
        "json",
        "question",
        "Question",
        "findOne",
        "then",
        "questionFound",
        "questionExists",
        "request",
        "type",
        "url",
        "_id",
        "newQuestion",
        "user",
        "save",
        "savedQuestion",
        "err",
        "get",
        "find",
        "select",
        "populate",
        "questionsFound",
        "length",
        "notFound",
        "message",
        "count",
        "params",
        "question_id",
        "put",
        "updateQuestion",
        "putQuestion",
        "toString",
        "noAuth",
        "answers",
        "answerFound",
        "noChange",
        "findOneAndUpdate",
        "updatedQuestion",
        "isAdmin",
        "remove",
        "addAnswer",
        "answer",
        "newAnswer",
        "unshift",
        "answered",
        "notAuth",
        "i",
        "check",
        "alreadyChecked",
        "filteredAnswer",
        "filter",
        "answer_id",
        "set",
        "checkedQuestion",
        "confirmQuestionExists",
        "notChecked",
        "filterUpvote",
        "upvote",
        "alreadyUpvoted",
        "makeUpvote",
        "notUpvoted",
        "removeIndex",
        "map",
        "indexOf",
        "splice",
        "unupvote",
        "filterDownvote",
        "downvote",
        "alreadyDownvoted",
        "makeDownvote",
        "console",
        "log",
        "notDownvoted",
        "undownvote",
        "undownvoted",
        "addComment",
        "comment",
        "newComment",
        "comments",
        "commented",
        "mappedAnswers",
        "noAnswers",
        "searchIndex",
        "Math",
        "max",
        "mostAnswered",
        "moreThanOneQuestion",
        "filterMoreThanOneQuestion",
        "answersCount",
        "userName",
        "note",
        "userQuestions",
        "noOfQuestions",
        "questionsCount"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/routes",
      "sourcesContent": [
        "// imports\nimport express from \"express\";\n\n// local imports\nimport auth from \"../middlewares/auth\";\nimport Question from \"../models/Question\";\nimport {\n  validateQuestionInput, validateAnswerInput, validateCommentInput\n} from \"../validations/questionInput\";\n\nconst router = express.Router();\n\n\n// @task: Post a question\n// @Access: Private(User)\n// @desc: Enable logged in users to ask questions\nrouter.post(\"/question\", auth, (req, res) => {\n  const { errors, isValid } = validateQuestionInput(req.body.addQuestion);\n  if (!isValid) {\n    res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  const { question } = req.body.addQuestion;\n  Question\n    .findOne({question})\n    .then(questionFound => {\n      if (questionFound) {\n        // abort the process and give relevant response\n          return res.status(409).json({\n            status: '409',\n            questionExists: 'question already asked',\n            request: {\n              type: 'GET',\n              url: `http://127.0.0.1:8080/api/questions/${questionFound._id}`\n            }\n          });\n      }\n      const newQuestion = new Question({\n        user: req.user._id,\n        question\n      });\n      // save to database\n      newQuestion\n        .save()\n        .then(savedQuestion => {\n          res.status(201).json({\n            status: '201',\n            savedQuestion: {\n              _id: savedQuestion._id,\n              question: savedQuestion.question,\n              user: {\n                _id: savedQuestion.user._id\n              }\n            }\n          })\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(err => res.json(err));\n});\n\n// @task: Get all question\n// @Access: Public\n// @desc: Enable anyone to view the questions\nrouter.get(\"/questions\", (req, res) => {\n  Question\n    .find()\n    .select('_id question user')\n    .populate('user', ['userName'])\n    .then(questionsFound => {\n      if (questionsFound.length === 0) {\n        return res.json({\n          status: '404',\n          errors: {\n            notFound: 'There are no questions available'\n          }\n        });\n      }\n      // continue\n      return res.json({\n        status: '200',\n        message: 'Question(s) listed below',\n        count: questionsFound.length,\n        questionsFound\n      });\n    })\n    .catch(err => res.json(err));\n});\n\n// @task: Get a question by id\n// @Access: Private\n// @desc: Enable logged in user to view the question by id\nrouter.get(\"/:question_id\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .select('_id question answers user')\n    .populate('user', ['userName'])\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      res.status(200).json({\n        status: '200',\n        questionFound\n      });\n    })\n    .catch(() => res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    }));\n});\n\n// @task: Edit (PUT) a question if there are no answers\n// @Access: Private(User)\n// @desc: Enable question owner to edit, should be logged in\nrouter.put(\"/:question_id\", auth, (req, res) => {\n  const params = req.params.question_id;\n  const updateQuestion = req.body.putQuestion;\n  const { question } = updateQuestion;\n  const { errors, isValid } = validateQuestionInput(updateQuestion);\n\n  // validate question update field input\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  Question\n    .findOne({ _id: params })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // check to confirm the update is granted to the user who asked the question\n      if (questionFound.user.toString() !== req.user._id) {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            noAuth: 'You don/t have that permission to edit the question'\n          }\n        });\n      }\n\n      // check if question already has answers\n      // ensure no updates if the question already has answers\n      if (questionFound.answers.length !== 0) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            answerFound: 'The question cannot be edited since it already has answers'\n          }\n        });\n      }\n\n      // check for changes in question\n      // ensure no updates if no changes detected\n      if (questionFound.question === question) {\n        return res.status(409).json({\n          status: '409',\n          errors: {\n            noChange: 'No changes in question detected'\n          }\n        });\n      }\n\n      Question\n        .findOneAndUpdate({ _id: params }, updateQuestion, { new: true })\n        .select('_id question answers user')\n        .then(updatedQuestion => {\n          res.status(200).json({\n            status: '200',\n            message: 'Question successfully updated',\n            updatedQuestion\n          })\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(() => res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    }));\n});\n\n// @task: Delete a question by id\n// @Access: Private(Admin, User)\n// @desc: Enable question owner and admin to delete question\nrouter.delete(\"/:question_id\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      // check if question exists\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id is either deleted or does not exists'\n          }\n        });\n      }\n\n      // check owner\n      if (questionFound.user.toString() === req.user._id || req.user.isAdmin === true) {\n        questionFound\n          .remove()\n          .then(() => res.status(200).json({\n            status: '200',\n            message: 'Question deleted'\n          }))\n          .catch(err => res.json(err));\n      } else {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            noAuth: 'You don/t have that permission to delete the question'\n          }\n        });\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id is either deleted or does not exists'\n        }\n      });\n    });\n});\n\n// @task: Answer a question\n// @Access: Private(Users)\n// @desc: Enable users to answers a question\nrouter.post(\"/:question_id/answer\", auth, (req, res) => {\n  const { addAnswer } = req.body;\n  const { answer } = addAnswer;\n  const { errors, isValid } = validateAnswerInput(addAnswer);\n\n  // check for empty fields\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n\n      // get user id and question id\n      const user = req.user._id;\n      const question = questionFound._id;\n\n      // set answer\n      const newAnswer = {\n        answer,\n        user,\n        question\n      };\n\n      // add the answer\n      questionFound\n        .answers\n        .unshift(newAnswer)\n\n      // save the answer\n      questionFound\n        .save()\n        .then(answered => {\n          return res.status(201).json({\n            status: '201',\n            _id: answered._id,\n            user: answered.user,\n            question: answered.question,\n            answers: answered.answers\n          })\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Check an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to check one answer as accepted\nrouter.post(\"/:question_id/:answer_id/check\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // confirm only the question owner can check it as accepted\n      if (questionFound.user.toString() !== req.user._id) {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            notAuth: 'Only the question owner can check an answer'\n          }\n        });\n      }\n\n      // confirm no question is checked\n      for (let i = 0; i < questionFound.answers.length; i++) {\n        if (questionFound.answers[i].check) {\n          return res.json({\n            status: '400',\n            errors: {\n              alreadyChecked: 'You have already checked another answer'\n            }\n          });;\n        }\n      }\n\n      // filter the answers to get obtain favorite answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer_id that matches the params\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      // check key and user id value\n      const check = {\n        check: req.user._id\n      }\n      // save user id\n      for (let i = 0; i < filteredAnswer.length; i++) {\n        filteredAnswer[i]\n          .set(check)\n        questionFound\n          .save()\n          .then(checkedQuestion => {\n            res.json({\n              status: '201',\n              message: 'Answer checked',\n              checkedQuestion\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    })\n});\n\n// @task: Uncheck an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to uncheck an answer\nrouter.post(\"/:question_id/:answer_id/uncheck\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // confirm only the question owner can uncheck an accepted answer\n      if (questionFound.user.toString() !== req.user._id) {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            noAuth: 'Only the question owner can uncheck an answer'\n          }\n        });\n      }\n\n      // check if answer exists\n      const confirmQuestionExists = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return if answer doesn't exist\n      if (confirmQuestionExists.length === 0) {\n        return  res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      // confirm if the answer has been checked before unchecking\n      for (let i = 0; confirmQuestionExists.length; i++) {\n        if (!confirmQuestionExists[i].check) {\n          return res.status(400).json({\n            status: '400',\n            errors: {\n              notChecked: 'The answer has not been checked'\n            }\n          });\n        }\n        // uncheck answer\n        confirmQuestionExists[i].check = null;\n        // save\n        questionFound\n          .save()\n          .then(answer => {\n            return res.status(200).json({\n              status: '200',\n              message: 'Answer unchecked',\n              answer\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to upvote an answer they like\nrouter.post(\"/:question_id/:answer_id/upvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n      // ensure a user upvotes once\n      for (let i = 0; filteredAnswer.length; i++) {\n        const filterUpvote = filteredAnswer[i]\n          .upvote\n          .filter(upvote => upvote.user.toString() === req.user._id);\n        if (filterUpvote.length !== 0) {\n          return res.status(400).json({\n            status: '404',\n            errors: {\n              alreadyUpvoted: 'You have already upvoted this answer'\n            }\n          });\n        }\n        // set upvote\n        const makeUpvote = {\n          user: req.user._id\n        };\n        // make upvote\n        filteredAnswer[i]\n          .upvote\n          .unshift(makeUpvote)\n        // save\n        questionFound\n          .save()\n          .then(answer => {\n            res.status(201).json({\n              status: '201',\n              message: 'You have upvoted the answer',\n              answer\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Un-upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-upvote an answer they have upvoted\nrouter.post(\"/:question_id/:answer_id/unupvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      // un-upvote if and only if the answer has been upvoted\n      // ensure that only the upvoter can un-upvote\n      for (let i = 0; filteredAnswer.length; i++) {\n        const filterUpvote = filteredAnswer[i]\n          .upvote\n          .filter(upvote => upvote.user.toString() === req.user._id);\n\n        if (filterUpvote.length === 0) {\n          return res.status(400).json({\n            status: '400',\n            errors: {\n              notUpvoted: 'You have not upvoted the answer'\n            }\n          });\n        }\n\n        // create remove index\n        const removeIndex = filteredAnswer[i]\n          .upvote\n          .map(upvote => upvote.user.toString())\n          .indexOf(req.user._id);\n\n        // remove upvote\n        filteredAnswer[i]\n          .upvote\n          .splice(removeIndex, 1)\n\n        // save\n        questionFound\n          .save()\n          .then(unupvote => {\n            return res.status(200).json({\n              status: '200',\n              message: 'You have un upvoted the answer',\n              unupvote\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      };\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    })\n});\n\n// @task: Downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to downvote an answer they don't prefer\nrouter.post(\"/:question_id/:answer_id/downvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      for (let i = 0; filteredAnswer.length; i++) {\n        // check if the user has already downvoted\n        const filterDownvote = filteredAnswer[i]\n          .downvote\n          .filter(downvote => downvote.user.toString() === req.user._id);\n\n        // return 400 bad request if the user has already downvoted\n        if (filterDownvote.length !== 0) {\n          return res.status(400).json({\n            status: '400',\n            errors: {\n              alreadyDownvoted: 'You have already downvoted'\n            }\n          });\n        }\n\n        // create downvote\n        const makeDownvote = {\n          user: req.user._id\n        };\n\n        // set downvote\n        filteredAnswer[i]\n          .downvote\n          .unshift(makeDownvote)\n\n        // save\n        questionFound\n          .save()\n          .then(downvote => {\n            res.status(201).json({\n              status: '201',\n              message: 'You have downvoted the answer',\n              downvote\n            })\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Un-downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-downvote an answer they have downvoted\nrouter.post(\"/:question_id/:answer_id/undownvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n      // ensure no un-downvoting for non downvoted answers\n      for (let i = 0; filteredAnswer.length; i++) {\n        console.log(filteredAnswer[i]);\n        // filter downvotes\n        const filterDownvote = filteredAnswer[i]\n          .downvote\n          .filter(downvote => downvote.user.toString() === req.user._id);\n\n        // return bad request if user has not downvoted\n        if (filterDownvote.length === 0) {\n          return res.status(400).json({\n            status: '400',\n            notDownvoted: 'You have not downvoted the answer'\n          });\n        }\n\n        // create remove index\n        const removeIndex = filteredAnswer[i]\n          .downvote\n          .map(undownvote => undownvote.user.toString())\n          .indexOf(req.user._id);\n\n        // un-downvote\n        filteredAnswer[i]\n          .downvote\n          .splice(removeIndex, 1)\n\n        // save\n        questionFound\n          .save()\n          .then(undownvoted => {\n            return res.status(200).json({\n              status: '200',\n              message: 'You have un downvoted the answer',\n              undownvoted\n            });\n          })\n          .catch(err => res.json(err));\n\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Comment on an answer\n// @Access: Private(Users)\n// @desc: Enable users to comment on an answer\nrouter.post(\"/:question_id/:answer_id/comment\", auth, (req, res) => {\n  const { addComment } = req.body;\n  const { errors, isValid } = validateCommentInput(addComment);\n\n  // return error if no comment field or if field is empty\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n      // access array like object\n      for (let i = 0; filteredAnswer.length; i++) {\n        // get the comment\n        const { comment } = addComment;\n\n        // create comment object\n        const newComment = {\n          user: req.user._id,\n          answer: filteredAnswer[i]._id,\n          comment\n        };\n\n        // set the object\n        filteredAnswer[i]\n          .comments\n          .unshift(newComment);\n\n        questionFound\n          .save()\n          .then(commented => {\n            return res.status(201).json({\n              status: '201',\n              message: 'Answer commented',\n              commented\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Question with most answers\n// @Access: Private(Users)\n// @desc: Enable users to view the question with most answers\nrouter.get(\"/questions/mostanswered\", auth, (req, res) => {\n  Question\n    .find()\n    .select('_id user question answers')\n    .populate('user', ['userName'])\n    .then(questionsFound => {\n      if (questionsFound.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'There are no questions available'\n          }\n        })\n      }\n      // continue\n      // map the answers and the number of answers in specifice questions\n      const mappedAnswers = questionsFound\n        .map(question => question.answers.length);\n\n      // check for questions with no answers\n      const noAnswers = questionsFound\n        .filter(question => question.answers.length === 0);\n\n      // return if no answers yet\n      if (mappedAnswers.length === noAnswers.length) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            noAnswers: 'There are no answers yet for the questions'\n          }\n        });\n      }\n\n      // get the search index on question with the highest answers\n      const searchIndex = mappedAnswers\n        .indexOf(Math.max(...mappedAnswers));\n\n      // get the question with most answers\n      const mostAnswered = questionsFound[searchIndex];\n\n      // handle a case where there more than one question with equal -\n      // and highest answers\n      // map question answers\n      const moreThanOneQuestion = questionsFound\n        .map(question => question.answers);\n\n      // get array of questions with highest matched answers\n      const filterMoreThanOneQuestion = moreThanOneQuestion\n        .filter(answers => answers.length === Math.max(...mappedAnswers));\n\n      if (filterMoreThanOneQuestion.length <= 1) {\n        return res.status(200).json({\n          status: '200',\n          answersCount: mostAnswered.answers.length,\n          message: `The question from ${mostAnswered.user.userName} received most answers, (${mostAnswered.answers.length}) in total`,\n          mostAnswered\n        });\n      }\n      return res.status(200).json({\n        status: '200',\n        answersCount: mostAnswered.answers.length,\n        message: `The question from ${mostAnswered.user.userName} received most answers, (${mostAnswered.answers.length}) in total`,\n        note: 'There are other question with the same number of answers. However, this question was asked earlier.',\n        mostAnswered\n      });\n    })\n    .catch(err => res.json(err))\n});\n\n// @task: All user questions\n// @Access: Private(Users)\n// @desc: Enable users to view all their questions\nrouter.get(\"/questions/all\", auth, (req, res) => {\n  Question\n    .find({ user: req.user._id })\n    .select('_id user question answers')\n    .then(userQuestions => {\n      if (userQuestions.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'This user has no questions yet'\n          }\n        });\n      }\n      // continue\n      const noOfQuestions = userQuestions.length;\n\n      res.status(200).json({\n        status: '200',\n        questionsCount: noOfQuestions,\n        message: `You have ${noOfQuestions} questions`,\n        userQuestions\n      });\n    })\n    .catch(err => res.json(err));\n});\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572539742649
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/middlewares/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/middlewares/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/middlewares/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/middlewares/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/middlewares",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar auth = function auth(req, res, next) {\n  var token = req.header('Authorization');\n\n  if (!token) {\n    return res.status(401).json({\n      status: '401',\n      errors: {\n        message: 'Access denied. No token provided'\n      }\n    });\n  }\n\n  try {\n    var decoded = _jsonwebtoken[\"default\"].verify(token, process.env.SECRET_KEY);\n\n    req.user = decoded;\n    next();\n  } catch (e) {\n    res.status(400).json({\n      status: '400',\n      errors: e\n    });\n  }\n\n  ;\n};\n\nvar _default = auth;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiYXV0aCIsInJlcSIsInJlcyIsIm5leHQiLCJ0b2tlbiIsImhlYWRlciIsInN0YXR1cyIsImpzb24iLCJlcnJvcnMiLCJtZXNzYWdlIiwiZGVjb2RlZCIsImp3dCIsInZlcmlmeSIsInByb2Nlc3MiLCJlbnYiLCJTRUNSRVRfS0VZIiwidXNlciIsImUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQy9CLE1BQU1DLEtBQUssR0FBR0gsR0FBRyxDQUFDSSxNQUFKLENBQVcsZUFBWCxDQUFkOztBQUNBLE1BQUksQ0FBQ0QsS0FBTCxFQUFZO0FBQ1YsV0FBT0YsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELE1BQUFBLE1BQU0sRUFBRSxLQURrQjtBQUUxQkUsTUFBQUEsTUFBTSxFQUFFO0FBQUVDLFFBQUFBLE9BQU8sRUFBRTtBQUFYO0FBRmtCLEtBQXJCLENBQVA7QUFJRDs7QUFDRCxNQUFJO0FBQ0YsUUFBTUMsT0FBTyxHQUFHQyx5QkFBSUMsTUFBSixDQUFXUixLQUFYLEVBQWtCUyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFBOUIsQ0FBaEI7O0FBQ0FkLElBQUFBLEdBQUcsQ0FBQ2UsSUFBSixHQUFXTixPQUFYO0FBQ0FQLElBQUFBLElBQUk7QUFDTCxHQUpELENBSUUsT0FBT2MsQ0FBUCxFQUFVO0FBQ1ZmLElBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CRCxNQUFBQSxNQUFNLEVBQUUsS0FEVztBQUVuQkUsTUFBQUEsTUFBTSxFQUFFUztBQUZXLEtBQXJCO0FBSUQ7O0FBQUE7QUFDRixDQWxCRDs7ZUFvQmVqQixJIiwic291cmNlUm9vdCI6Ii9ob21lL2JsdWUvRGVza3RvcC9Qcm9ncmFtbWluZy9KYXZhc2NyaXB0L0RldmVsb3Blci9kZXZlbG9wZXJQb29sQXBpL2FwaS9taWRkbGV3YXJlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSBcImpzb253ZWJ0b2tlblwiO1xuXG5jb25zdCBhdXRoID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHRva2VuID0gcmVxLmhlYWRlcignQXV0aG9yaXphdGlvbicpO1xuICBpZiAoIXRva2VuKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgIHN0YXR1czogJzQwMScsXG4gICAgICBlcnJvcnM6IHsgbWVzc2FnZTogJ0FjY2VzcyBkZW5pZWQuIE5vIHRva2VuIHByb3ZpZGVkJyB9XG4gICAgfSk7XG4gIH1cbiAgdHJ5IHtcbiAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuU0VDUkVUX0tFWSk7XG4gICAgcmVxLnVzZXIgPSBkZWNvZGVkO1xuICAgIG5leHQoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgIHN0YXR1czogJzQwMCcsXG4gICAgICBlcnJvcnM6IGVcbiAgICB9KTtcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGF1dGg7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "auth",
        "req",
        "res",
        "next",
        "token",
        "header",
        "status",
        "json",
        "errors",
        "message",
        "decoded",
        "jwt",
        "verify",
        "process",
        "env",
        "SECRET_KEY",
        "user",
        "e"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,eAAX,CAAd;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,KADkB;AAE1BE,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAFkB,KAArB,CAAP;AAID;;AACD,MAAI;AACF,QAAMC,OAAO,GAAGC,yBAAIC,MAAJ,CAAWR,KAAX,EAAkBS,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAhB;;AACAd,IAAAA,GAAG,CAACe,IAAJ,GAAWN,OAAX;AACAP,IAAAA,IAAI;AACL,GAJD,CAIE,OAAOc,CAAP,EAAU;AACVf,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,KADW;AAEnBE,MAAAA,MAAM,EAAES;AAFW,KAArB;AAID;;AAAA;AACF,CAlBD;;eAoBejB,I",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/middlewares",
      "sourcesContent": [
        "import jwt from \"jsonwebtoken\";\n\nconst auth = (req, res, next) => {\n  const token = req.header('Authorization');\n  if (!token) {\n    return res.status(401).json({\n      status: '401',\n      errors: { message: 'Access denied. No token provided' }\n    });\n  }\n  try {\n    const decoded = jwt.verify(token, process.env.SECRET_KEY);\n    req.user = decoded;\n    next();\n  } catch (e) {\n    res.status(400).json({\n      status: '400',\n      errors: e\n    });\n  };\n};\n\nexport default auth;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571914036469
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models/Question.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models/Question.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models/Question.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models/Question.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models",
        "sourceFileName": "Question.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar questionSchema = new Schema({\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  question: {\n    type: String,\n    required: true\n  },\n  answers: [{\n    user: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    question: {\n      type: Schema.Types.ObjectId,\n      ref: 'Question'\n    },\n    answer: {\n      type: String,\n      required: true\n    },\n    comments: [{\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      },\n      answer: {\n        type: Schema.Types.ObjectId,\n        ref: 'Question'\n      },\n      comment: {\n        type: String,\n        required: true\n      }\n    }],\n    check: {\n      type: Schema.Types.ObjectId,\n      ref: 'User',\n      max: 1\n    },\n    upvote: [{\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      }\n    }],\n    downvote: [{\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      }\n    }],\n    time: {\n      type: Date,\n      \"default\": Date.now\n    }\n  }]\n});\n\nvar _default = _mongoose[\"default\"].model('Question', questionSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlF1ZXN0aW9uLmpzIl0sIm5hbWVzIjpbIlNjaGVtYSIsIm1vbmdvb3NlIiwicXVlc3Rpb25TY2hlbWEiLCJ1c2VyIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJxdWVzdGlvbiIsIlN0cmluZyIsInJlcXVpcmVkIiwiYW5zd2VycyIsImFuc3dlciIsImNvbW1lbnRzIiwiY29tbWVudCIsImNoZWNrIiwibWF4IiwidXB2b3RlIiwiZG93bnZvdGUiLCJ0aW1lIiwiRGF0ZSIsIm5vdyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7SUFFUUEsTSxHQUFXQyxvQixDQUFYRCxNO0FBRVIsSUFBTUUsY0FBYyxHQUFHLElBQUlGLE1BQUosQ0FBVztBQUNoQ0csRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUosTUFBTSxDQUFDSyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQsR0FEMEI7QUFLaENDLEVBQUFBLFFBQVEsRUFBRTtBQUNSSixJQUFBQSxJQUFJLEVBQUVLLE1BREU7QUFFUkMsSUFBQUEsUUFBUSxFQUFFO0FBRkYsR0FMc0I7QUFTaENDLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VSLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURmO0FBRUpDLE1BQUFBLEdBQUcsRUFBRTtBQUZELEtBRFI7QUFLRUMsSUFBQUEsUUFBUSxFQUFFO0FBQ1JKLE1BQUFBLElBQUksRUFBRUosTUFBTSxDQUFDSyxLQUFQLENBQWFDLFFBRFg7QUFFUkMsTUFBQUEsR0FBRyxFQUFFO0FBRkcsS0FMWjtBQVNFSyxJQUFBQSxNQUFNLEVBQUU7QUFDTlIsTUFBQUEsSUFBSSxFQUFFSyxNQURBO0FBRU5DLE1BQUFBLFFBQVEsRUFBRTtBQUZKLEtBVFY7QUFhRUcsSUFBQUEsUUFBUSxFQUFFLENBQ1I7QUFDRVYsTUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFFBQUFBLElBQUksRUFBRUosTUFBTSxDQUFDSyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsUUFBQUEsR0FBRyxFQUFFO0FBRkQsT0FEUjtBQUtFSyxNQUFBQSxNQUFNLEVBQUU7QUFDTlIsUUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxRQUFBQSxHQUFHLEVBQUU7QUFGQyxPQUxWO0FBU0VPLE1BQUFBLE9BQU8sRUFBRTtBQUNQVixRQUFBQSxJQUFJLEVBQUVLLE1BREM7QUFFUEMsUUFBQUEsUUFBUSxFQUFFO0FBRkg7QUFUWCxLQURRLENBYlo7QUE2QkVLLElBQUFBLEtBQUssRUFBRTtBQUNMWCxNQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURkO0FBRUxDLE1BQUFBLEdBQUcsRUFBRSxNQUZBO0FBR0xTLE1BQUFBLEdBQUcsRUFBRTtBQUhBLEtBN0JUO0FBa0NFQyxJQUFBQSxNQUFNLEVBQUUsQ0FDTjtBQUNFZCxNQUFBQSxJQUFJLEVBQUU7QUFDSkMsUUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxRQUFBQSxHQUFHLEVBQUU7QUFGRDtBQURSLEtBRE0sQ0FsQ1Y7QUEwQ0VXLElBQUFBLFFBQVEsRUFBRSxDQUNSO0FBQ0VmLE1BQUFBLElBQUksRUFBRTtBQUNKQyxRQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURmO0FBRUpDLFFBQUFBLEdBQUcsRUFBRTtBQUZEO0FBRFIsS0FEUSxDQTFDWjtBQWtERVksSUFBQUEsSUFBSSxFQUFFO0FBQ0pmLE1BQUFBLElBQUksRUFBRWdCLElBREY7QUFFSixpQkFBU0EsSUFBSSxDQUFDQztBQUZWO0FBbERSLEdBRE87QUFUdUIsQ0FBWCxDQUF2Qjs7ZUFxRWVwQixxQkFBU3FCLEtBQVQsQ0FBZSxVQUFmLEVBQTJCcEIsY0FBM0IsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ibHVlL0Rlc2t0b3AvUHJvZ3JhbW1pbmcvSmF2YXNjcmlwdC9EZXZlbG9wZXIvZGV2ZWxvcGVyUG9vbEFwaS9hcGkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xuXG5jb25zdCB7IFNjaGVtYSB9ID0gbW9uZ29vc2U7XG5cbmNvbnN0IHF1ZXN0aW9uU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIHVzZXI6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnVXNlcidcbiAgfSxcbiAgcXVlc3Rpb246IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgYW5zd2VyczogW1xuICAgIHtcbiAgICAgIHVzZXI6IHtcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdVc2VyJ1xuICAgICAgfSxcbiAgICAgIHF1ZXN0aW9uOiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnUXVlc3Rpb24nXG4gICAgICB9LFxuICAgICAgYW5zd2VyOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBjb21tZW50czogW1xuICAgICAgICB7XG4gICAgICAgICAgdXNlcjoge1xuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICAgICAgcmVmOiAnVXNlcidcbiAgICAgICAgICB9LFxuICAgICAgICAgIGFuc3dlcjoge1xuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICAgICAgcmVmOiAnUXVlc3Rpb24nXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb21tZW50OiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGNoZWNrOiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcicsXG4gICAgICAgIG1heDogMVxuICAgICAgfSxcbiAgICAgIHVwdm90ZTogW1xuICAgICAgICB7XG4gICAgICAgICAgdXNlcjoge1xuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICAgICAgcmVmOiAnVXNlcidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBkb3dudm90ZTogW1xuICAgICAgICB7XG4gICAgICAgICAgdXNlcjoge1xuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICAgICAgcmVmOiAnVXNlcidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICB0aW1lOiB7XG4gICAgICAgIHR5cGU6IERhdGUsXG4gICAgICAgIGRlZmF1bHQ6IERhdGUubm93XG4gICAgICB9XG4gICAgfVxuICBdXG59XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnUXVlc3Rpb24nLCBxdWVzdGlvblNjaGVtYSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Question.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "questionSchema",
        "user",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "question",
        "String",
        "required",
        "answers",
        "answer",
        "comments",
        "comment",
        "check",
        "max",
        "upvote",
        "downvote",
        "time",
        "Date",
        "now",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;IAEQA,M,GAAWC,oB,CAAXD,M;AAER,IAAME,cAAc,GAAG,IAAIF,MAAJ,CAAW;AAChCG,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD,GAD0B;AAKhCC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,IAAI,EAAEK,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GALsB;AAShCC,EAAAA,OAAO,EAAE,CACP;AACER,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,MAAAA,GAAG,EAAE;AAFD,KADR;AAKEC,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADX;AAERC,MAAAA,GAAG,EAAE;AAFG,KALZ;AASEK,IAAAA,MAAM,EAAE;AACNR,MAAAA,IAAI,EAAEK,MADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KATV;AAaEG,IAAAA,QAAQ,EAAE,CACR;AACEV,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,QAAAA,GAAG,EAAE;AAFD,OADR;AAKEK,MAAAA,MAAM,EAAE;AACNR,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADb;AAENC,QAAAA,GAAG,EAAE;AAFC,OALV;AASEO,MAAAA,OAAO,EAAE;AACPV,QAAAA,IAAI,EAAEK,MADC;AAEPC,QAAAA,QAAQ,EAAE;AAFH;AATX,KADQ,CAbZ;AA6BEK,IAAAA,KAAK,EAAE;AACLX,MAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADd;AAELC,MAAAA,GAAG,EAAE,MAFA;AAGLS,MAAAA,GAAG,EAAE;AAHA,KA7BT;AAkCEC,IAAAA,MAAM,EAAE,CACN;AACEd,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,QAAAA,GAAG,EAAE;AAFD;AADR,KADM,CAlCV;AA0CEW,IAAAA,QAAQ,EAAE,CACR;AACEf,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,QAAAA,GAAG,EAAE;AAFD;AADR,KADQ,CA1CZ;AAkDEY,IAAAA,IAAI,EAAE;AACJf,MAAAA,IAAI,EAAEgB,IADF;AAEJ,iBAASA,IAAI,CAACC;AAFV;AAlDR,GADO;AATuB,CAAX,CAAvB;;eAqEepB,qBAASqB,KAAT,CAAe,UAAf,EAA2BpB,cAA3B,C",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/models",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\n\nconst { Schema } = mongoose;\n\nconst questionSchema = new Schema({\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  question: {\n    type: String,\n    required: true\n  },\n  answers: [\n    {\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      },\n      question: {\n        type: Schema.Types.ObjectId,\n        ref: 'Question'\n      },\n      answer: {\n        type: String,\n        required: true\n      },\n      comments: [\n        {\n          user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n          },\n          answer: {\n            type: Schema.Types.ObjectId,\n            ref: 'Question'\n          },\n          comment: {\n            type: String,\n            required: true\n          }\n        }\n      ],\n      check: {\n        type: Schema.Types.ObjectId,\n        ref: 'User',\n        max: 1\n      },\n      upvote: [\n        {\n          user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n          }\n        }\n      ],\n      downvote: [\n        {\n          user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n          }\n        }\n      ],\n      time: {\n        type: Date,\n        default: Date.now\n      }\n    }\n  ]\n}\n);\n\nexport default mongoose.model('Question', questionSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572101124354
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/questionInput.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/questionInput.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/questionInput.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations/questionInput.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations",
        "sourceFileName": "questionInput.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateCommentInput = exports.validateAnswerInput = exports.validateQuestionInput = void 0;\n\nvar _validator = _interopRequireDefault(require(\"validator\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"./isEmpty\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar validateQuestionInput = function validateQuestionInput(data) {\n  var errors = {};\n  data.question = !(0, _isEmpty[\"default\"])(data.question) ? data.question : '';\n\n  if (!_validator[\"default\"].isLength(data.question, {\n    min: 3,\n    max: 255\n  })) {\n    errors.question = \"The minimum character expected is 3 while maximum is 255\";\n  }\n\n  if (_validator[\"default\"].isEmpty(data.question)) {\n    errors.question = 'Question field is required';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateQuestionInput = validateQuestionInput;\n\nvar validateAnswerInput = function validateAnswerInput(data) {\n  var errors = {};\n  data.answer = !(0, _isEmpty[\"default\"])(data.answer) ? data.answer : '';\n\n  if (_validator[\"default\"].isEmpty(data.answer)) {\n    errors.answer = 'Answer field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.answer, {\n    min: 5,\n    max: 400\n  })) {\n    errors.answer = 'The minimum character expected is 5 while maximum is 400';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateAnswerInput = validateAnswerInput;\n\nvar validateCommentInput = function validateCommentInput(data) {\n  var errors = {};\n  data.comment = !(0, _isEmpty[\"default\"])(data.comment) ? data.comment : '';\n\n  if (_validator[\"default\"].isEmpty(data.comment)) {\n    errors.comment = 'Comment field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.comment, {\n    max: 100\n  })) {\n    errors.comment = 'The minimum character expected is 1 while maximum is 100';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateCommentInput = validateCommentInput;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9uSW5wdXQuanMiXSwibmFtZXMiOlsidmFsaWRhdGVRdWVzdGlvbklucHV0IiwiZGF0YSIsImVycm9ycyIsInF1ZXN0aW9uIiwiVmFsaWRhdG9yIiwiaXNMZW5ndGgiLCJtaW4iLCJtYXgiLCJpc0VtcHR5IiwiaXNWYWxpZCIsInZhbGlkYXRlQW5zd2VySW5wdXQiLCJhbnN3ZXIiLCJ2YWxpZGF0ZUNvbW1lbnRJbnB1dCIsImNvbW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFHQTs7OztBQUpBO0FBR0E7QUFHQSxJQUFNQSxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXdCLENBQUFDLElBQUksRUFBSTtBQUVwQyxNQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUVBRCxFQUFBQSxJQUFJLENBQUNFLFFBQUwsR0FBZ0IsQ0FBQyx5QkFBUUYsSUFBSSxDQUFDRSxRQUFiLENBQUQsR0FBMEJGLElBQUksQ0FBQ0UsUUFBL0IsR0FBMEMsRUFBMUQ7O0FBRUEsTUFBSSxDQUFDQyxzQkFBVUMsUUFBVixDQUFtQkosSUFBSSxDQUFDRSxRQUF4QixFQUFrQztBQUFFRyxJQUFBQSxHQUFHLEVBQUUsQ0FBUDtBQUFVQyxJQUFBQSxHQUFHLEVBQUU7QUFBZixHQUFsQyxDQUFMLEVBQThEO0FBQzVETCxJQUFBQSxNQUFNLENBQUNDLFFBQVAsR0FBa0IsMERBQWxCO0FBQ0Q7O0FBRUQsTUFBSUMsc0JBQVVJLE9BQVYsQ0FBa0JQLElBQUksQ0FBQ0UsUUFBdkIsQ0FBSixFQUFzQztBQUNwQ0QsSUFBQUEsTUFBTSxDQUFDQyxRQUFQLEdBQWtCLDRCQUFsQjtBQUNEOztBQUVELFNBQU87QUFDTEQsSUFBQUEsTUFBTSxFQUFOQSxNQURLO0FBRUxPLElBQUFBLE9BQU8sRUFBRSx5QkFBUVAsTUFBUjtBQUZKLEdBQVA7QUFJRCxDQWxCRDs7OztBQW9CQSxJQUFNUSxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCLENBQUFULElBQUksRUFBSTtBQUVsQyxNQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUVBRCxFQUFBQSxJQUFJLENBQUNVLE1BQUwsR0FBYyxDQUFDLHlCQUFRVixJQUFJLENBQUNVLE1BQWIsQ0FBRCxHQUF3QlYsSUFBSSxDQUFDVSxNQUE3QixHQUFzQyxFQUFwRDs7QUFFQSxNQUFJUCxzQkFBVUksT0FBVixDQUFrQlAsSUFBSSxDQUFDVSxNQUF2QixDQUFKLEVBQW9DO0FBQ2xDVCxJQUFBQSxNQUFNLENBQUNTLE1BQVAsR0FBZ0IsMEJBQWhCO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDUCxzQkFBVUMsUUFBVixDQUFtQkosSUFBSSxDQUFDVSxNQUF4QixFQUFnQztBQUFFTCxJQUFBQSxHQUFHLEVBQUUsQ0FBUDtBQUFVQyxJQUFBQSxHQUFHLEVBQUU7QUFBZixHQUFoQyxDQUFMLEVBQTREO0FBQzFETCxJQUFBQSxNQUFNLENBQUNTLE1BQVAsR0FBZ0IsMERBQWhCO0FBQ0Q7O0FBRUQsU0FBTztBQUNMVCxJQUFBQSxNQUFNLEVBQU5BLE1BREs7QUFFTE8sSUFBQUEsT0FBTyxFQUFFLHlCQUFRUCxNQUFSO0FBRkosR0FBUDtBQUlELENBbEJEOzs7O0FBb0JBLElBQU1VLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBdUIsQ0FBQVgsSUFBSSxFQUFJO0FBRW5DLE1BQU1DLE1BQU0sR0FBRyxFQUFmO0FBRUFELEVBQUFBLElBQUksQ0FBQ1ksT0FBTCxHQUFlLENBQUMseUJBQVFaLElBQUksQ0FBQ1ksT0FBYixDQUFELEdBQXlCWixJQUFJLENBQUNZLE9BQTlCLEdBQXdDLEVBQXZEOztBQUVBLE1BQUlULHNCQUFVSSxPQUFWLENBQWtCUCxJQUFJLENBQUNZLE9BQXZCLENBQUosRUFBcUM7QUFDbkNYLElBQUFBLE1BQU0sQ0FBQ1csT0FBUCxHQUFpQiwyQkFBakI7QUFDRDs7QUFFRCxNQUFJLENBQUNULHNCQUFVQyxRQUFWLENBQW1CSixJQUFJLENBQUNZLE9BQXhCLEVBQWlDO0FBQUVOLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQWpDLENBQUwsRUFBcUQ7QUFDbkRMLElBQUFBLE1BQU0sQ0FBQ1csT0FBUCxHQUFpQiwwREFBakI7QUFDRDs7QUFFRCxTQUFPO0FBQ0xYLElBQUFBLE1BQU0sRUFBTkEsTUFESztBQUVMTyxJQUFBQSxPQUFPLEVBQUUseUJBQVFQLE1BQVI7QUFGSixHQUFQO0FBS0QsQ0FuQkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlclBvb2xBcGkvYXBpL3ZhbGlkYXRpb25zIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0c1xuaW1wb3J0IFZhbGlkYXRvciBmcm9tIFwidmFsaWRhdG9yXCI7XG5cbi8vIGxvY2FsIGltcG9ydHNcbmltcG9ydCBpc0VtcHR5IGZyb20gXCIuL2lzRW1wdHlcIjtcblxuY29uc3QgdmFsaWRhdGVRdWVzdGlvbklucHV0ID0gZGF0YSA9PiB7XG5cbiAgY29uc3QgZXJyb3JzID0ge307XG5cbiAgZGF0YS5xdWVzdGlvbiA9ICFpc0VtcHR5KGRhdGEucXVlc3Rpb24pID8gZGF0YS5xdWVzdGlvbiA6ICcnO1xuXG4gIGlmICghVmFsaWRhdG9yLmlzTGVuZ3RoKGRhdGEucXVlc3Rpb24sIHsgbWluOiAzLCBtYXg6IDI1NSB9KSkge1xuICAgIGVycm9ycy5xdWVzdGlvbiA9IFwiVGhlIG1pbmltdW0gY2hhcmFjdGVyIGV4cGVjdGVkIGlzIDMgd2hpbGUgbWF4aW11bSBpcyAyNTVcIlxuICB9XG5cbiAgaWYgKFZhbGlkYXRvci5pc0VtcHR5KGRhdGEucXVlc3Rpb24pKSB7XG4gICAgZXJyb3JzLnF1ZXN0aW9uID0gJ1F1ZXN0aW9uIGZpZWxkIGlzIHJlcXVpcmVkJztcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZXJyb3JzLFxuICAgIGlzVmFsaWQ6IGlzRW1wdHkoZXJyb3JzKVxuICB9O1xufTtcblxuY29uc3QgdmFsaWRhdGVBbnN3ZXJJbnB1dCA9IGRhdGEgPT4ge1xuXG4gIGNvbnN0IGVycm9ycyA9IHt9O1xuXG4gIGRhdGEuYW5zd2VyID0gIWlzRW1wdHkoZGF0YS5hbnN3ZXIpID8gZGF0YS5hbnN3ZXIgOiAnJztcblxuICBpZiAoVmFsaWRhdG9yLmlzRW1wdHkoZGF0YS5hbnN3ZXIpKSB7XG4gICAgZXJyb3JzLmFuc3dlciA9ICdBbnN3ZXIgZmllbGQgaXMgcmVxdWlyZWQnO1xuICB9XG5cbiAgaWYgKCFWYWxpZGF0b3IuaXNMZW5ndGgoZGF0YS5hbnN3ZXIsIHsgbWluOiA1LCBtYXg6IDQwMCB9KSkge1xuICAgIGVycm9ycy5hbnN3ZXIgPSAnVGhlIG1pbmltdW0gY2hhcmFjdGVyIGV4cGVjdGVkIGlzIDUgd2hpbGUgbWF4aW11bSBpcyA0MDAnO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBlcnJvcnMsXG4gICAgaXNWYWxpZDogaXNFbXB0eShlcnJvcnMpXG4gIH07XG59XG5cbmNvbnN0IHZhbGlkYXRlQ29tbWVudElucHV0ID0gZGF0YSA9PiB7XG5cbiAgY29uc3QgZXJyb3JzID0ge307XG5cbiAgZGF0YS5jb21tZW50ID0gIWlzRW1wdHkoZGF0YS5jb21tZW50KSA/IGRhdGEuY29tbWVudCA6ICcnO1xuXG4gIGlmIChWYWxpZGF0b3IuaXNFbXB0eShkYXRhLmNvbW1lbnQpKSB7XG4gICAgZXJyb3JzLmNvbW1lbnQgPSAnQ29tbWVudCBmaWVsZCBpcyByZXF1aXJlZCc7XG4gIH1cblxuICBpZiAoIVZhbGlkYXRvci5pc0xlbmd0aChkYXRhLmNvbW1lbnQsIHsgbWF4OiAxMDAgfSkpIHtcbiAgICBlcnJvcnMuY29tbWVudCA9ICdUaGUgbWluaW11bSBjaGFyYWN0ZXIgZXhwZWN0ZWQgaXMgMSB3aGlsZSBtYXhpbXVtIGlzIDEwMCc7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGVycm9ycyxcbiAgICBpc1ZhbGlkOiBpc0VtcHR5KGVycm9ycylcbiAgfTtcblxufTtcblxuZXhwb3J0IHtcbiAgdmFsaWRhdGVRdWVzdGlvbklucHV0LFxuICB2YWxpZGF0ZUFuc3dlcklucHV0LFxuICB2YWxpZGF0ZUNvbW1lbnRJbnB1dFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "questionInput.js"
      ],
      "names": [
        "validateQuestionInput",
        "data",
        "errors",
        "question",
        "Validator",
        "isLength",
        "min",
        "max",
        "isEmpty",
        "isValid",
        "validateAnswerInput",
        "answer",
        "validateCommentInput",
        "comment"
      ],
      "mappings": ";;;;;;;AACA;;AAGA;;;;AAJA;AAGA;AAGA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,IAAI,EAAI;AAEpC,MAAMC,MAAM,GAAG,EAAf;AAEAD,EAAAA,IAAI,CAACE,QAAL,GAAgB,CAAC,yBAAQF,IAAI,CAACE,QAAb,CAAD,GAA0BF,IAAI,CAACE,QAA/B,GAA0C,EAA1D;;AAEA,MAAI,CAACC,sBAAUC,QAAV,CAAmBJ,IAAI,CAACE,QAAxB,EAAkC;AAAEG,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAlC,CAAL,EAA8D;AAC5DL,IAAAA,MAAM,CAACC,QAAP,GAAkB,0DAAlB;AACD;;AAED,MAAIC,sBAAUI,OAAV,CAAkBP,IAAI,CAACE,QAAvB,CAAJ,EAAsC;AACpCD,IAAAA,MAAM,CAACC,QAAP,GAAkB,4BAAlB;AACD;;AAED,SAAO;AACLD,IAAAA,MAAM,EAANA,MADK;AAELO,IAAAA,OAAO,EAAE,yBAAQP,MAAR;AAFJ,GAAP;AAID,CAlBD;;;;AAoBA,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAT,IAAI,EAAI;AAElC,MAAMC,MAAM,GAAG,EAAf;AAEAD,EAAAA,IAAI,CAACU,MAAL,GAAc,CAAC,yBAAQV,IAAI,CAACU,MAAb,CAAD,GAAwBV,IAAI,CAACU,MAA7B,GAAsC,EAApD;;AAEA,MAAIP,sBAAUI,OAAV,CAAkBP,IAAI,CAACU,MAAvB,CAAJ,EAAoC;AAClCT,IAAAA,MAAM,CAACS,MAAP,GAAgB,0BAAhB;AACD;;AAED,MAAI,CAACP,sBAAUC,QAAV,CAAmBJ,IAAI,CAACU,MAAxB,EAAgC;AAAEL,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAhC,CAAL,EAA4D;AAC1DL,IAAAA,MAAM,CAACS,MAAP,GAAgB,0DAAhB;AACD;;AAED,SAAO;AACLT,IAAAA,MAAM,EAANA,MADK;AAELO,IAAAA,OAAO,EAAE,yBAAQP,MAAR;AAFJ,GAAP;AAID,CAlBD;;;;AAoBA,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAX,IAAI,EAAI;AAEnC,MAAMC,MAAM,GAAG,EAAf;AAEAD,EAAAA,IAAI,CAACY,OAAL,GAAe,CAAC,yBAAQZ,IAAI,CAACY,OAAb,CAAD,GAAyBZ,IAAI,CAACY,OAA9B,GAAwC,EAAvD;;AAEA,MAAIT,sBAAUI,OAAV,CAAkBP,IAAI,CAACY,OAAvB,CAAJ,EAAqC;AACnCX,IAAAA,MAAM,CAACW,OAAP,GAAiB,2BAAjB;AACD;;AAED,MAAI,CAACT,sBAAUC,QAAV,CAAmBJ,IAAI,CAACY,OAAxB,EAAiC;AAAEN,IAAAA,GAAG,EAAE;AAAP,GAAjC,CAAL,EAAqD;AACnDL,IAAAA,MAAM,CAACW,OAAP,GAAiB,0DAAjB;AACD;;AAED,SAAO;AACLX,IAAAA,MAAM,EAANA,MADK;AAELO,IAAAA,OAAO,EAAE,yBAAQP,MAAR;AAFJ,GAAP;AAKD,CAnBD",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerPoolApi/api/validations",
      "sourcesContent": [
        "// imports\nimport Validator from \"validator\";\n\n// local imports\nimport isEmpty from \"./isEmpty\";\n\nconst validateQuestionInput = data => {\n\n  const errors = {};\n\n  data.question = !isEmpty(data.question) ? data.question : '';\n\n  if (!Validator.isLength(data.question, { min: 3, max: 255 })) {\n    errors.question = \"The minimum character expected is 3 while maximum is 255\"\n  }\n\n  if (Validator.isEmpty(data.question)) {\n    errors.question = 'Question field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\nconst validateAnswerInput = data => {\n\n  const errors = {};\n\n  data.answer = !isEmpty(data.answer) ? data.answer : '';\n\n  if (Validator.isEmpty(data.answer)) {\n    errors.answer = 'Answer field is required';\n  }\n\n  if (!Validator.isLength(data.answer, { min: 5, max: 400 })) {\n    errors.answer = 'The minimum character expected is 5 while maximum is 400';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n}\n\nconst validateCommentInput = data => {\n\n  const errors = {};\n\n  data.comment = !isEmpty(data.comment) ? data.comment : '';\n\n  if (Validator.isEmpty(data.comment)) {\n    errors.comment = 'Comment field is required';\n  }\n\n  if (!Validator.isLength(data.comment, { max: 100 })) {\n    errors.comment = 'The minimum character expected is 1 while maximum is 100';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n\n};\n\nexport {\n  validateQuestionInput,\n  validateAnswerInput,\n  validateCommentInput\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572153031816
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _users = _interopRequireDefault(require(\"./routes/users\"));\n\nvar _questions = _interopRequireDefault(require(\"./routes/questions\"));\n\nvar _keys = _interopRequireDefault(require(\"../config/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar app = (0, _express[\"default\"])(); // manage middlewares\n\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nvar database = _keys[\"default\"].keys.DB_URL;\n\n_mongoose[\"default\"].connect(database, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n}).then(function () {\n  return console.log(\"Connected to \".concat(database));\n})[\"catch\"](function (err) {\n  return console.log(err);\n}); // register endpoints\n\n\napp.get(\"/\", function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname, \"index.html\"));\n});\napp.use(\"/api/users\", _users[\"default\"]);\napp.use(\"/api/questions\", _questions[\"default\"]);\nvar port = process.env.PORT || 5000;\nvar server = app.listen(port, function () {\n  return console.log(\"Server running on port \".concat(port));\n});\nvar _default = server;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiZGF0YWJhc2UiLCJkYXRhYmFzZUtleXMiLCJrZXlzIiwiREJfVVJMIiwibW9uZ29vc2UiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlQ3JlYXRlSW5kZXgiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImVyciIsImdldCIsInJlcSIsInJlcyIsInNlbmRGaWxlIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJ1c2VycyIsInF1ZXN0aW9ucyIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInNlcnZlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUdBOztBQUNBOztBQUNBOzs7O0FBVEE7QUFNQTtBQUtBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0UsVUFBWCxDQUF1QjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF2QixDQUFSO0FBRUEsSUFBTUMsUUFBUSxHQUFHQyxpQkFBYUMsSUFBYixDQUFrQkMsTUFBbkM7O0FBQ0FDLHFCQUNHQyxPQURILENBQ1dMLFFBRFgsRUFDcUI7QUFDakJNLEVBQUFBLGVBQWUsRUFBRSxJQURBO0FBRWpCQyxFQUFBQSxjQUFjLEVBQUUsSUFGQztBQUdqQkMsRUFBQUEsa0JBQWtCLEVBQUU7QUFISCxDQURyQixFQU1HQyxJQU5ILENBTVE7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsd0JBQTRCWCxRQUE1QixFQUFOO0FBQUEsQ0FOUixXQU9TLFVBQUFZLEdBQUc7QUFBQSxTQUFJRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsR0FBWixDQUFKO0FBQUEsQ0FQWixFLENBU0E7OztBQUNBbEIsR0FBRyxDQUFDbUIsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN6QkEsRUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWFDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsWUFBckIsQ0FBYjtBQUNELENBRkQ7QUFJQXpCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFlBQVIsRUFBc0J5QixpQkFBdEI7QUFDQTFCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGdCQUFSLEVBQTBCMEIscUJBQTFCO0FBRUEsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUVBLElBQU1DLE1BQU0sR0FBR2hDLEdBQUcsQ0FBQ2lDLE1BQUosQ0FBV0wsSUFBWCxFQUFpQjtBQUFBLFNBQU1aLE9BQU8sQ0FBQ0MsR0FBUixrQ0FBc0NXLElBQXRDLEVBQU47QUFBQSxDQUFqQixDQUFmO2VBRWVJLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlckFwaS9hcGkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnRzXG5pbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjtcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xuXG4vLyBsb2NhbCBpbXBvcnRzXG5pbXBvcnQgdXNlcnMgZnJvbSBcIi4vcm91dGVzL3VzZXJzXCI7XG5pbXBvcnQgcXVlc3Rpb25zIGZyb20gXCIuL3JvdXRlcy9xdWVzdGlvbnNcIjtcbmltcG9ydCBkYXRhYmFzZUtleXMgZnJvbSBcIi4uL2NvbmZpZy9rZXlzXCI7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gbWFuYWdlIG1pZGRsZXdhcmVzXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkICh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5cbmNvbnN0IGRhdGFiYXNlID0gZGF0YWJhc2VLZXlzLmtleXMuREJfVVJMO1xubW9uZ29vc2VcbiAgLmNvbm5lY3QoZGF0YWJhc2UsIHtcbiAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXG4gICAgdXNlQ3JlYXRlSW5kZXg6IHRydWUsXG4gICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlXG4gIH0pXG4gIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKGBDb25uZWN0ZWQgdG8gJHtkYXRhYmFzZX1gKSlcbiAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKVxuXG4vLyByZWdpc3RlciBlbmRwb2ludHNcbmFwcC5nZXQoXCIvXCIsIChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgXCJpbmRleC5odG1sXCIpKVxufSk7XG5cbmFwcC51c2UoXCIvYXBpL3VzZXJzXCIsIHVzZXJzKTtcbmFwcC51c2UoXCIvYXBpL3F1ZXN0aW9uc1wiLCBxdWVzdGlvbnMpO1xuXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA1MDAwO1xuXG5jb25zdCBzZXJ2ZXIgPSBhcHAubGlzdGVuKHBvcnQsICgpID0+IGNvbnNvbGUubG9nKGBTZXJ2ZXIgcnVubmluZyBvbiBwb3J0ICR7cG9ydH1gKSk7XG5cbmV4cG9ydCBkZWZhdWx0IHNlcnZlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "database",
        "databaseKeys",
        "keys",
        "DB_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useCreateIndex",
        "useUnifiedTopology",
        "then",
        "console",
        "log",
        "err",
        "get",
        "req",
        "res",
        "sendFile",
        "path",
        "join",
        "__dirname",
        "users",
        "questions",
        "port",
        "process",
        "env",
        "PORT",
        "server",
        "listen"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;;;AATA;AAMA;AAKA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAWE,UAAX,CAAuB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAvB,CAAR;AAEA,IAAMC,QAAQ,GAAGC,iBAAaC,IAAb,CAAkBC,MAAnC;;AACAC,qBACGC,OADH,CACWL,QADX,EACqB;AACjBM,EAAAA,eAAe,EAAE,IADA;AAEjBC,EAAAA,cAAc,EAAE,IAFC;AAGjBC,EAAAA,kBAAkB,EAAE;AAHH,CADrB,EAMGC,IANH,CAMQ;AAAA,SAAMC,OAAO,CAACC,GAAR,wBAA4BX,QAA5B,EAAN;AAAA,CANR,WAOS,UAAAY,GAAG;AAAA,SAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,CAPZ,E,CASA;;;AACAlB,GAAG,CAACmB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,QAAJ,CAAaC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAb;AACD,CAFD;AAIAzB,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsByB,iBAAtB;AACA1B,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0B0B,qBAA1B;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA,IAAMC,MAAM,GAAGhC,GAAG,CAACiC,MAAJ,CAAWL,IAAX,EAAiB;AAAA,SAAMZ,OAAO,CAACC,GAAR,kCAAsCW,IAAtC,EAAN;AAAA,CAAjB,CAAf;eAEeI,M",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api",
      "sourcesContent": [
        "// imports\nimport express from \"express\";\nimport path from \"path\";\nimport bodyParser from \"body-parser\";\nimport mongoose from \"mongoose\";\n\n// local imports\nimport users from \"./routes/users\";\nimport questions from \"./routes/questions\";\nimport databaseKeys from \"../config/keys\";\n\nconst app = express();\n\n// manage middlewares\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded ({ extended: false }));\n\nconst database = databaseKeys.keys.DB_URL;\nmongoose\n  .connect(database, {\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useUnifiedTopology: true\n  })\n  .then(() => console.log(`Connected to ${database}`))\n  .catch(err => console.log(err))\n\n// register endpoints\napp.get(\"/\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"index.html\"))\n});\n\napp.use(\"/api/users\", users);\napp.use(\"/api/questions\", questions);\n\nconst port = process.env.PORT || 5000;\n\nconst server = app.listen(port, () => console.log(`Server running on port ${port}`));\n\nexport default server;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572636388795
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _gravatar = _interopRequireDefault(require(\"gravatar\"));\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nvar _auth = require(\"../validations/auth\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar router = _express[\"default\"].Router(); // @task: Signup\n// @Access: Public\n// @desc: Enable signup functionality\n\n\nrouter.post(\"/signup\", function (req, res) {\n  var _validateSignupInput = (0, _auth.validateSignupInput)(req.body.registerUser),\n      errors = _validateSignupInput.errors,\n      isValid = _validateSignupInput.isValid;\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  var _req$body$registerUse = req.body.registerUser,\n      firstName = _req$body$registerUse.firstName,\n      lastName = _req$body$registerUse.lastName,\n      userName = _req$body$registerUse.userName,\n      email = _req$body$registerUse.email,\n      password = _req$body$registerUse.password;\n\n  _User[\"default\"].findOne({\n    email: email\n  }).then(function (userFound) {\n    if (userFound) {\n      errors.global = \"Email already exists\";\n      return res.status(409).json({\n        status: '409',\n        errors: errors\n      });\n    }\n\n    var avatar = _gravatar[\"default\"].url(req.body.registerUser.email, {\n      s: '200',\n      r: 'pg',\n      d: 'mm'\n    });\n\n    var newUser = new _User[\"default\"]({\n      firstName: firstName,\n      lastName: lastName,\n      userName: userName,\n      email: email,\n      avatar: avatar,\n      password: password\n    }); // hash password function from the model. It saves\n    // and returns the newly added user or the error if any\n\n    newUser.hashPassword(newUser, res);\n  })[\"catch\"](function (err) {\n    res.json(err);\n  });\n}); // @task: Login\n// @Access: Public\n// @desc: Enable login functionality and generate token\n\nrouter.post(\"/login\", function (req, res) {\n  var _validateLoginInput = (0, _auth.validateLoginInput)(req.body.credentials),\n      isValid = _validateLoginInput.isValid,\n      errors = _validateLoginInput.errors;\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  var _req$body$credentials = req.body.credentials,\n      email = _req$body$credentials.email,\n      password = _req$body$credentials.password;\n\n  _User[\"default\"].findOne({\n    email: email\n  }).then(function (userFound) {\n    // check if user is registered\n    if (!userFound) {\n      errors.global = \"Failed to log in. Confirm email and password\";\n      return res.status(401).json({\n        status: '401',\n        errors: errors\n      });\n    } // continue and check password\n\n\n    userFound.comparePassword(password, userFound).then(function (match) {\n      if (!match) {\n        errors.global = \"Invalid credentials\";\n        return res.status(401).json({\n          status: '401',\n          errors: errors\n        });\n      } // generate authentification token\n\n\n      var token = userFound.generateAuthToken();\n      return res.status(200).json({\n        status: '200',\n        message: \"You have logged in as \".concat(email),\n        token: token,\n        user: {\n          email: userFound.email,\n          firstName: userFound.firstName,\n          lastName: userFound.lastName,\n          userName: userFound.userName,\n          avatar: userFound.avatar\n        }\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function (err) {\n    res.json(err);\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "req",
        "res",
        "body",
        "registerUser",
        "errors",
        "isValid",
        "status",
        "json",
        "firstName",
        "lastName",
        "userName",
        "email",
        "password",
        "User",
        "findOne",
        "then",
        "userFound",
        "global",
        "avatar",
        "gravatar",
        "url",
        "s",
        "r",
        "d",
        "newUser",
        "hashPassword",
        "err",
        "credentials",
        "comparePassword",
        "match",
        "token",
        "generateAuthToken",
        "message",
        "user"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes",
      "sourcesContent": [
        "// imports\nimport express from \"express\";\nimport gravatar from \"gravatar\";\n\n// local imports\nimport User from \"../models/User\";\nimport { validateSignupInput, validateLoginInput } from \"../validations/auth\"\n\nconst router = express.Router();\n\n\n// @task: Signup\n// @Access: Public\n// @desc: Enable signup functionality\nrouter.post(\"/signup\", (req, res) => {\n  const { errors, isValid } = validateSignupInput(req.body.registerUser);\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  const { firstName, lastName, userName, email, password  } = req.body.registerUser;\n\n  User\n  .findOne({ email })\n  .then(userFound => {\n    if (userFound) {\n      errors.global = \"Email already exists\"\n      return res.status(409).json({\n        status: '409',\n        errors\n      })\n    }\n\n    const avatar = gravatar.url(req.body.registerUser.email, {\n      s: '200',\n      r: 'pg',\n      d: 'mm'\n    });\n\n    const newUser = new User({\n      firstName,\n      lastName,\n      userName,\n      email,\n      avatar,\n      password\n    });\n\n    // hash password function from the model. It saves\n    // and returns the newly added user or the error if any\n    newUser.hashPassword(newUser, res);\n  })\n  .catch(err => {\n    res.json(err)\n  })\n});\n\n// @task: Login\n// @Access: Public\n// @desc: Enable login functionality and generate token\nrouter.post(\"/login\", (req, res) => {\n  const { isValid, errors } = validateLoginInput(req.body.credentials);\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  const { email, password } = req.body.credentials;\n  User\n    .findOne({ email })\n    .then(userFound => {\n      // check if user is registered\n      if (!userFound) {\n        errors.global = \"Failed to log in. Confirm email and password\";\n        return res.status(401).json({\n          status: '401',\n          errors\n        });\n      }\n      // continue and check password\n      userFound.comparePassword(password, userFound)\n        .then(match => {\n          if (!match) {\n            errors.global = \"Invalid credentials\";\n            return res.status(401).json({\n              status: '401',\n              errors\n            });\n          }\n\n          // generate authentification token\n          const token = userFound.generateAuthToken();\n          return res.status(200).json({\n            status: '200',\n            message: `You have logged in as ${email}`,\n            token,\n            user: {\n                email: userFound.email,\n                firstName: userFound.firstName,\n                lastName: userFound.lastName,\n                userName: userFound.userName,\n                avatar: userFound.avatar\n              }\n          });\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(err => {\n      res.json(err)\n    });\n});\n\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571904740323
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models/User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models/User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models/User.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _keys = _interopRequireDefault(require(\"../../config/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar Schema = _mongoose[\"default\"].Schema;\nvar userSchema = new Schema({\n  firstName: {\n    type: String,\n    required: true\n  },\n  lastName: {\n    type: String,\n    required: true\n  },\n  userName: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    index: true\n  },\n  avatar: {\n    type: String\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  confirmed: {\n    type: Boolean,\n    \"default\": false\n  },\n  isAdmin: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true\n});\n\nuserSchema.methods.hashPassword = function hashPassword(newUser, res) {\n  var _this = this;\n\n  var password = newUser.password;\n  var errors = {};\n\n  _bcryptjs[\"default\"].genSalt(10, function (err, salt) {\n    if (err) {\n      throw err;\n    }\n\n    _bcryptjs[\"default\"].hash(password, salt, function (error, hash) {\n      if (error) {\n        throw error;\n      }\n\n      _this.password = hash;\n      newUser.save().then(function (user) {\n        res.json(user);\n      })[\"catch\"](function () {\n        errors.userName = \"User name already taken\";\n        return res.status(409).json({\n          status: '409',\n          errors: errors\n        });\n      });\n    });\n  });\n};\n\nuserSchema.methods.comparePassword = function comparePassword(password, userFound) {\n  var match = _bcryptjs[\"default\"].compare(password, userFound.password).then(function (isMatch) {\n    if (!isMatch) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return match;\n};\n\nuserSchema.methods.generateAuthToken = function generateAuthToken() {\n  var token = _jsonwebtoken[\"default\"].sign({\n    _id: this._id,\n    email: this.email,\n    password: this.password,\n    isAdmin: this.isAdmin\n  }, _keys[\"default\"].keys.SECRET_KEY, {\n    expiresIn: 3600\n  });\n\n  return token;\n};\n\nvar _default = _mongoose[\"default\"].model('User', userSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJ1c2VyU2NoZW1hIiwiZmlyc3ROYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibGFzdE5hbWUiLCJ1c2VyTmFtZSIsInVuaXF1ZSIsImVtYWlsIiwibG93ZXJjYXNlIiwiaW5kZXgiLCJhdmF0YXIiLCJwYXNzd29yZCIsImNvbmZpcm1lZCIsIkJvb2xlYW4iLCJpc0FkbWluIiwidGltZXN0YW1wcyIsIm1ldGhvZHMiLCJoYXNoUGFzc3dvcmQiLCJuZXdVc2VyIiwicmVzIiwiZXJyb3JzIiwiYmNyeXB0IiwiZ2VuU2FsdCIsImVyciIsInNhbHQiLCJoYXNoIiwiZXJyb3IiLCJzYXZlIiwidGhlbiIsInVzZXIiLCJqc29uIiwic3RhdHVzIiwiY29tcGFyZVBhc3N3b3JkIiwidXNlckZvdW5kIiwibWF0Y2giLCJjb21wYXJlIiwiaXNNYXRjaCIsImdlbmVyYXRlQXV0aFRva2VuIiwidG9rZW4iLCJqd3QiLCJzaWduIiwiX2lkIiwiZGF0YWJhc2VLZXlzIiwia2V5cyIsIlNFQ1JFVF9LRVkiLCJleHBpcmVzSW4iLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUdBOzs7O0FBTkE7QUFLQTtJQUdRQSxNLEdBQVdDLG9CLENBQVhELE07QUFFUixJQUFNRSxVQUFVLEdBQUcsSUFBSUYsTUFBSixDQUFXO0FBQzVCRyxFQUFBQSxTQUFTLEVBQUU7QUFDVEMsSUFBQUEsSUFBSSxFQUFFQyxNQURHO0FBRVRDLElBQUFBLFFBQVEsRUFBRTtBQUZELEdBRGlCO0FBSzVCQyxFQUFBQSxRQUFRLEVBQUU7QUFDUkgsSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJDLElBQUFBLFFBQVEsRUFBRTtBQUZGLEdBTGtCO0FBUzVCRSxFQUFBQSxRQUFRLEVBQUU7QUFDUkosSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJDLElBQUFBLFFBQVEsRUFBRSxJQUZGO0FB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QUtBLFFBSE07QUFJckJHLElBQUFBLE9BQU8sRUFBRSxLQUFLQTtBQUpPLEdBQVQsRUFNWjRCLGlCQUFhQyxJQUFiLENBQWtCQyxVQU5OLEVBT1o7QUFBRUMsSUFBQUEsU0FBUyxFQUFFO0FBQWIsR0FQWSxDQUFkOztBQVNBLFNBQU9QLEtBQVA7QUFDRCxDQVhEOztlQWFleEMscUJBQVNnRCxLQUFULENBQWUsTUFBZixFQUF1Qi9DLFVBQXZCLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlckFwaS9hcGkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0c1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIjtcbmltcG9ydCBqd3QgZnJvbSBcImpzb253ZWJ0b2tlblwiO1xuXG4vLyBsb2NhbCBpbXBvcnRzXG5pbXBvcnQgZGF0YWJhc2VLZXlzIGZyb20gXCIuLi8uLi9jb25maWcva2V5c1wiO1xuXG5jb25zdCB7IFNjaGVtYSB9ID0gbW9uZ29vc2U7XG5cbmNvbnN0IHVzZXJTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgZmlyc3ROYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIGxhc3ROYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIHVzZXJOYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIHVuaXF1ZTogdHJ1ZVxuICB9LFxuICBlbWFpbDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB1bmlxdWU6IHRydWUsXG4gICAgbG93ZXJjYXNlOiB0cnVlLFxuICAgIGluZGV4OiB0cnVlXG4gIH0sXG4gIGF2YXRhcjoge1xuICAgIHR5cGU6IFN0cmluZ1xuICB9LFxuICBwYXNzd29yZDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBjb25maXJtZWQ6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH0sXG4gIGlzQWRtaW46IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH1cbn0sXG57XG4gIHRpbWVzdGFtcHM6IHRydWVcbn0pO1xuXG51c2VyU2NoZW1hLm1ldGhvZHMuaGFzaFBhc3N3b3JkID0gZnVuY3Rpb24gaGFzaFBhc3N3b3JkKG5ld1VzZXIsIHJlcykge1xuICBjb25zdCB7IHBhc3N3b3JkIH0gPSBuZXdVc2VyO1xuICBjb25zdCBlcnJvcnMgPSB7fTtcbiAgYmNyeXB0LmdlblNhbHQoMTAsIChlcnIsIHNhbHQpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICAgIGJjcnlwdC5oYXNoKHBhc3N3b3JkLCBzYWx0LCAoZXJyb3IsIGhhc2gpID0+IHtcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH1cbiAgICAgIHRoaXMucGFzc3dvcmQgPSBoYXNoO1xuICAgICAgbmV3VXNlci5zYXZlKClcbiAgICAgICAgLnRoZW4odXNlciA9PiB7XG4gICAgICAgICAgcmVzLmpzb24odXNlcilcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKCgpID0+IHtcbiAgICAgICAgICBlcnJvcnMudXNlck5hbWUgPSBcIlVzZXIgbmFtZSBhbHJlYWR5IHRha2VuXCI7XG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA5KS5qc29uKHtcbiAgICAgICAgICAgIHN0YXR1czogJzQwOScsXG4gICAgICAgICAgICBlcnJvcnNcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG51c2VyU2NoZW1hLm1ldGhvZHMuY29tcGFyZVBhc3N3b3JkID0gZnVuY3Rpb24gY29tcGFyZVBhc3N3b3JkKHBhc3N3b3JkLCB1c2VyRm91bmQpIHtcbiAgY29uc3QgbWF0Y2ggPSBiY3J5cHRcbiAgICAuY29tcGFyZShwYXNzd29yZCwgdXNlckZvdW5kLnBhc3N3b3JkKVxuICAgIC50aGVuKGlzTWF0Y2ggPT4ge1xuICAgICAgaWYgKCFpc01hdGNoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pO1xuICAgIHJldHVybiBtYXRjaDtcbn07XG5cbnVzZXJTY2hlbWEubWV0aG9kcy5nZW5lcmF0ZUF1dGhUb2tlbiA9IGZ1bmN0aW9uIGdlbmVyYXRlQXV0aFRva2VuKCkge1xuICBjb25zdCB0b2tlbiA9IGp3dC5zaWduKHtcbiAgICBfaWQ6IHRoaXMuX2lkLFxuICAgIGVtYWlsOiB0aGlzLmVtYWlsLFxuICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLFxuICAgIGlzQWRtaW46IHRoaXMuaXNBZG1pblxuICB9LFxuICAgIGRhdGFiYXNlS2V5cy5rZXlzLlNFQ1JFVF9LRVksXG4gICAgeyBleHBpcmVzSW46IDM2MDAgfVxuKTtcbiAgcmV0dXJuIHRva2VuO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ1VzZXInLCB1c2VyU2NoZW1hKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "userSchema",
        "firstName",
        "type",
        "String",
        "required",
        "lastName",
        "userName",
        "unique",
        "email",
        "lowercase",
        "index",
        "avatar",
        "password",
        "confirmed",
        "Boolean",
        "isAdmin",
        "timestamps",
        "methods",
        "hashPassword",
        "newUser",
        "res",
        "errors",
        "bcrypt",
        "genSalt",
        "err",
        "salt",
        "hash",
        "error",
        "save",
        "then",
        "user",
        "json",
        "status",
        "comparePassword",
        "userFound",
        "match",
        "compare",
        "isMatch",
        "generateAuthToken",
        "token",
        "jwt",
        "sign",
        "_id",
        "databaseKeys",
        "keys",
        "SECRET_KEY",
        "expiresIn",
        "model"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models",
      "sourcesContent": [
        "// imports\nimport mongoose from \"mongoose\";\nimport bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\n\n// local imports\nimport databaseKeys from \"../../config/keys\";\n\nconst { Schema } = mongoose;\n\nconst userSchema = new Schema({\n  firstName: {\n    type: String,\n    required: true\n  },\n  lastName: {\n    type: String,\n    required: true\n  },\n  userName: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    index: true\n  },\n  avatar: {\n    type: String\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  confirmed: {\n    type: Boolean,\n    default: false\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false\n  }\n},\n{\n  timestamps: true\n});\n\nuserSchema.methods.hashPassword = function hashPassword(newUser, res) {\n  const { password } = newUser;\n  const errors = {};\n  bcrypt.genSalt(10, (err, salt) => {\n    if (err) {\n      throw err;\n    }\n    bcrypt.hash(password, salt, (error, hash) => {\n      if (error) {\n        throw error;\n      }\n      this.password = hash;\n      newUser.save()\n        .then(user => {\n          res.json(user)\n        })\n        .catch(() => {\n          errors.userName = \"User name already taken\";\n          return res.status(409).json({\n            status: '409',\n            errors\n          });\n        });\n    });\n  });\n}\n\nuserSchema.methods.comparePassword = function comparePassword(password, userFound) {\n  const match = bcrypt\n    .compare(password, userFound.password)\n    .then(isMatch => {\n      if (!isMatch) {\n        return false;\n      }\n      return true;\n    });\n    return match;\n};\n\nuserSchema.methods.generateAuthToken = function generateAuthToken() {\n  const token = jwt.sign({\n    _id: this._id,\n    email: this.email,\n    password: this.password,\n    isAdmin: this.isAdmin\n  },\n    databaseKeys.keys.SECRET_KEY,\n    { expiresIn: 3600 }\n);\n  return token;\n};\n\nexport default mongoose.model('User', userSchema);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571843250389
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/config/keys.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/config/keys.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/config/keys.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/config/keys.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/config",
        "sourceFileName": "keys.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// configure dotenv\n_dotenv[\"default\"].config(); // set necessary keys\n\n\nvar devkey = {\n  DB_URL: process.env.DEV_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\nvar prodKey = {\n  DB_URL: process.env.DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\nvar testKey = {\n  DB_URL: process.env.TEST_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\nvar exportKeys = {};\n\nif (process.env.NODE_ENV === 'production') {\n  exportKeys.keys = prodKey;\n} else if (process.env.NODE_ENV === 'testing') {\n  exportKeys.keys = testKey;\n} else {\n  exportKeys.keys = devkey;\n}\n\nvar _default = exportKeys;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtleXMuanMiXSwibmFtZXMiOlsiZG90ZW52IiwiY29uZmlnIiwiZGV2a2V5IiwiREJfVVJMIiwicHJvY2VzcyIsImVudiIsIkRFVl9EQl9VUkwiLCJTRUNSRVRfS0VZIiwicHJvZEtleSIsInRlc3RLZXkiLCJURVNUX0RCX1VSTCIsImV4cG9ydEtleXMiLCJOT0RFX0VOViIsImtleXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7OztBQURBO0FBR0E7QUFDQUEsbUJBQU9DLE1BQVAsRyxDQUVBOzs7QUFDQSxJQUFNQyxNQUFNLEdBQUc7QUFDYkMsRUFBQUEsTUFBTSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFEUDtBQUViQyxFQUFBQSxVQUFVLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRTtBQUZYLENBQWY7QUFLQSxJQUFNQyxPQUFPLEdBQUc7QUFDZEwsRUFBQUEsTUFBTSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsTUFETjtBQUVkSSxFQUFBQSxVQUFVLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRTtBQUZWLENBQWhCO0FBS0EsSUFBTUUsT0FBTyxHQUFHO0FBQ2ROLEVBQUFBLE1BQU0sRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlLLFdBRE47QUFFZEgsRUFBQUEsVUFBVSxFQUFFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUU7QUFGVixDQUFoQjtBQUtBLElBQU1JLFVBQVUsR0FBRyxFQUFuQjs7QUFFQSxJQUFJUCxPQUFPLENBQUNDLEdBQVIsQ0FBWU8sUUFBWixLQUF5QixZQUE3QixFQUEyQztBQUN6Q0QsRUFBQUEsVUFBVSxDQUFDRSxJQUFYLEdBQWtCTCxPQUFsQjtBQUNELENBRkQsTUFFTyxJQUFJSixPQUFPLENBQUNDLEdBQVIsQ0FBWU8sUUFBWixLQUF5QixTQUE3QixFQUF3QztBQUM3Q0QsRUFBQUEsVUFBVSxDQUFDRSxJQUFYLEdBQWtCSixPQUFsQjtBQUNELENBRk0sTUFFQTtBQUNMRSxFQUFBQSxVQUFVLENBQUNFLElBQVgsR0FBa0JYLE1BQWxCO0FBQ0Q7O2VBRWNTLFUiLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlckFwaS9jb25maWciLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnRzXG5pbXBvcnQgZG90ZW52IGZyb20gXCJkb3RlbnZcIjtcblxuLy8gY29uZmlndXJlIGRvdGVudlxuZG90ZW52LmNvbmZpZygpO1xuXG4vLyBzZXQgbmVjZXNzYXJ5IGtleXNcbmNvbnN0IGRldmtleSA9IHtcbiAgREJfVVJMOiBwcm9jZXNzLmVudi5ERVZfREJfVVJMLFxuICBTRUNSRVRfS0VZOiBwcm9jZXNzLmVudi5TRUNSRVRfS0VZXG59O1xuXG5jb25zdCBwcm9kS2V5ID0ge1xuICBEQl9VUkw6IHByb2Nlc3MuZW52LkRCX1VSTCxcbiAgU0VDUkVUX0tFWTogcHJvY2Vzcy5lbnYuU0VDUkVUX0tFWVxufTtcblxuY29uc3QgdGVzdEtleSA9IHtcbiAgREJfVVJMOiBwcm9jZXNzLmVudi5URVNUX0RCX1VSTCxcbiAgU0VDUkVUX0tFWTogcHJvY2Vzcy5lbnYuU0VDUkVUX0tFWVxufTtcblxuY29uc3QgZXhwb3J0S2V5cyA9IHt9XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGV4cG9ydEtleXMua2V5cyA9IHByb2RLZXk7XG59IGVsc2UgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdGluZycpIHtcbiAgZXhwb3J0S2V5cy5rZXlzID0gdGVzdEtleTtcbn0gZWxzZSB7XG4gIGV4cG9ydEtleXMua2V5cyA9IGRldmtleTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZXhwb3J0S2V5cztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "keys.js"
      ],
      "names": [
        "dotenv",
        "config",
        "devkey",
        "DB_URL",
        "process",
        "env",
        "DEV_DB_URL",
        "SECRET_KEY",
        "prodKey",
        "testKey",
        "TEST_DB_URL",
        "exportKeys",
        "NODE_ENV",
        "keys"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;AAGA;AACAA,mBAAOC,MAAP,G,CAEA;;;AACA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADP;AAEbC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYE;AAFX,CAAf;AAKA,IAAMC,OAAO,GAAG;AACdL,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYF,MADN;AAEdI,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYE;AAFV,CAAhB;AAKA,IAAME,OAAO,GAAG;AACdN,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYK,WADN;AAEdH,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYE;AAFV,CAAhB;AAKA,IAAMI,UAAU,GAAG,EAAnB;;AAEA,IAAIP,OAAO,CAACC,GAAR,CAAYO,QAAZ,KAAyB,YAA7B,EAA2C;AACzCD,EAAAA,UAAU,CAACE,IAAX,GAAkBL,OAAlB;AACD,CAFD,MAEO,IAAIJ,OAAO,CAACC,GAAR,CAAYO,QAAZ,KAAyB,SAA7B,EAAwC;AAC7CD,EAAAA,UAAU,CAACE,IAAX,GAAkBJ,OAAlB;AACD,CAFM,MAEA;AACLE,EAAAA,UAAU,CAACE,IAAX,GAAkBX,MAAlB;AACD;;eAEcS,U",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/config",
      "sourcesContent": [
        "// imports\nimport dotenv from \"dotenv\";\n\n// configure dotenv\ndotenv.config();\n\n// set necessary keys\nconst devkey = {\n  DB_URL: process.env.DEV_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\n\nconst prodKey = {\n  DB_URL: process.env.DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\n\nconst testKey = {\n  DB_URL: process.env.TEST_DB_URL,\n  SECRET_KEY: process.env.SECRET_KEY\n};\n\nconst exportKeys = {}\n\nif (process.env.NODE_ENV === 'production') {\n  exportKeys.keys = prodKey;\n} else if (process.env.NODE_ENV === 'testing') {\n  exportKeys.keys = testKey;\n} else {\n  exportKeys.keys = devkey;\n}\n\nexport default exportKeys;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571509191726
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateLoginInput = exports.validateSignupInput = void 0;\n\nvar _validator = _interopRequireDefault(require(\"validator\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"./isEmpty\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar validateSignupInput = function validateSignupInput(data) {\n  var errors = {};\n  data.firstName = !(0, _isEmpty[\"default\"])(data.firstName) ? data.firstName : '', data.lastName = !(0, _isEmpty[\"default\"])(data.lastName) ? data.lastName : '', data.userName = !(0, _isEmpty[\"default\"])(data.userName) ? data.userName : '', data.email = !(0, _isEmpty[\"default\"])(data.email) ? data.email : '', data.password = !(0, _isEmpty[\"default\"])(data.password) ? data.password : '', data.confirmPassword = !(0, _isEmpty[\"default\"])(data.confirmPassword) ? data.confirmPassword : '';\n\n  if (!_validator[\"default\"].isLength(data.firstName, {\n    min: 1,\n    max: 20\n  })) {\n    errors.firstName = 'First name must be between 1 and 20 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.firstName)) {\n    errors.firstName = 'First name field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.lastName, {\n    min: 1,\n    max: 20\n  })) {\n    errors.lastName = 'Last name must be between 1 and 20 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.lastName)) {\n    errors.lastName = 'Last name field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.userName, {\n    min: 1,\n    max: 20\n  })) {\n    errors.userName = 'User name must be between 1 and 20 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.userName)) {\n    errors.userName = 'User name field is required';\n  }\n\n  if (!_validator[\"default\"].isEmail(data.email)) {\n    errors.email = 'Email is invalid';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.email)) {\n    errors.email = 'Email field is required';\n  }\n\n  if (!data.password.match('^(?=.{8,}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[@#$%&^+=!]).*')) {\n    errors.password = 'A good password should contain uppercase, lowercase, special characters @#$%&^+=! , digits and above 8 characters';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  if (data.password !== data.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match!!!';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.confirmPassword)) {\n    errors.confirmPassword = 'Confirm password field is required';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateSignupInput = validateSignupInput;\n\nvar validateLoginInput = function validateLoginInput(data) {\n  var errors = {};\n  data.email = !(0, _isEmpty[\"default\"])(data.email) ? data.email : '', data.password = !(0, _isEmpty[\"default\"])(data.password) ? data.password : '';\n\n  if (!_validator[\"default\"].isEmail(data.email)) {\n    errors.email = 'Email is invalid';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.email)) {\n    errors.email = 'Email field is required';\n  }\n\n  if (_validator[\"default\"].isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateLoginInput = validateLoginInput;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsidmFsaWRhdGVTaWdudXBJbnB1dCIsImRhdGEiLCJlcnJvcnMiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInVzZXJOYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsImNvbmZpcm1QYXNzd29yZCIsIlZhbGlkYXRvciIsImlzTGVuZ3RoIiwibWluIiwibWF4IiwiaXNFbXB0eSIsImlzRW1haWwiLCJtYXRjaCIsImlzVmFsaWQiLCJ2YWxpZGF0ZUxvZ2luSW5wdXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7OztBQUVBLElBQU1BLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsQ0FBQUMsSUFBSSxFQUFJO0FBRWxDLE1BQU1DLE1BQU0sR0FBRyxFQUFmO0FBRUFELEVBQUFBLElBQUksQ0FBQ0UsU0FBTCxHQUFpQixDQUFDLHlCQUFRRixJQUFJLENBQUNFLFNBQWIsQ0FBRCxHQUEyQkYsSUFBSSxDQUFDRSxTQUFoQyxHQUE0QyxFQUE3RCxFQUNBRixJQUFJLENBQUNHLFFBQUwsR0FBZ0IsQ0FBQyx5QkFBUUgsSUFBSSxDQUFDRyxRQUFiLENBQUQsR0FBMEJILElBQUksQ0FBQ0csUUFBL0IsR0FBMEMsRUFEMUQsRUFFQUgsSUFBSSxDQUFDSSxRQUFMLEdBQWdCLENBQUMseUJBQVFKLElBQUksQ0FBQ0ksUUFBYixDQUFELEdBQTBCSixJQUFJLENBQUNJLFFBQS9CLEdBQTBDLEVBRjFELEVBR0FKLElBQUksQ0FBQ0ssS0FBTCxHQUFhLENBQUMseUJBQVFMLElBQUksQ0FBQ0ssS0FBYixDQUFELEdBQXVCTCxJQUFJLENBQUNLLEtBQTVCLEdBQW9DLEVBSGpELEVBSUFMLElBQUksQ0FBQ00sUUFBTCxHQUFnQixDQUFDLHlCQUFRTixJQUFJLENBQUNNLFFBQWIsQ0FBRCxHQUEwQk4sSUFBSSxDQUFDTSxRQUEvQixHQUEwQyxFQUoxRCxFQUtBTixJQUFJLENBQUNPLGVBQUwsR0FBdUIsQ0FBQyx5QkFBUVAsSUFBSSxDQUFD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QUFDSyxLQUE1QixHQUFvQyxFQUFqRCxFQUNBTCxJQUFJLENBQUNNLFFBQUwsR0FBZ0IsQ0FBQyx5QkFBUU4sSUFBSSxDQUFDTSxRQUFiLENBQUQsR0FBMEJOLElBQUksQ0FBQ00sUUFBL0IsR0FBMEMsRUFEMUQ7O0FBR0EsTUFBSSxDQUFDRSxzQkFBVUssT0FBVixDQUFrQmIsSUFBSSxDQUFDSyxLQUF2QixDQUFMLEVBQW9DO0FBQ2xDSixJQUFBQSxNQUFNLENBQUNJLEtBQVAsR0FBZSxrQkFBZjtBQUNEOztBQUVELE1BQUlHLHNCQUFVSSxPQUFWLENBQWtCWixJQUFJLENBQUNLLEtBQXZCLENBQUosRUFBbUM7QUFDakNKLElBQUFBLE1BQU0sQ0FBQ0ksS0FBUCxHQUFlLHlCQUFmO0FBQ0Q7O0FBRUQsTUFBSUcsc0JBQVVJLE9BQVYsQ0FBa0JaLElBQUksQ0FBQ00sUUFBdkIsQ0FBSixFQUFzQztBQUNwQ0wsSUFBQUEsTUFBTSxDQUFDSyxRQUFQLEdBQWtCLDRCQUFsQjtBQUNEOztBQUVELFNBQU87QUFDTEwsSUFBQUEsTUFBTSxFQUFOQSxNQURLO0FBRUxjLElBQUFBLE9BQU8sRUFBRSx5QkFBUWQsTUFBUjtBQUZKLEdBQVA7QUFLRCxDQXhCRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9ibHVlL0Rlc2t0b3AvUHJvZ3JhbW1pbmcvSmF2YXNjcmlwdC9EZXZlbG9wZXIvZGV2ZWxvcGVyQXBpL2FwaS92YWxpZGF0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWYWxpZGF0b3IgZnJvbSBcInZhbGlkYXRvclwiO1xuXG5pbXBvcnQgaXNFbXB0eSBmcm9tIFwiLi9pc0VtcHR5XCI7XG5cbmNvbnN0IHZhbGlkYXRlU2lnbnVwSW5wdXQgPSBkYXRhID0+IHtcblxuICBjb25zdCBlcnJvcnMgPSB7fTtcblxuICBkYXRhLmZpcnN0TmFtZSA9ICFpc0VtcHR5KGRhdGEuZmlyc3ROYW1lKSA/IGRhdGEuZmlyc3ROYW1lIDogJycsXG4gIGRhdGEubGFzdE5hbWUgPSAhaXNFbXB0eShkYXRhLmxhc3ROYW1lKSA/IGRhdGEubGFzdE5hbWUgOiAnJyxcbiAgZGF0YS51c2VyTmFtZSA9ICFpc0VtcHR5KGRhdGEudXNlck5hbWUpID8gZGF0YS51c2VyTmFtZSA6ICcnLFxuICBkYXRhLmVtYWlsID0gIWlzRW1wdHkoZGF0YS5lbWFpbCkgPyBkYXRhLmVtYWlsIDogJycsXG4gIGRhdGEucGFzc3dvcmQgPSAhaXNFbXB0eShkYXRhLnBhc3N3b3JkKSA/IGRhdGEucGFzc3dvcmQgOiAnJyxcbiAgZGF0YS5jb25maXJtUGFzc3dvcmQgPSAhaXNFbXB0eShkYXRhLmNvbmZpcm1QYXNzd29yZCkgPyBkYXRhLmNvbmZpcm1QYXNzd29yZCA6ICcnO1xuXG4gIGlmICghVmFsaWRhdG9yLmlzTGVuZ3RoKGRhdGEuZmlyc3ROYW1lLCB7IG1pbjogMSwgbWF4OiAyMCB9KSkge1xuICAgIGVycm9ycy5maXJzdE5hbWUgPSAnRmlyc3QgbmFtZSBtdXN0IGJlIGJldHdlZW4gMSBhbmQgMjAgY2hhcmFjdGVycyc7XG4gIH1cblxuICBpZiAoVmFsaWRhdG9yLmlzRW1wdHkoZGF0YS5maXJzdE5hbWUpKSB7XG4gICAgZXJyb3JzLmZpcnN0TmFtZSA9ICdGaXJzdCBuYW1lIGZpZWxkIGlzIHJlcXVpcmVkJztcbiAgfVxuXG4gIGlmICghVmFsaWRhdG9yLmlzTGVuZ3RoKGRhdGEubGFzdE5hbWUsIHsgbWluOiAxLCBtYXg6IDIwIH0pKSB7XG4gICAgZXJyb3JzLmxhc3ROYW1lID0gJ0xhc3QgbmFtZSBtdXN0IGJlIGJldHdlZW4gMSBhbmQgMjAgY2hhcmFjdGVycyc7XG4gIH1cblxuICBpZiAoVmFsaWRhdG9yLmlzRW1wdHkoZGF0YS5sYXN0TmFtZSkpIHtcbiAgICBlcnJvcnMubGFzdE5hbWUgPSAnTGFzdCBuYW1lIGZpZWxkIGlzIHJlcXVpcmVkJztcbiAgfVxuXG4gIGlmICghVmFsaWRhdG9yLmlzTGVuZ3RoKGRhdGEudXNlck5hbWUsIHsgbWluOiAxLCBtYXg6IDIwIH0pKSB7XG4gICAgZXJyb3JzLnVzZXJOYW1lID0gJ1VzZXIgbmFtZSBtdXN0IGJlIGJldHdlZW4gMSBhbmQgMjAgY2hhcmFjdGVycyc7XG4gIH1cblxuICBpZiAoVmFsaWRhdG9yLmlzRW1wdHkoZGF0YS51c2VyTmFtZSkpIHtcbiAgICBlcnJvcnMudXNlck5hbWUgPSAnVXNlciBuYW1lIGZpZWxkIGlzIHJlcXVpcmVkJztcbiAgfVxuXG4gIGlmICghVmFsaWRhdG9yLmlzRW1haWwoZGF0YS5lbWFpbCkpIHtcbiAgICBlcnJvcnMuZW1haWwgPSAnRW1haWwgaXMgaW52YWxpZCdcbiAgfVxuXG4gIGlmIChWYWxpZGF0b3IuaXNFbXB0eShkYXRhLmVtYWlsKSkge1xuICAgIGVycm9ycy5lbWFpbCA9ICdFbWFpbCBmaWVsZCBpcyByZXF1aXJlZCdcbiAgfVxuXG4gIGlmICghZGF0YS5wYXNzd29yZC5tYXRjaCgnXig/PS57OCx9JCkoPz0uKltBLVpdKSg/PS4qW2Etel0pKD89LipbMC05XSkoPz0uKltAIyQlJl4rPSFdKS4qJykpIHtcbiAgICBlcnJvcnMucGFzc3dvcmQgPSAnQSBnb29kIHBhc3N3b3JkIHNob3VsZCBjb250YWluIHVwcGVyY2FzZSwgbG93ZXJjYXNlLCBzcGVjaWFsIGNoYXJhY3RlcnMgQCMkJSZeKz0hICwgZGlnaXRzIGFuZCBhYm92ZSA4IGNoYXJhY3RlcnMnXG4gIH1cblxuICBpZiAoVmFsaWRhdG9yLmlzRW1wdHkoZGF0YS5wYXNzd29yZCkpIHtcbiAgICBlcnJvcnMucGFzc3dvcmQgPSAnUGFzc3dvcmQgZmllbGQgaXMgcmVxdWlyZWQnO1xuICB9XG5cbiAgaWYgKGRhdGEucGFzc3dvcmQgIT09IGRhdGEuY29uZmlybVBhc3N3b3JkKSB7XG4gICAgZXJyb3JzLmNvbmZpcm1QYXNzd29yZCA9ICdQYXNzd29yZHMgbXVzdCBtYXRjaCEhISc7XG4gIH1cblxuICBpZiAoVmFsaWRhdG9yLmlzRW1wdHkoZGF0YS5jb25maXJtUGFzc3dvcmQpKSB7XG4gICAgZXJyb3JzLmNvbmZpcm1QYXNzd29yZCA9ICdDb25maXJtIHBhc3N3b3JkIGZpZWxkIGlzIHJlcXVpcmVkJ1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBlcnJvcnMsXG4gICAgaXNWYWxpZDogaXNFbXB0eShlcnJvcnMpXG4gIH07XG59O1xuXG5jb25zdCB2YWxpZGF0ZUxvZ2luSW5wdXQgPSBkYXRhID0+IHtcblxuICBjb25zdCBlcnJvcnMgPSB7fTtcblxuICBkYXRhLmVtYWlsID0gIWlzRW1wdHkoZGF0YS5lbWFpbCkgPyBkYXRhLmVtYWlsIDogJycsXG4gIGRhdGEucGFzc3dvcmQgPSAhaXNFbXB0eShkYXRhLnBhc3N3b3JkKSA/IGRhdGEucGFzc3dvcmQgOiAnJztcblxuICBpZiAoIVZhbGlkYXRvci5pc0VtYWlsKGRhdGEuZW1haWwpKSB7XG4gICAgZXJyb3JzLmVtYWlsID0gJ0VtYWlsIGlzIGludmFsaWQnO1xuICB9XG5cbiAgaWYgKFZhbGlkYXRvci5pc0VtcHR5KGRhdGEuZW1haWwpKSB7XG4gICAgZXJyb3JzLmVtYWlsID0gJ0VtYWlsIGZpZWxkIGlzIHJlcXVpcmVkJztcbiAgfVxuXG4gIGlmIChWYWxpZGF0b3IuaXNFbXB0eShkYXRhLnBhc3N3b3JkKSkge1xuICAgIGVycm9ycy5wYXNzd29yZCA9ICdQYXNzd29yZCBmaWVsZCBpcyByZXF1aXJlZCc7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGVycm9ycyxcbiAgICBpc1ZhbGlkOiBpc0VtcHR5KGVycm9ycylcbiAgfTtcblxufTtcblxuZXhwb3J0IHtcbiAgdmFsaWRhdGVTaWdudXBJbnB1dCxcbiAgdmFsaWRhdGVMb2dpbklucHV0XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "validateSignupInput",
        "data",
        "errors",
        "firstName",
        "lastName",
        "userName",
        "email",
        "password",
        "confirmPassword",
        "Validator",
        "isLength",
        "min",
        "max",
        "isEmpty",
        "isEmail",
        "match",
        "isValid",
        "validateLoginInput"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations",
      "sourcesContent": [
        "import Validator from \"validator\";\n\nimport isEmpty from \"./isEmpty\";\n\nconst validateSignupInput = data => {\n\n  const errors = {};\n\n  data.firstName = !isEmpty(data.firstName) ? data.firstName : '',\n  data.lastName = !isEmpty(data.lastName) ? data.lastName : '',\n  data.userName = !isEmpty(data.userName) ? data.userName : '',\n  data.email = !isEmpty(data.email) ? data.email : '',\n  data.password = !isEmpty(data.password) ? data.password : '',\n  data.confirmPassword = !isEmpty(data.confirmPassword) ? data.confirmPassword : '';\n\n  if (!Validator.isLength(data.firstName, { min: 1, max: 20 })) {\n    errors.firstName = 'First name must be between 1 and 20 characters';\n  }\n\n  if (Validator.isEmpty(data.firstName)) {\n    errors.firstName = 'First name field is required';\n  }\n\n  if (!Validator.isLength(data.lastName, { min: 1, max: 20 })) {\n    errors.lastName = 'Last name must be between 1 and 20 characters';\n  }\n\n  if (Validator.isEmpty(data.lastName)) {\n    errors.lastName = 'Last name field is required';\n  }\n\n  if (!Validator.isLength(data.userName, { min: 1, max: 20 })) {\n    errors.userName = 'User name must be between 1 and 20 characters';\n  }\n\n  if (Validator.isEmpty(data.userName)) {\n    errors.userName = 'User name field is required';\n  }\n\n  if (!Validator.isEmail(data.email)) {\n    errors.email = 'Email is invalid'\n  }\n\n  if (Validator.isEmpty(data.email)) {\n    errors.email = 'Email field is required'\n  }\n\n  if (!data.password.match('^(?=.{8,}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[@#$%&^+=!]).*')) {\n    errors.password = 'A good password should contain uppercase, lowercase, special characters @#$%&^+=! , digits and above 8 characters'\n  }\n\n  if (Validator.isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  if (data.password !== data.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match!!!';\n  }\n\n  if (Validator.isEmpty(data.confirmPassword)) {\n    errors.confirmPassword = 'Confirm password field is required'\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\nconst validateLoginInput = data => {\n\n  const errors = {};\n\n  data.email = !isEmpty(data.email) ? data.email : '',\n  data.password = !isEmpty(data.password) ? data.password : '';\n\n  if (!Validator.isEmail(data.email)) {\n    errors.email = 'Email is invalid';\n  }\n\n  if (Validator.isEmpty(data.email)) {\n    errors.email = 'Email field is required';\n  }\n\n  if (Validator.isEmpty(data.password)) {\n    errors.password = 'Password field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n\n};\n\nexport {\n  validateSignupInput,\n  validateLoginInput\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571907224519
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/isEmpty.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/isEmpty.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/isEmpty.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/isEmpty.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations",
        "sourceFileName": "isEmpty.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar isEmpty = function isEmpty(value) {\n  return value === undefined || value === null || _typeof(value) === 'object' && Object.keys(value).length === 0 || typeof value === 'string' && value.trim().length === 0;\n};\n\nvar _default = isEmpty;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzRW1wdHkuanMiXSwibmFtZXMiOlsiaXNFbXB0eSIsInZhbHVlIiwidW5kZWZpbmVkIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInRyaW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQU1BLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUFDLEtBQUs7QUFBQSxTQUNuQkEsS0FBSyxLQUFLQyxTQUFWLElBQ0FELEtBQUssS0FBSyxJQURWLElBRUMsUUFBT0EsS0FBUCxNQUFpQixRQUFqQixJQUE2QkUsTUFBTSxDQUFDQyxJQUFQLENBQVlILEtBQVosRUFBbUJJLE1BQW5CLEtBQThCLENBRjVELElBR0MsT0FBT0osS0FBUCxLQUFpQixRQUFqQixJQUE2QkEsS0FBSyxDQUFDSyxJQUFOLEdBQWFELE1BQWIsS0FBd0IsQ0FKbkM7QUFBQSxDQUFyQjs7ZUFNZUwsTyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ibHVlL0Rlc2t0b3AvUHJvZ3JhbW1pbmcvSmF2YXNjcmlwdC9EZXZlbG9wZXIvZGV2ZWxvcGVyQXBpL2FwaS92YWxpZGF0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGlzRW1wdHkgPSB2YWx1ZSA9PlxuICB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8XG4gIHZhbHVlID09PSBudWxsIHx8XG4gICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIE9iamVjdC5rZXlzKHZhbHVlKS5sZW5ndGggPT09IDApIHx8XG4gICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHZhbHVlLnRyaW0oKS5sZW5ndGggPT09IDApXG5cbmV4cG9ydCBkZWZhdWx0IGlzRW1wdHk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "isEmpty.js"
      ],
      "names": [
        "isEmpty",
        "value",
        "undefined",
        "Object",
        "keys",
        "length",
        "trim"
      ],
      "mappings": ";;;;;;;;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnBA,KAAK,KAAKC,SAAV,IACAD,KAAK,KAAK,IADV,IAEC,QAAOA,KAAP,MAAiB,QAAjB,IAA6BE,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MAAnB,KAA8B,CAF5D,IAGC,OAAOJ,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACK,IAAN,GAAaD,MAAb,KAAwB,CAJnC;AAAA,CAArB;;eAMeL,O",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations",
      "sourcesContent": [
        "const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0)\n\nexport default isEmpty;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571378142870
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes/questions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes/questions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes/questions.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes/questions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes",
        "sourceFileName": "questions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _auth = _interopRequireDefault(require(\"../middlewares/auth\"));\n\nvar _Question = _interopRequireDefault(require(\"../models/Question\"));\n\nvar _questionInput = require(\"../validations/questionInput\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar router = _express[\"default\"].Router(); // @task: Post a question\n// @Access: Private(User)\n// @desc: Enable logged in users to ask questions\n\n\nrouter.post(\"/question\", _auth[\"default\"], function (req, res) {\n  var _validateQuestionInpu = (0, _questionInput.validateQuestionInput)(req.body.addQuestion),\n      errors = _validateQuestionInpu.errors,\n      isValid = _validateQuestionInpu.isValid;\n\n  if (!isValid) {\n    res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  var question = req.body.addQuestion.question;\n\n  _Question[\"default\"].findOne({\n    question: question\n  }).then(function (questionFound) {\n    if (questionFound) {\n      // abort the process and give relevant response\n      return res.status(409).json({\n        status: '409',\n        questionExists: 'question already asked',\n        request: {\n          type: 'GET',\n          url: \"http://127.0.0.1:8080/api/questions/\".concat(questionFound._id)\n        }\n      });\n    }\n\n    var newQuestion = new _Question[\"default\"]({\n      user: req.user._id,\n      question: question\n    }); // save to database\n\n    newQuestion.save().then(function (savedQuestion) {\n      res.status(201).json({\n        status: '201',\n        savedQuestion: {\n          _id: savedQuestion._id,\n          question: savedQuestion.question,\n          user: {\n            _id: savedQuestion.user._id\n          }\n        }\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n}); // @task: Get all question\n// @Access: Public\n// @desc: Enable anyone to view the questions\n\nrouter.get(\"/questions\", function (req, res) {\n  _Question[\"default\"].find().select('_id question user').populate('user', ['userName']).then(function (questionsFound) {\n    if (questionsFound.length === 0) {\n      return res.json({\n        status: '404',\n        errors: {\n          notFound: 'There are no questions available'\n        }\n      });\n    } // continue\n\n\n    return res.json({\n      status: '200',\n      message: 'Question(s) listed below',\n      count: questionsFound.length,\n      questionsFound: questionsFound\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n}); // @task: Get a question by id\n// @Access: Private\n// @desc: Enable logged in user to view the question by id\n\nrouter.get(\"/:question_id\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).select('_id question answers user').populate('user', ['userName']).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    }\n\n    res.status(200).json({\n      status: '200',\n      questionFound: questionFound\n    });\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Edit (PUT) a question if there are no answers\n// @Access: Private(User)\n// @desc: Enable question owner to edit, should be logged in\n\nrouter.put(\"/:question_id\", _auth[\"default\"], function (req, res) {\n  var params = req.params.question_id;\n  var updateQuestion = req.body.putQuestion;\n  var question = updateQuestion.question;\n\n  var _validateQuestionInpu2 = (0, _questionInput.validateQuestionInput)(updateQuestion),\n      errors = _validateQuestionInpu2.errors,\n      isValid = _validateQuestionInpu2.isValid; // validate question update field input\n\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  _Question[\"default\"].findOne({\n    _id: params\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // check to confirm the update is granted to the user who asked the question\n\n\n    if (questionFound.user.toString() !== req.user._id) {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          noAuth: 'You don/t have that permission to edit the question'\n        }\n      });\n    } // check if question already has answers\n    // ensure no updates if the question already has answers\n\n\n    if (questionFound.answers.length !== 0) {\n      return res.status(400).json({\n        status: '400',\n        errors: {\n          answerFound: 'The question cannot be edited since it already has answers'\n        }\n      });\n    } // check for changes in question\n    // ensure no updates if no changes detected\n\n\n    if (questionFound.question === question) {\n      return res.status(409).json({\n        status: '409',\n        errors: {\n          noChange: 'No changes in question detected'\n        }\n      });\n    }\n\n    _Question[\"default\"].findOneAndUpdate({\n      _id: params\n    }, updateQuestion, {\n      \"new\": true\n    }).select('_id question answers user').then(function (updatedQuestion) {\n      res.status(200).json({\n        status: '200',\n        message: 'Question successfully updated',\n        updatedQuestion: updatedQuestion\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Delete a question by id\n// @Access: Private(Admin, User)\n// @desc: Enable question owner and admin to delete question\n\nrouter[\"delete\"](\"/:question_id\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    // check if question exists\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id is either deleted or does not exists'\n        }\n      });\n    } // check owner\n\n\n    if (questionFound.user.toString() === req.user._id || req.user.isAdmin === true) {\n      questionFound.remove().then(function () {\n        return res.status(200).json({\n          status: '200',\n          message: 'Question deleted'\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n    } else {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          noAuth: 'You don/t have that permission to delete the question'\n        }\n      });\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id is either deleted or does not exists'\n      }\n    });\n  });\n}); // @task: Answer a question\n// @Access: Private(Users)\n// @desc: Enable users to answers a question\n\nrouter.post(\"/:question_id/answer\", _auth[\"default\"], function (req, res) {\n  var addAnswer = req.body.addAnswer;\n  var answer = addAnswer.answer;\n\n  var _validateAnswerInput = (0, _questionInput.validateAnswerInput)(addAnswer),\n      errors = _validateAnswerInput.errors,\n      isValid = _validateAnswerInput.isValid; // check for empty fields\n\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // get user id and question id\n\n\n    var user = req.user._id;\n    var question = questionFound._id; // set answer\n\n    var newAnswer = {\n      answer: answer,\n      user: user,\n      question: question\n    }; // add the answer\n\n    questionFound.answers.unshift(newAnswer); // save the answer\n\n    questionFound.save().then(function (answered) {\n      return res.status(201).json({\n        status: '201',\n        _id: answered._id,\n        user: answered.user,\n        question: answered.question,\n        answers: answered.answers\n      });\n    })[\"catch\"](function (err) {\n      return res.json(err);\n    });\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Check an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to check one answer as accepted\n\nrouter.post(\"/:question_id/:answer_id/check\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // confirm only the question owner can check it as accepted\n\n\n    if (questionFound.user.toString() !== req.user._id) {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          notAuth: 'Only the question owner can check an answer'\n        }\n      });\n    } // confirm no question is checked\n\n\n    for (var i = 0; i < questionFound.answers.length; i++) {\n      if (questionFound.answers[i].check) {\n        return res.json({\n          status: '400',\n          errors: {\n            alreadyChecked: 'You have already checked another answer'\n          }\n        });\n        ;\n      }\n    } // filter the answers to obtain favorite answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer_id that matches the params\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // check key and user id value\n\n\n    var check = {\n      check: req.user._id\n    }; // save user id\n\n    for (var _i = 0; _i < filteredAnswer.length; _i++) {\n      filteredAnswer[_i].set(check);\n\n      questionFound.save().then(function (checkedQuestion) {\n        res.json({\n          status: '201',\n          message: 'Answer checked',\n          checkedQuestion: checkedQuestion\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Answer by that id not found'\n      }\n    });\n  });\n}); // @task: Uncheck an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to uncheck an answer\n\nrouter.post(\"/:question_id/:answer_id/uncheck\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // confirm only the question owner can uncheck an accepted answer\n\n\n    if (questionFound.user.toString() !== req.user._id) {\n      return res.status(401).json({\n        status: '401',\n        errors: {\n          noAuth: 'Only the question owner can uncheck an answer'\n        }\n      });\n    } // check if answer exists\n\n\n    var confirmQuestionExists = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return if answer doesn't exist\n\n    if (confirmQuestionExists.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // confirm if the answer has been checked before unchecking\n\n\n    for (var i = 0; confirmQuestionExists.length; i++) {\n      if (!confirmQuestionExists[i].check) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            notChecked: 'The answer has not been checked'\n          }\n        });\n      } // uncheck answer\n\n\n      confirmQuestionExists[i].check = null; // save\n\n      questionFound.save().then(function (answer) {\n        return res.status(200).json({\n          status: '200',\n          message: 'Answer unchecked',\n          answer: answer\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to upvote an answer they like\n\nrouter.post(\"/:question_id/:answer_id/upvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    });\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // ensure a user upvotes once\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      var filterUpvote = filteredAnswer[i].upvote.filter(function (upvote) {\n        return upvote.user.toString() === req.user._id;\n      });\n\n      if (filterUpvote.length !== 0) {\n        return res.status(400).json({\n          status: '404',\n          errors: {\n            alreadyUpvoted: 'You have already upvoted this answer'\n          }\n        });\n      } // set upvote\n\n\n      var makeUpvote = {\n        user: req.user._id\n      }; // make upvote\n\n      filteredAnswer[i].upvote.unshift(makeUpvote); // save\n\n      questionFound.save().then(function (answer) {\n        res.status(201).json({\n          status: '201',\n          message: 'You have upvoted the answer',\n          answer: answer\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Un-upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-upvote an answer they have upvoted\n\nrouter.post(\"/:question_id/:answer_id/unupvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    });\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // un-upvote if and only if the answer has been upvoted\n    // ensure that only the upvoter can un-upvote\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      var filterUpvote = filteredAnswer[i].upvote.filter(function (upvote) {\n        return upvote.user.toString() === req.user._id;\n      });\n\n      if (filterUpvote.length === 0) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            notUpvoted: 'You have not upvoted the answer'\n          }\n        });\n      } // create remove index\n\n\n      var removeIndex = filteredAnswer[i].upvote.map(function (upvote) {\n        return upvote.user.toString();\n      }).indexOf(req.user._id); // remove upvote\n\n      filteredAnswer[i].upvote.splice(removeIndex, 1); // save\n\n      questionFound.save().then(function (unupvote) {\n        return res.status(200).json({\n          status: '200',\n          message: 'You have un upvoted the answer',\n          unupvote: unupvote\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n\n    ;\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to downvote an answer they don't prefer\n\nrouter.post(\"/:question_id/:answer_id/downvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    }\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      // check if the user has already downvoted\n      var filterDownvote = filteredAnswer[i].downvote.filter(function (downvote) {\n        return downvote.user.toString() === req.user._id;\n      }); // return 400 bad request if the user has already downvoted\n\n      if (filterDownvote.length !== 0) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            alreadyDownvoted: 'You have already downvoted'\n          }\n        });\n      } // create downvote\n\n\n      var makeDownvote = {\n        user: req.user._id\n      }; // set downvote\n\n      filteredAnswer[i].downvote.unshift(makeDownvote); // save\n\n      questionFound.save().then(function (downvote) {\n        res.status(201).json({\n          status: '201',\n          message: 'You have downvoted the answer',\n          downvote: downvote\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Un-downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-downvote an answer they have downvoted\n\nrouter.post(\"/:question_id/:answer_id/undownvote\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // ensure no un-downvoting for non downvoted answers\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      console.log(filteredAnswer[i]); // filter downvotes\n\n      var filterDownvote = filteredAnswer[i].downvote.filter(function (downvote) {\n        return downvote.user.toString() === req.user._id;\n      }); // return bad request if user has not downvoted\n\n      if (filterDownvote.length === 0) {\n        return res.status(400).json({\n          status: '400',\n          notDownvoted: 'You have not downvoted the answer'\n        });\n      } // create remove index\n\n\n      var removeIndex = filteredAnswer[i].downvote.map(function (undownvote) {\n        return undownvote.user.toString();\n      }).indexOf(req.user._id); // un-downvote\n\n      filteredAnswer[i].downvote.splice(removeIndex, 1); // save\n\n      questionFound.save().then(function (undownvoted) {\n        return res.status(200).json({\n          status: '200',\n          message: 'You have un downvoted the answer',\n          undownvoted: undownvoted\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Comment on an answer\n// @Access: Private(Users)\n// @desc: Enable users to comment on an answer\n\nrouter.post(\"/:question_id/:answer_id/comment\", _auth[\"default\"], function (req, res) {\n  var addComment = req.body.addComment;\n\n  var _validateCommentInput = (0, _questionInput.validateCommentInput)(addComment),\n      errors = _validateCommentInput.errors,\n      isValid = _validateCommentInput.isValid; // return error if no comment field or if field is empty\n\n\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors: errors\n    });\n  }\n\n  _Question[\"default\"].findOne({\n    _id: req.params.question_id\n  }).then(function (questionFound) {\n    if (!questionFound) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    } // continue\n    // find the answer\n\n\n    var filteredAnswer = questionFound.answers.filter(function (answer) {\n      return answer._id.toString() === req.params.answer_id;\n    }); // return not found if no answer\n\n    if (filteredAnswer.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    } // access array like object\n\n\n    for (var i = 0; filteredAnswer.length; i++) {\n      // get the comment\n      var comment = addComment.comment; // create comment object\n\n      var newComment = {\n        user: req.user._id,\n        answer: filteredAnswer[i]._id,\n        comment: comment\n      }; // set the object\n\n      filteredAnswer[i].comments.unshift(newComment);\n      questionFound.save().then(function (commented) {\n        return res.status(201).json({\n          status: '201',\n          message: 'Answer commented',\n          commented: commented\n        });\n      })[\"catch\"](function (err) {\n        return res.json(err);\n      });\n      break;\n    }\n  })[\"catch\"](function () {\n    return res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    });\n  });\n}); // @task: Question with most answers\n// @Access: Private(Users)\n// @desc: Enable users to view the question with most answers\n\nrouter.get(\"/questions/mostanswered\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].find().select('_id user question answers').populate('user', ['userName']).then(function (questionsFound) {\n    if (questionsFound.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'There are no questions available'\n        }\n      });\n    } // continue\n    // map the answers and the number of answers in specifice questions\n\n\n    var mappedAnswers = questionsFound.map(function (question) {\n      return question.answers.length;\n    }); // check for questions with no answers\n\n    var noAnswers = questionsFound.filter(function (question) {\n      return question.answers.length === 0;\n    }); // return if no answers yet\n\n    if (mappedAnswers.length === noAnswers.length) {\n      return res.status(400).json({\n        status: '400',\n        errors: {\n          noAnswers: 'There are no answers yet for the questions'\n        }\n      });\n    } // get the search index on question with the highest answers\n\n\n    var searchIndex = mappedAnswers.indexOf(Math.max.apply(Math, _toConsumableArray(mappedAnswers))); // get the question with most answers\n\n    var mostAnswered = questionsFound[searchIndex]; // handle a case where there more than one question with equal -\n    // and highest answers\n    // map question answers\n\n    var moreThanOneQuestion = questionsFound.map(function (question) {\n      return question.answers;\n    }); // get array of questions with highest matched answers\n\n    var filterMoreThanOneQuestion = moreThanOneQuestion.filter(function (answers) {\n      return answers.length === Math.max.apply(Math, _toConsumableArray(mappedAnswers));\n    });\n\n    if (filterMoreThanOneQuestion.length <= 1) {\n      return res.status(200).json({\n        status: '200',\n        answersCount: mostAnswered.answers.length,\n        message: \"The question from \".concat(mostAnswered.user.userName, \" received most answers, (\").concat(mostAnswered.answers.length, \") in total\"),\n        mostAnswered: mostAnswered\n      });\n    }\n\n    return res.status(200).json({\n      status: '200',\n      answersCount: mostAnswered.answers.length,\n      message: \"The question from \".concat(mostAnswered.user.userName, \" received most answers, (\").concat(mostAnswered.answers.length, \") in total\"),\n      note: 'There are other question with the same number of answers. However, this question was asked earlier.',\n      mostAnswered: mostAnswered\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n}); // @task: All user questions\n// @Access: Private(Users)\n// @desc: Enable users to view all their questions\n\nrouter.get(\"/questions/all\", _auth[\"default\"], function (req, res) {\n  _Question[\"default\"].find({\n    user: req.user._id\n  }).select('_id user question answers').then(function (userQuestions) {\n    if (userQuestions.length === 0) {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'This user has no questions yet'\n        }\n      });\n    } // continue\n\n\n    var noOfQuestions = userQuestions.length;\n    res.status(200).json({\n      status: '200',\n      questionsCount: noOfQuestions,\n      message: \"You have \".concat(noOfQuestions, \" questions\"),\n      userQuestions: userQuestions\n    });\n  })[\"catch\"](function (err) {\n    return res.json(err);\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "questions.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "auth",
        "req",
        "res",
        "body",
        "addQuestion",
        "errors",
        "isValid",
        "status",
        "json",
        "question",
        "Question",
        "findOne",
        "then",
        "questionFound",
        "questionExists",
        "request",
        "type",
        "url",
        "_id",
        "newQuestion",
        "user",
        "save",
        "savedQuestion",
        "err",
        "get",
        "find",
        "select",
        "populate",
        "questionsFound",
        "length",
        "notFound",
        "message",
        "count",
        "params",
        "question_id",
        "put",
        "updateQuestion",
        "putQuestion",
        "toString",
        "noAuth",
        "answers",
        "answerFound",
        "noChange",
        "findOneAndUpdate",
        "updatedQuestion",
        "isAdmin",
        "remove",
        "addAnswer",
        "answer",
        "newAnswer",
        "unshift",
        "answered",
        "notAuth",
        "i",
        "check",
        "alreadyChecked",
        "filteredAnswer",
        "filter",
        "answer_id",
        "set",
        "checkedQuestion",
        "confirmQuestionExists",
        "notChecked",
        "filterUpvote",
        "upvote",
        "alreadyUpvoted",
        "makeUpvote",
        "notUpvoted",
        "removeIndex",
        "map",
        "indexOf",
        "splice",
        "unupvote",
        "filterDownvote",
        "downvote",
        "alreadyDownvoted",
        "makeDownvote",
        "console",
        "log",
        "notDownvoted",
        "undownvote",
        "undownvoted",
        "addComment",
        "comment",
        "newComment",
        "comments",
        "commented",
        "mappedAnswers",
        "noAnswers",
        "searchIndex",
        "Math",
        "max",
        "mostAnswered",
        "moreThanOneQuestion",
        "filterMoreThanOneQuestion",
        "answersCount",
        "userName",
        "note",
        "userQuestions",
        "noOfQuestions",
        "questionsCount"
      ],
      "mappings": "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",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/routes",
      "sourcesContent": [
        "// imports\nimport express from \"express\";\n\n// local imports\nimport auth from \"../middlewares/auth\";\nimport Question from \"../models/Question\";\nimport {\n  validateQuestionInput, validateAnswerInput, validateCommentInput\n} from \"../validations/questionInput\";\n\nconst router = express.Router();\n\n\n// @task: Post a question\n// @Access: Private(User)\n// @desc: Enable logged in users to ask questions\nrouter.post(\"/question\", auth, (req, res) => {\n  const { errors, isValid } = validateQuestionInput(req.body.addQuestion);\n  if (!isValid) {\n    res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  const { question } = req.body.addQuestion;\n  Question\n    .findOne({question})\n    .then(questionFound => {\n      if (questionFound) {\n        // abort the process and give relevant response\n          return res.status(409).json({\n            status: '409',\n            questionExists: 'question already asked',\n            request: {\n              type: 'GET',\n              url: `http://127.0.0.1:8080/api/questions/${questionFound._id}`\n            }\n          });\n      }\n      const newQuestion = new Question({\n        user: req.user._id,\n        question\n      });\n      // save to database\n      newQuestion\n        .save()\n        .then(savedQuestion => {\n          res.status(201).json({\n            status: '201',\n            savedQuestion: {\n              _id: savedQuestion._id,\n              question: savedQuestion.question,\n              user: {\n                _id: savedQuestion.user._id\n              }\n            }\n          })\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(err => res.json(err));\n});\n\n// @task: Get all question\n// @Access: Public\n// @desc: Enable anyone to view the questions\nrouter.get(\"/questions\", (req, res) => {\n  Question\n    .find()\n    .select('_id question user')\n    .populate('user', ['userName'])\n    .then(questionsFound => {\n      if (questionsFound.length === 0) {\n        return res.json({\n          status: '404',\n          errors: {\n            notFound: 'There are no questions available'\n          }\n        });\n      }\n      // continue\n      return res.json({\n        status: '200',\n        message: 'Question(s) listed below',\n        count: questionsFound.length,\n        questionsFound\n      });\n    })\n    .catch(err => res.json(err));\n});\n\n// @task: Get a question by id\n// @Access: Private\n// @desc: Enable logged in user to view the question by id\nrouter.get(\"/:question_id\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .select('_id question answers user')\n    .populate('user', ['userName'])\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      res.status(200).json({\n        status: '200',\n        questionFound\n      });\n    })\n    .catch(() => res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    }));\n});\n\n// @task: Edit (PUT) a question if there are no answers\n// @Access: Private(User)\n// @desc: Enable question owner to edit, should be logged in\nrouter.put(\"/:question_id\", auth, (req, res) => {\n  const params = req.params.question_id;\n  const updateQuestion = req.body.putQuestion;\n  const { question } = updateQuestion;\n  const { errors, isValid } = validateQuestionInput(updateQuestion);\n\n  // validate question update field input\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  Question\n    .findOne({ _id: params })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // check to confirm the update is granted to the user who asked the question\n      if (questionFound.user.toString() !== req.user._id) {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            noAuth: 'You don/t have that permission to edit the question'\n          }\n        });\n      }\n\n      // check if question already has answers\n      // ensure no updates if the question already has answers\n      if (questionFound.answers.length !== 0) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            answerFound: 'The question cannot be edited since it already has answers'\n          }\n        });\n      }\n\n      // check for changes in question\n      // ensure no updates if no changes detected\n      if (questionFound.question === question) {\n        return res.status(409).json({\n          status: '409',\n          errors: {\n            noChange: 'No changes in question detected'\n          }\n        });\n      }\n\n      Question\n        .findOneAndUpdate({ _id: params }, updateQuestion, { new: true })\n        .select('_id question answers user')\n        .then(updatedQuestion => {\n          res.status(200).json({\n            status: '200',\n            message: 'Question successfully updated',\n            updatedQuestion\n          })\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(() => res.status(404).json({\n      status: '404',\n      errors: {\n        notFound: 'Question by that id not found'\n      }\n    }));\n});\n\n// @task: Delete a question by id\n// @Access: Private(Admin, User)\n// @desc: Enable question owner and admin to delete question\nrouter.delete(\"/:question_id\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      // check if question exists\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id is either deleted or does not exists'\n          }\n        });\n      }\n\n      // check owner\n      if (questionFound.user.toString() === req.user._id || req.user.isAdmin === true) {\n        questionFound\n          .remove()\n          .then(() => res.status(200).json({\n            status: '200',\n            message: 'Question deleted'\n          }))\n          .catch(err => res.json(err));\n      } else {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            noAuth: 'You don/t have that permission to delete the question'\n          }\n        });\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id is either deleted or does not exists'\n        }\n      });\n    });\n});\n\n// @task: Answer a question\n// @Access: Private(Users)\n// @desc: Enable users to answers a question\nrouter.post(\"/:question_id/answer\", auth, (req, res) => {\n  const { addAnswer } = req.body;\n  const { answer } = addAnswer;\n  const { errors, isValid } = validateAnswerInput(addAnswer);\n\n  // check for empty fields\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n\n      // get user id and question id\n      const user = req.user._id;\n      const question = questionFound._id;\n\n      // set answer\n      const newAnswer = {\n        answer,\n        user,\n        question\n      };\n\n      // add the answer\n      questionFound\n        .answers\n        .unshift(newAnswer)\n\n      // save the answer\n      questionFound\n        .save()\n        .then(answered => {\n          return res.status(201).json({\n            status: '201',\n            _id: answered._id,\n            user: answered.user,\n            question: answered.question,\n            answers: answered.answers\n          })\n        })\n        .catch(err => res.json(err));\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Check an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to check one answer as accepted\nrouter.post(\"/:question_id/:answer_id/check\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // confirm only the question owner can check it as accepted\n      if (questionFound.user.toString() !== req.user._id) {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            notAuth: 'Only the question owner can check an answer'\n          }\n        });\n      }\n\n      // confirm no question is checked\n      for (let i = 0; i < questionFound.answers.length; i++) {\n        if (questionFound.answers[i].check) {\n          return res.json({\n            status: '400',\n            errors: {\n              alreadyChecked: 'You have already checked another answer'\n            }\n          });;\n        }\n      }\n\n      // filter the answers to obtain favorite answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer_id that matches the params\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      // check key and user id value\n      const check = {\n        check: req.user._id\n      }\n      // save user id\n      for (let i = 0; i < filteredAnswer.length; i++) {\n        filteredAnswer[i]\n          .set(check)\n        questionFound\n          .save()\n          .then(checkedQuestion => {\n            res.json({\n              status: '201',\n              message: 'Answer checked',\n              checkedQuestion\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Answer by that id not found'\n        }\n      });\n    })\n});\n\n// @task: Uncheck an answer\n// @Access: Private(Users - question owner)\n// @desc: Enable question owner to uncheck an answer\nrouter.post(\"/:question_id/:answer_id/uncheck\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // confirm only the question owner can uncheck an accepted answer\n      if (questionFound.user.toString() !== req.user._id) {\n        return res.status(401).json({\n          status: '401',\n          errors: {\n            noAuth: 'Only the question owner can uncheck an answer'\n          }\n        });\n      }\n\n      // check if answer exists\n      const confirmQuestionExists = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return if answer doesn't exist\n      if (confirmQuestionExists.length === 0) {\n        return  res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      // confirm if the answer has been checked before unchecking\n      for (let i = 0; confirmQuestionExists.length; i++) {\n        if (!confirmQuestionExists[i].check) {\n          return res.status(400).json({\n            status: '400',\n            errors: {\n              notChecked: 'The answer has not been checked'\n            }\n          });\n        }\n        // uncheck answer\n        confirmQuestionExists[i].check = null;\n        // save\n        questionFound\n          .save()\n          .then(answer => {\n            return res.status(200).json({\n              status: '200',\n              message: 'Answer unchecked',\n              answer\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to upvote an answer they like\nrouter.post(\"/:question_id/:answer_id/upvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n      // ensure a user upvotes once\n      for (let i = 0; filteredAnswer.length; i++) {\n        const filterUpvote = filteredAnswer[i]\n          .upvote\n          .filter(upvote => upvote.user.toString() === req.user._id);\n        if (filterUpvote.length !== 0) {\n          return res.status(400).json({\n            status: '404',\n            errors: {\n              alreadyUpvoted: 'You have already upvoted this answer'\n            }\n          });\n        }\n        // set upvote\n        const makeUpvote = {\n          user: req.user._id\n        };\n        // make upvote\n        filteredAnswer[i]\n          .upvote\n          .unshift(makeUpvote)\n        // save\n        questionFound\n          .save()\n          .then(answer => {\n            res.status(201).json({\n              status: '201',\n              message: 'You have upvoted the answer',\n              answer\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Un-upvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-upvote an answer they have upvoted\nrouter.post(\"/:question_id/:answer_id/unupvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      // un-upvote if and only if the answer has been upvoted\n      // ensure that only the upvoter can un-upvote\n      for (let i = 0; filteredAnswer.length; i++) {\n        const filterUpvote = filteredAnswer[i]\n          .upvote\n          .filter(upvote => upvote.user.toString() === req.user._id);\n\n        if (filterUpvote.length === 0) {\n          return res.status(400).json({\n            status: '400',\n            errors: {\n              notUpvoted: 'You have not upvoted the answer'\n            }\n          });\n        }\n\n        // create remove index\n        const removeIndex = filteredAnswer[i]\n          .upvote\n          .map(upvote => upvote.user.toString())\n          .indexOf(req.user._id);\n\n        // remove upvote\n        filteredAnswer[i]\n          .upvote\n          .splice(removeIndex, 1)\n\n        // save\n        questionFound\n          .save()\n          .then(unupvote => {\n            return res.status(200).json({\n              status: '200',\n              message: 'You have un upvoted the answer',\n              unupvote\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      };\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    })\n});\n\n// @task: Downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to downvote an answer they don't prefer\nrouter.post(\"/:question_id/:answer_id/downvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n\n      for (let i = 0; filteredAnswer.length; i++) {\n        // check if the user has already downvoted\n        const filterDownvote = filteredAnswer[i]\n          .downvote\n          .filter(downvote => downvote.user.toString() === req.user._id);\n\n        // return 400 bad request if the user has already downvoted\n        if (filterDownvote.length !== 0) {\n          return res.status(400).json({\n            status: '400',\n            errors: {\n              alreadyDownvoted: 'You have already downvoted'\n            }\n          });\n        }\n\n        // create downvote\n        const makeDownvote = {\n          user: req.user._id\n        };\n\n        // set downvote\n        filteredAnswer[i]\n          .downvote\n          .unshift(makeDownvote)\n\n        // save\n        questionFound\n          .save()\n          .then(downvote => {\n            res.status(201).json({\n              status: '201',\n              message: 'You have downvoted the answer',\n              downvote\n            })\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Un-downvote an answer\n// @Access: Private(Users)\n// @desc: Enable users to un-downvote an answer they have downvoted\nrouter.post(\"/:question_id/:answer_id/undownvote\", auth, (req, res) => {\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n      // ensure no un-downvoting for non downvoted answers\n      for (let i = 0; filteredAnswer.length; i++) {\n        console.log(filteredAnswer[i]);\n        // filter downvotes\n        const filterDownvote = filteredAnswer[i]\n          .downvote\n          .filter(downvote => downvote.user.toString() === req.user._id);\n\n        // return bad request if user has not downvoted\n        if (filterDownvote.length === 0) {\n          return res.status(400).json({\n            status: '400',\n            notDownvoted: 'You have not downvoted the answer'\n          });\n        }\n\n        // create remove index\n        const removeIndex = filteredAnswer[i]\n          .downvote\n          .map(undownvote => undownvote.user.toString())\n          .indexOf(req.user._id);\n\n        // un-downvote\n        filteredAnswer[i]\n          .downvote\n          .splice(removeIndex, 1)\n\n        // save\n        questionFound\n          .save()\n          .then(undownvoted => {\n            return res.status(200).json({\n              status: '200',\n              message: 'You have un downvoted the answer',\n              undownvoted\n            });\n          })\n          .catch(err => res.json(err));\n\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Comment on an answer\n// @Access: Private(Users)\n// @desc: Enable users to comment on an answer\nrouter.post(\"/:question_id/:answer_id/comment\", auth, (req, res) => {\n  const { addComment } = req.body;\n  const { errors, isValid } = validateCommentInput(addComment);\n\n  // return error if no comment field or if field is empty\n  if (!isValid) {\n    return res.status(400).json({\n      status: '400',\n      errors\n    });\n  }\n\n  Question\n    .findOne({ _id: req.params.question_id })\n    .then(questionFound => {\n      if (!questionFound) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Question by that id not found'\n          }\n        });\n      }\n      // continue\n      // find the answer\n      const filteredAnswer = questionFound\n        .answers\n        .filter(answer => answer._id.toString() === req.params.answer_id);\n\n      // return not found if no answer\n      if (filteredAnswer.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'Answer by that id not found'\n          }\n        });\n      }\n      // access array like object\n      for (let i = 0; filteredAnswer.length; i++) {\n        // get the comment\n        const { comment } = addComment;\n\n        // create comment object\n        const newComment = {\n          user: req.user._id,\n          answer: filteredAnswer[i]._id,\n          comment\n        };\n\n        // set the object\n        filteredAnswer[i]\n          .comments\n          .unshift(newComment);\n\n        questionFound\n          .save()\n          .then(commented => {\n            return res.status(201).json({\n              status: '201',\n              message: 'Answer commented',\n              commented\n            });\n          })\n          .catch(err => res.json(err));\n        break;\n      }\n    })\n    .catch(() => {\n      return res.status(404).json({\n        status: '404',\n        errors: {\n          notFound: 'Question by that id not found'\n        }\n      });\n    });\n});\n\n// @task: Question with most answers\n// @Access: Private(Users)\n// @desc: Enable users to view the question with most answers\nrouter.get(\"/questions/mostanswered\", auth, (req, res) => {\n  Question\n    .find()\n    .select('_id user question answers')\n    .populate('user', ['userName'])\n    .then(questionsFound => {\n      if (questionsFound.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'There are no questions available'\n          }\n        })\n      }\n      // continue\n      // map the answers and the number of answers in specifice questions\n      const mappedAnswers = questionsFound\n        .map(question => question.answers.length);\n\n      // check for questions with no answers\n      const noAnswers = questionsFound\n        .filter(question => question.answers.length === 0);\n\n      // return if no answers yet\n      if (mappedAnswers.length === noAnswers.length) {\n        return res.status(400).json({\n          status: '400',\n          errors: {\n            noAnswers: 'There are no answers yet for the questions'\n          }\n        });\n      }\n\n      // get the search index on question with the highest answers\n      const searchIndex = mappedAnswers\n        .indexOf(Math.max(...mappedAnswers));\n\n      // get the question with most answers\n      const mostAnswered = questionsFound[searchIndex];\n\n      // handle a case where there more than one question with equal -\n      // and highest answers\n      // map question answers\n      const moreThanOneQuestion = questionsFound\n        .map(question => question.answers);\n\n      // get array of questions with highest matched answers\n      const filterMoreThanOneQuestion = moreThanOneQuestion\n        .filter(answers => answers.length === Math.max(...mappedAnswers));\n\n      if (filterMoreThanOneQuestion.length <= 1) {\n        return res.status(200).json({\n          status: '200',\n          answersCount: mostAnswered.answers.length,\n          message: `The question from ${mostAnswered.user.userName} received most answers, (${mostAnswered.answers.length}) in total`,\n          mostAnswered\n        });\n      }\n      return res.status(200).json({\n        status: '200',\n        answersCount: mostAnswered.answers.length,\n        message: `The question from ${mostAnswered.user.userName} received most answers, (${mostAnswered.answers.length}) in total`,\n        note: 'There are other question with the same number of answers. However, this question was asked earlier.',\n        mostAnswered\n      });\n    })\n    .catch(err => res.json(err))\n});\n\n// @task: All user questions\n// @Access: Private(Users)\n// @desc: Enable users to view all their questions\nrouter.get(\"/questions/all\", auth, (req, res) => {\n  Question\n    .find({ user: req.user._id })\n    .select('_id user question answers')\n    .then(userQuestions => {\n      if (userQuestions.length === 0) {\n        return res.status(404).json({\n          status: '404',\n          errors: {\n            notFound: 'This user has no questions yet'\n          }\n        });\n      }\n      // continue\n      const noOfQuestions = userQuestions.length;\n\n      res.status(200).json({\n        status: '200',\n        questionsCount: noOfQuestions,\n        message: `You have ${noOfQuestions} questions`,\n        userQuestions\n      });\n    })\n    .catch(err => res.json(err));\n});\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575704660291
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/middlewares/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/middlewares/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/middlewares/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/middlewares/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/middlewares",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar auth = function auth(req, res, next) {\n  var token = req.header('Authorization');\n\n  if (!token) {\n    return res.status(401).json({\n      status: '401',\n      errors: {\n        message: 'Access denied. No token provided'\n      }\n    });\n  }\n\n  try {\n    var decoded = _jsonwebtoken[\"default\"].verify(token, process.env.SECRET_KEY);\n\n    req.user = decoded;\n    next();\n  } catch (e) {\n    res.status(400).json({\n      status: '400',\n      errors: e\n    });\n  }\n\n  ;\n};\n\nvar _default = auth;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiYXV0aCIsInJlcSIsInJlcyIsIm5leHQiLCJ0b2tlbiIsImhlYWRlciIsInN0YXR1cyIsImpzb24iLCJlcnJvcnMiLCJtZXNzYWdlIiwiZGVjb2RlZCIsImp3dCIsInZlcmlmeSIsInByb2Nlc3MiLCJlbnYiLCJTRUNSRVRfS0VZIiwidXNlciIsImUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQy9CLE1BQU1DLEtBQUssR0FBR0gsR0FBRyxDQUFDSSxNQUFKLENBQVcsZUFBWCxDQUFkOztBQUNBLE1BQUksQ0FBQ0QsS0FBTCxFQUFZO0FBQ1YsV0FBT0YsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELE1BQUFBLE1BQU0sRUFBRSxLQURrQjtBQUUxQkUsTUFBQUEsTUFBTSxFQUFFO0FBQUVDLFFBQUFBLE9BQU8sRUFBRTtBQUFYO0FBRmtCLEtBQXJCLENBQVA7QUFJRDs7QUFDRCxNQUFJO0FBQ0YsUUFBTUMsT0FBTyxHQUFHQyx5QkFBSUMsTUFBSixDQUFXUixLQUFYLEVBQWtCUyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFBOUIsQ0FBaEI7O0FBQ0FkLElBQUFBLEdBQUcsQ0FBQ2UsSUFBSixHQUFXTixPQUFYO0FBQ0FQLElBQUFBLElBQUk7QUFDTCxHQUpELENBSUUsT0FBT2MsQ0FBUCxFQUFVO0FBQ1ZmLElBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CRCxNQUFBQSxNQUFNLEVBQUUsS0FEVztBQUVuQkUsTUFBQUEsTUFBTSxFQUFFUztBQUZXLEtBQXJCO0FBSUQ7O0FBQUE7QUFDRixDQWxCRDs7ZUFvQmVqQixJIiwic291cmNlUm9vdCI6Ii9ob21lL2JsdWUvRGVza3RvcC9Qcm9ncmFtbWluZy9KYXZhc2NyaXB0L0RldmVsb3Blci9kZXZlbG9wZXJBcGkvYXBpL21pZGRsZXdhcmVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tIFwianNvbndlYnRva2VuXCI7XG5cbmNvbnN0IGF1dGggPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyKCdBdXRob3JpemF0aW9uJyk7XG4gIGlmICghdG9rZW4pIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgc3RhdHVzOiAnNDAxJyxcbiAgICAgIGVycm9yczogeyBtZXNzYWdlOiAnQWNjZXNzIGRlbmllZC4gTm8gdG9rZW4gcHJvdmlkZWQnIH1cbiAgICB9KTtcbiAgfVxuICB0cnkge1xuICAgIGNvbnN0IGRlY29kZWQgPSBqd3QudmVyaWZ5KHRva2VuLCBwcm9jZXNzLmVudi5TRUNSRVRfS0VZKTtcbiAgICByZXEudXNlciA9IGRlY29kZWQ7XG4gICAgbmV4dCgpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgc3RhdHVzOiAnNDAwJyxcbiAgICAgIGVycm9yczogZVxuICAgIH0pO1xuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgYXV0aDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "auth",
        "req",
        "res",
        "next",
        "token",
        "header",
        "status",
        "json",
        "errors",
        "message",
        "decoded",
        "jwt",
        "verify",
        "process",
        "env",
        "SECRET_KEY",
        "user",
        "e"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,eAAX,CAAd;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,KADkB;AAE1BE,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAFkB,KAArB,CAAP;AAID;;AACD,MAAI;AACF,QAAMC,OAAO,GAAGC,yBAAIC,MAAJ,CAAWR,KAAX,EAAkBS,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAhB;;AACAd,IAAAA,GAAG,CAACe,IAAJ,GAAWN,OAAX;AACAP,IAAAA,IAAI;AACL,GAJD,CAIE,OAAOc,CAAP,EAAU;AACVf,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,KADW;AAEnBE,MAAAA,MAAM,EAAES;AAFW,KAArB;AAID;;AAAA;AACF,CAlBD;;eAoBejB,I",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/middlewares",
      "sourcesContent": [
        "import jwt from \"jsonwebtoken\";\n\nconst auth = (req, res, next) => {\n  const token = req.header('Authorization');\n  if (!token) {\n    return res.status(401).json({\n      status: '401',\n      errors: { message: 'Access denied. No token provided' }\n    });\n  }\n  try {\n    const decoded = jwt.verify(token, process.env.SECRET_KEY);\n    req.user = decoded;\n    next();\n  } catch (e) {\n    res.status(400).json({\n      status: '400',\n      errors: e\n    });\n  };\n};\n\nexport default auth;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571914036469
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models/Question.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models/Question.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models/Question.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models/Question.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models",
        "sourceFileName": "Question.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar questionSchema = new Schema({\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  question: {\n    type: String,\n    required: true\n  },\n  answers: [{\n    user: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    question: {\n      type: Schema.Types.ObjectId,\n      ref: 'Question'\n    },\n    answer: {\n      type: String,\n      required: true\n    },\n    comments: [{\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      },\n      answer: {\n        type: Schema.Types.ObjectId,\n        ref: 'Question'\n      },\n      comment: {\n        type: String,\n        required: true\n      }\n    }],\n    check: {\n      type: Schema.Types.ObjectId,\n      ref: 'User',\n      max: 1\n    },\n    upvote: [{\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      }\n    }],\n    downvote: [{\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      }\n    }],\n    time: {\n      type: Date,\n      \"default\": Date.now\n    }\n  }]\n});\n\nvar _default = _mongoose[\"default\"].model('Question', questionSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlF1ZXN0aW9uLmpzIl0sIm5hbWVzIjpbIlNjaGVtYSIsIm1vbmdvb3NlIiwicXVlc3Rpb25TY2hlbWEiLCJ1c2VyIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJxdWVzdGlvbiIsIlN0cmluZyIsInJlcXVpcmVkIiwiYW5zd2VycyIsImFuc3dlciIsImNvbW1lbnRzIiwiY29tbWVudCIsImNoZWNrIiwibWF4IiwidXB2b3RlIiwiZG93bnZvdGUiLCJ0aW1lIiwiRGF0ZSIsIm5vdyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7SUFFUUEsTSxHQUFXQyxvQixDQUFYRCxNO0FBRVIsSUFBTUUsY0FBYyxHQUFHLElBQUlGLE1BQUosQ0FBVztBQUNoQ0csRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUosTUFBTSxDQUFDSyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQsR0FEMEI7QUFLaENDLEVBQUFBLFFBQVEsRUFBRTtBQUNSSixJQUFBQSxJQUFJLEVBQUVLLE1BREU7QUFFUkMsSUFBQUEsUUFBUSxFQUFFO0FBRkYsR0FMc0I7QUFTaENDLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VSLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURmO0FBRUpDLE1BQUFBLEdBQUcsRUFBRTtBQUZELEtBRFI7QUFLRUMsSUFBQUEsUUFBUSxFQUFFO0FBQ1JKLE1BQUFBLElBQUksRUFBRUosTUFBTSxDQUFDSyxLQUFQLENBQWFDLFFBRFg7QUFFUkMsTUFBQUEsR0FBRyxFQUFFO0FBRkcsS0FMWjtBQVNFSyxJQUFBQSxNQUFNLEVBQUU7QUFDTlIsTUFBQUEsSUFBSSxFQUFFSyxNQURBO0FBRU5DLE1BQUFBLFFBQVEsRUFBRTtBQUZKLEtBVFY7QUFhRUcsSUFBQUEsUUFBUSxFQUFFLENBQ1I7QUFDRVYsTUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFFBQUFBLElBQUksRUFBRUosTUFBTSxDQUFDSyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsUUFBQUEsR0FBRyxFQUFFO0FBRkQsT0FEUjtBQUtFSyxNQUFBQSxNQUFNLEVBQUU7QUFDTlIsUUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxRQUFBQSxHQUFHLEVBQUU7QUFGQyxPQUxWO0FBU0VPLE1BQUFBLE9BQU8sRUFBRTtBQUNQVixRQUFBQSxJQUFJLEVBQUVLLE1BREM7QUFFUEMsUUFBQUEsUUFBUSxFQUFFO0FBRkg7QUFUWCxLQURRLENBYlo7QUE2QkVLLElBQUFBLEtBQUssRUFBRTtBQUNMWCxNQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURkO0FBRUxDLE1BQUFBLEdBQUcsRUFBRSxNQUZBO0FBR0xTLE1BQUFBLEdBQUcsRUFBRTtBQUhBLEtBN0JUO0FBa0NFQyxJQUFBQSxNQUFNLEVBQUUsQ0FDTjtBQUNFZCxNQUFBQSxJQUFJLEVBQUU7QUFDSkMsUUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxRQUFBQSxHQUFHLEVBQUU7QUFGRDtBQURSLEtBRE0sQ0FsQ1Y7QUEwQ0VXLElBQUFBLFFBQVEsRUFBRSxDQUNSO0FBQ0VmLE1BQUFBLElBQUksRUFBRTtBQUNKQyxRQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURmO0FBRUpDLFFBQUFBLEdBQUcsRUFBRTtBQUZEO0FBRFIsS0FEUSxDQTFDWjtBQWtERVksSUFBQUEsSUFBSSxFQUFFO0FBQ0pmLE1BQUFBLElBQUksRUFBRWdCLElBREY7QUFFSixpQkFBU0EsSUFBSSxDQUFDQztBQUZWO0FBbERSLEdBRE87QUFUdUIsQ0FBWCxDQUF2Qjs7ZUFxRWVwQixxQkFBU3FCLEtBQVQsQ0FBZSxVQUFmLEVBQTJCcEIsY0FBM0IsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ibHVlL0Rlc2t0b3AvUHJvZ3JhbW1pbmcvSmF2YXNjcmlwdC9EZXZlbG9wZXIvZGV2ZWxvcGVyQXBpL2FwaS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XG5cbmNvbnN0IHsgU2NoZW1hIH0gPSBtb25nb29zZTtcblxuY29uc3QgcXVlc3Rpb25TY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgdXNlcjoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdVc2VyJ1xuICB9LFxuICBxdWVzdGlvbjoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBhbnN3ZXJzOiBbXG4gICAge1xuICAgICAgdXNlcjoge1xuICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlZjogJ1VzZXInXG4gICAgICB9LFxuICAgICAgcXVlc3Rpb246IHtcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdRdWVzdGlvbidcbiAgICAgIH0sXG4gICAgICBhbnN3ZXI6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGNvbW1lbnRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgICAgICByZWY6ICdVc2VyJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgYW5zd2VyOiB7XG4gICAgICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgICAgICByZWY6ICdRdWVzdGlvbidcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgY2hlY2s6IHtcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdVc2VyJyxcbiAgICAgICAgbWF4OiAxXG4gICAgICB9LFxuICAgICAgdXB2b3RlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgICAgICByZWY6ICdVc2VyJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGRvd252b3RlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgICAgICByZWY6ICdVc2VyJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIHRpbWU6IHtcbiAgICAgICAgdHlwZTogRGF0ZSxcbiAgICAgICAgZGVmYXVsdDogRGF0ZS5ub3dcbiAgICAgIH1cbiAgICB9XG4gIF1cbn1cbik7XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdRdWVzdGlvbicsIHF1ZXN0aW9uU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Question.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "questionSchema",
        "user",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "question",
        "String",
        "required",
        "answers",
        "answer",
        "comments",
        "comment",
        "check",
        "max",
        "upvote",
        "downvote",
        "time",
        "Date",
        "now",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;IAEQA,M,GAAWC,oB,CAAXD,M;AAER,IAAME,cAAc,GAAG,IAAIF,MAAJ,CAAW;AAChCG,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD,GAD0B;AAKhCC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,IAAI,EAAEK,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GALsB;AAShCC,EAAAA,OAAO,EAAE,CACP;AACER,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,MAAAA,GAAG,EAAE;AAFD,KADR;AAKEC,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADX;AAERC,MAAAA,GAAG,EAAE;AAFG,KALZ;AASEK,IAAAA,MAAM,EAAE;AACNR,MAAAA,IAAI,EAAEK,MADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KATV;AAaEG,IAAAA,QAAQ,EAAE,CACR;AACEV,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,QAAAA,GAAG,EAAE;AAFD,OADR;AAKEK,MAAAA,MAAM,EAAE;AACNR,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADb;AAENC,QAAAA,GAAG,EAAE;AAFC,OALV;AASEO,MAAAA,OAAO,EAAE;AACPV,QAAAA,IAAI,EAAEK,MADC;AAEPC,QAAAA,QAAQ,EAAE;AAFH;AATX,KADQ,CAbZ;AA6BEK,IAAAA,KAAK,EAAE;AACLX,MAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADd;AAELC,MAAAA,GAAG,EAAE,MAFA;AAGLS,MAAAA,GAAG,EAAE;AAHA,KA7BT;AAkCEC,IAAAA,MAAM,EAAE,CACN;AACEd,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,QAAAA,GAAG,EAAE;AAFD;AADR,KADM,CAlCV;AA0CEW,IAAAA,QAAQ,EAAE,CACR;AACEf,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,QAAAA,GAAG,EAAE;AAFD;AADR,KADQ,CA1CZ;AAkDEY,IAAAA,IAAI,EAAE;AACJf,MAAAA,IAAI,EAAEgB,IADF;AAEJ,iBAASA,IAAI,CAACC;AAFV;AAlDR,GADO;AATuB,CAAX,CAAvB;;eAqEepB,qBAASqB,KAAT,CAAe,UAAf,EAA2BpB,cAA3B,C",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/models",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\n\nconst { Schema } = mongoose;\n\nconst questionSchema = new Schema({\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  question: {\n    type: String,\n    required: true\n  },\n  answers: [\n    {\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      },\n      question: {\n        type: Schema.Types.ObjectId,\n        ref: 'Question'\n      },\n      answer: {\n        type: String,\n        required: true\n      },\n      comments: [\n        {\n          user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n          },\n          answer: {\n            type: Schema.Types.ObjectId,\n            ref: 'Question'\n          },\n          comment: {\n            type: String,\n            required: true\n          }\n        }\n      ],\n      check: {\n        type: Schema.Types.ObjectId,\n        ref: 'User',\n        max: 1\n      },\n      upvote: [\n        {\n          user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n          }\n        }\n      ],\n      downvote: [\n        {\n          user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n          }\n        }\n      ],\n      time: {\n        type: Date,\n        default: Date.now\n      }\n    }\n  ]\n}\n);\n\nexport default mongoose.model('Question', questionSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572101124354
  },
  "{\"sourceRoot\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"filename\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/questionInput.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/blue/Desktop/Programming/Javascript/Developer/developerApi\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/questionInput.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/questionInput.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations/questionInput.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations",
        "sourceFileName": "questionInput.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateCommentInput = exports.validateAnswerInput = exports.validateQuestionInput = void 0;\n\nvar _validator = _interopRequireDefault(require(\"validator\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"./isEmpty\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// imports\n// local imports\nvar validateQuestionInput = function validateQuestionInput(data) {\n  var errors = {};\n  data.question = !(0, _isEmpty[\"default\"])(data.question) ? data.question : '';\n\n  if (!_validator[\"default\"].isLength(data.question, {\n    min: 3,\n    max: 255\n  })) {\n    errors.question = \"The minimum character expected is 3 while maximum is 255\";\n  }\n\n  if (_validator[\"default\"].isEmpty(data.question)) {\n    errors.question = 'Question field is required';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateQuestionInput = validateQuestionInput;\n\nvar validateAnswerInput = function validateAnswerInput(data) {\n  var errors = {};\n  data.answer = !(0, _isEmpty[\"default\"])(data.answer) ? data.answer : '';\n\n  if (_validator[\"default\"].isEmpty(data.answer)) {\n    errors.answer = 'Answer field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.answer, {\n    min: 5,\n    max: 400\n  })) {\n    errors.answer = 'The minimum character expected is 5 while maximum is 400';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateAnswerInput = validateAnswerInput;\n\nvar validateCommentInput = function validateCommentInput(data) {\n  var errors = {};\n  data.comment = !(0, _isEmpty[\"default\"])(data.comment) ? data.comment : '';\n\n  if (_validator[\"default\"].isEmpty(data.comment)) {\n    errors.comment = 'Comment field is required';\n  }\n\n  if (!_validator[\"default\"].isLength(data.comment, {\n    max: 100\n  })) {\n    errors.comment = 'The minimum character expected is 1 while maximum is 100';\n  }\n\n  return {\n    errors: errors,\n    isValid: (0, _isEmpty[\"default\"])(errors)\n  };\n};\n\nexports.validateCommentInput = validateCommentInput;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9uSW5wdXQuanMiXSwibmFtZXMiOlsidmFsaWRhdGVRdWVzdGlvbklucHV0IiwiZGF0YSIsImVycm9ycyIsInF1ZXN0aW9uIiwiVmFsaWRhdG9yIiwiaXNMZW5ndGgiLCJtaW4iLCJtYXgiLCJpc0VtcHR5IiwiaXNWYWxpZCIsInZhbGlkYXRlQW5zd2VySW5wdXQiLCJhbnN3ZXIiLCJ2YWxpZGF0ZUNvbW1lbnRJbnB1dCIsImNvbW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFHQTs7OztBQUpBO0FBR0E7QUFHQSxJQUFNQSxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXdCLENBQUFDLElBQUksRUFBSTtBQUVwQyxNQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUVBRCxFQUFBQSxJQUFJLENBQUNFLFFBQUwsR0FBZ0IsQ0FBQyx5QkFBUUYsSUFBSSxDQUFDRSxRQUFiLENBQUQsR0FBMEJGLElBQUksQ0FBQ0UsUUFBL0IsR0FBMEMsRUFBMUQ7O0FBRUEsTUFBSSxDQUFDQyxzQkFBVUMsUUFBVixDQUFtQkosSUFBSSxDQUFDRSxRQUF4QixFQUFrQztBQUFFRyxJQUFBQSxHQUFHLEVBQUUsQ0FBUDtBQUFVQyxJQUFBQSxHQUFHLEVBQUU7QUFBZixHQUFsQyxDQUFMLEVBQThEO0FBQzVETCxJQUFBQSxNQUFNLENBQUNDLFFBQVAsR0FBa0IsMERBQWxCO0FBQ0Q7O0FBRUQsTUFBSUMsc0JBQVVJLE9BQVYsQ0FBa0JQLElBQUksQ0FBQ0UsUUFBdkIsQ0FBSixFQUFzQztBQUNwQ0QsSUFBQUEsTUFBTSxDQUFDQyxRQUFQLEdBQWtCLDRCQUFsQjtBQUNEOztBQUVELFNBQU87QUFDTEQsSUFBQUEsTUFBTSxFQUFOQSxNQURLO0FBRUxPLElBQUFBLE9BQU8sRUFBRSx5QkFBUVAsTUFBUjtBQUZKLEdBQVA7QUFJRCxDQWxCRDs7OztBQW9CQSxJQUFNUSxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCLENBQUFULElBQUksRUFBSTtBQUVsQyxNQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUVBRCxFQUFBQSxJQUFJLENBQUNVLE1BQUwsR0FBYyxDQUFDLHlCQUFRVixJQUFJLENBQUNVLE1BQWIsQ0FBRCxHQUF3QlYsSUFBSSxDQUFDVSxNQUE3QixHQUFzQyxFQUFwRDs7QUFFQSxNQUFJUCxzQkFBVUksT0FBVixDQUFrQlAsSUFBSSxDQUFDVSxNQUF2QixDQUFKLEVBQW9DO0FBQ2xDVCxJQUFBQSxNQUFNLENBQUNTLE1BQVAsR0FBZ0IsMEJBQWhCO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDUCxzQkFBVUMsUUFBVixDQUFtQkosSUFBSSxDQUFDVSxNQUF4QixFQUFnQztBQUFFTCxJQUFBQSxHQUFHLEVBQUUsQ0FBUDtBQUFVQyxJQUFBQSxHQUFHLEVBQUU7QUFBZixHQUFoQyxDQUFMLEVBQTREO0FBQzFETCxJQUFBQSxNQUFNLENBQUNTLE1BQVAsR0FBZ0IsMERBQWhCO0FBQ0Q7O0FBRUQsU0FBTztBQUNMVCxJQUFBQSxNQUFNLEVBQU5BLE1BREs7QUFFTE8sSUFBQUEsT0FBTyxFQUFFLHlCQUFRUCxNQUFSO0FBRkosR0FBUDtBQUlELENBbEJEOzs7O0FBb0JBLElBQU1VLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBdUIsQ0FBQVgsSUFBSSxFQUFJO0FBRW5DLE1BQU1DLE1BQU0sR0FBRyxFQUFmO0FBRUFELEVBQUFBLElBQUksQ0FBQ1ksT0FBTCxHQUFlLENBQUMseUJBQVFaLElBQUksQ0FBQ1ksT0FBYixDQUFELEdBQXlCWixJQUFJLENBQUNZLE9BQTlCLEdBQXdDLEVBQXZEOztBQUVBLE1BQUlULHNCQUFVSSxPQUFWLENBQWtCUCxJQUFJLENBQUNZLE9BQXZCLENBQUosRUFBcUM7QUFDbkNYLElBQUFBLE1BQU0sQ0FBQ1csT0FBUCxHQUFpQiwyQkFBakI7QUFDRDs7QUFFRCxNQUFJLENBQUNULHNCQUFVQyxRQUFWLENBQW1CSixJQUFJLENBQUNZLE9BQXhCLEVBQWlDO0FBQUVOLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQWpDLENBQUwsRUFBcUQ7QUFDbkRMLElBQUFBLE1BQU0sQ0FBQ1csT0FBUCxHQUFpQiwwREFBakI7QUFDRDs7QUFFRCxTQUFPO0FBQ0xYLElBQUFBLE1BQU0sRUFBTkEsTUFESztBQUVMTyxJQUFBQSxPQUFPLEVBQUUseUJBQVFQLE1BQVI7QUFGSixHQUFQO0FBS0QsQ0FuQkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYmx1ZS9EZXNrdG9wL1Byb2dyYW1taW5nL0phdmFzY3JpcHQvRGV2ZWxvcGVyL2RldmVsb3BlckFwaS9hcGkvdmFsaWRhdGlvbnMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnRzXG5pbXBvcnQgVmFsaWRhdG9yIGZyb20gXCJ2YWxpZGF0b3JcIjtcblxuLy8gbG9jYWwgaW1wb3J0c1xuaW1wb3J0IGlzRW1wdHkgZnJvbSBcIi4vaXNFbXB0eVwiO1xuXG5jb25zdCB2YWxpZGF0ZVF1ZXN0aW9uSW5wdXQgPSBkYXRhID0+IHtcblxuICBjb25zdCBlcnJvcnMgPSB7fTtcblxuICBkYXRhLnF1ZXN0aW9uID0gIWlzRW1wdHkoZGF0YS5xdWVzdGlvbikgPyBkYXRhLnF1ZXN0aW9uIDogJyc7XG5cbiAgaWYgKCFWYWxpZGF0b3IuaXNMZW5ndGgoZGF0YS5xdWVzdGlvbiwgeyBtaW46IDMsIG1heDogMjU1IH0pKSB7XG4gICAgZXJyb3JzLnF1ZXN0aW9uID0gXCJUaGUgbWluaW11bSBjaGFyYWN0ZXIgZXhwZWN0ZWQgaXMgMyB3aGlsZSBtYXhpbXVtIGlzIDI1NVwiXG4gIH1cblxuICBpZiAoVmFsaWRhdG9yLmlzRW1wdHkoZGF0YS5xdWVzdGlvbikpIHtcbiAgICBlcnJvcnMucXVlc3Rpb24gPSAnUXVlc3Rpb24gZmllbGQgaXMgcmVxdWlyZWQnO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBlcnJvcnMsXG4gICAgaXNWYWxpZDogaXNFbXB0eShlcnJvcnMpXG4gIH07XG59O1xuXG5jb25zdCB2YWxpZGF0ZUFuc3dlcklucHV0ID0gZGF0YSA9PiB7XG5cbiAgY29uc3QgZXJyb3JzID0ge307XG5cbiAgZGF0YS5hbnN3ZXIgPSAhaXNFbXB0eShkYXRhLmFuc3dlcikgPyBkYXRhLmFuc3dlciA6ICcnO1xuXG4gIGlmIChWYWxpZGF0b3IuaXNFbXB0eShkYXRhLmFuc3dlcikpIHtcbiAgICBlcnJvcnMuYW5zd2VyID0gJ0Fuc3dlciBmaWVsZCBpcyByZXF1aXJlZCc7XG4gIH1cblxuICBpZiAoIVZhbGlkYXRvci5pc0xlbmd0aChkYXRhLmFuc3dlciwgeyBtaW46IDUsIG1heDogNDAwIH0pKSB7XG4gICAgZXJyb3JzLmFuc3dlciA9ICdUaGUgbWluaW11bSBjaGFyYWN0ZXIgZXhwZWN0ZWQgaXMgNSB3aGlsZSBtYXhpbXVtIGlzIDQwMCc7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGVycm9ycyxcbiAgICBpc1ZhbGlkOiBpc0VtcHR5KGVycm9ycylcbiAgfTtcbn1cblxuY29uc3QgdmFsaWRhdGVDb21tZW50SW5wdXQgPSBkYXRhID0+IHtcblxuICBjb25zdCBlcnJvcnMgPSB7fTtcblxuICBkYXRhLmNvbW1lbnQgPSAhaXNFbXB0eShkYXRhLmNvbW1lbnQpID8gZGF0YS5jb21tZW50IDogJyc7XG5cbiAgaWYgKFZhbGlkYXRvci5pc0VtcHR5KGRhdGEuY29tbWVudCkpIHtcbiAgICBlcnJvcnMuY29tbWVudCA9ICdDb21tZW50IGZpZWxkIGlzIHJlcXVpcmVkJztcbiAgfVxuXG4gIGlmICghVmFsaWRhdG9yLmlzTGVuZ3RoKGRhdGEuY29tbWVudCwgeyBtYXg6IDEwMCB9KSkge1xuICAgIGVycm9ycy5jb21tZW50ID0gJ1RoZSBtaW5pbXVtIGNoYXJhY3RlciBleHBlY3RlZCBpcyAxIHdoaWxlIG1heGltdW0gaXMgMTAwJztcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZXJyb3JzLFxuICAgIGlzVmFsaWQ6IGlzRW1wdHkoZXJyb3JzKVxuICB9O1xuXG59O1xuXG5leHBvcnQge1xuICB2YWxpZGF0ZVF1ZXN0aW9uSW5wdXQsXG4gIHZhbGlkYXRlQW5zd2VySW5wdXQsXG4gIHZhbGlkYXRlQ29tbWVudElucHV0XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "questionInput.js"
      ],
      "names": [
        "validateQuestionInput",
        "data",
        "errors",
        "question",
        "Validator",
        "isLength",
        "min",
        "max",
        "isEmpty",
        "isValid",
        "validateAnswerInput",
        "answer",
        "validateCommentInput",
        "comment"
      ],
      "mappings": ";;;;;;;AACA;;AAGA;;;;AAJA;AAGA;AAGA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,IAAI,EAAI;AAEpC,MAAMC,MAAM,GAAG,EAAf;AAEAD,EAAAA,IAAI,CAACE,QAAL,GAAgB,CAAC,yBAAQF,IAAI,CAACE,QAAb,CAAD,GAA0BF,IAAI,CAACE,QAA/B,GAA0C,EAA1D;;AAEA,MAAI,CAACC,sBAAUC,QAAV,CAAmBJ,IAAI,CAACE,QAAxB,EAAkC;AAAEG,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAlC,CAAL,EAA8D;AAC5DL,IAAAA,MAAM,CAACC,QAAP,GAAkB,0DAAlB;AACD;;AAED,MAAIC,sBAAUI,OAAV,CAAkBP,IAAI,CAACE,QAAvB,CAAJ,EAAsC;AACpCD,IAAAA,MAAM,CAACC,QAAP,GAAkB,4BAAlB;AACD;;AAED,SAAO;AACLD,IAAAA,MAAM,EAANA,MADK;AAELO,IAAAA,OAAO,EAAE,yBAAQP,MAAR;AAFJ,GAAP;AAID,CAlBD;;;;AAoBA,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAT,IAAI,EAAI;AAElC,MAAMC,MAAM,GAAG,EAAf;AAEAD,EAAAA,IAAI,CAACU,MAAL,GAAc,CAAC,yBAAQV,IAAI,CAACU,MAAb,CAAD,GAAwBV,IAAI,CAACU,MAA7B,GAAsC,EAApD;;AAEA,MAAIP,sBAAUI,OAAV,CAAkBP,IAAI,CAACU,MAAvB,CAAJ,EAAoC;AAClCT,IAAAA,MAAM,CAACS,MAAP,GAAgB,0BAAhB;AACD;;AAED,MAAI,CAACP,sBAAUC,QAAV,CAAmBJ,IAAI,CAACU,MAAxB,EAAgC;AAAEL,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAhC,CAAL,EAA4D;AAC1DL,IAAAA,MAAM,CAACS,MAAP,GAAgB,0DAAhB;AACD;;AAED,SAAO;AACLT,IAAAA,MAAM,EAANA,MADK;AAELO,IAAAA,OAAO,EAAE,yBAAQP,MAAR;AAFJ,GAAP;AAID,CAlBD;;;;AAoBA,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAX,IAAI,EAAI;AAEnC,MAAMC,MAAM,GAAG,EAAf;AAEAD,EAAAA,IAAI,CAACY,OAAL,GAAe,CAAC,yBAAQZ,IAAI,CAACY,OAAb,CAAD,GAAyBZ,IAAI,CAACY,OAA9B,GAAwC,EAAvD;;AAEA,MAAIT,sBAAUI,OAAV,CAAkBP,IAAI,CAACY,OAAvB,CAAJ,EAAqC;AACnCX,IAAAA,MAAM,CAACW,OAAP,GAAiB,2BAAjB;AACD;;AAED,MAAI,CAACT,sBAAUC,QAAV,CAAmBJ,IAAI,CAACY,OAAxB,EAAiC;AAAEN,IAAAA,GAAG,EAAE;AAAP,GAAjC,CAAL,EAAqD;AACnDL,IAAAA,MAAM,CAACW,OAAP,GAAiB,0DAAjB;AACD;;AAED,SAAO;AACLX,IAAAA,MAAM,EAANA,MADK;AAELO,IAAAA,OAAO,EAAE,yBAAQP,MAAR;AAFJ,GAAP;AAKD,CAnBD",
      "sourceRoot": "/home/blue/Desktop/Programming/Javascript/Developer/developerApi/api/validations",
      "sourcesContent": [
        "// imports\nimport Validator from \"validator\";\n\n// local imports\nimport isEmpty from \"./isEmpty\";\n\nconst validateQuestionInput = data => {\n\n  const errors = {};\n\n  data.question = !isEmpty(data.question) ? data.question : '';\n\n  if (!Validator.isLength(data.question, { min: 3, max: 255 })) {\n    errors.question = \"The minimum character expected is 3 while maximum is 255\"\n  }\n\n  if (Validator.isEmpty(data.question)) {\n    errors.question = 'Question field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\nconst validateAnswerInput = data => {\n\n  const errors = {};\n\n  data.answer = !isEmpty(data.answer) ? data.answer : '';\n\n  if (Validator.isEmpty(data.answer)) {\n    errors.answer = 'Answer field is required';\n  }\n\n  if (!Validator.isLength(data.answer, { min: 5, max: 400 })) {\n    errors.answer = 'The minimum character expected is 5 while maximum is 400';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n}\n\nconst validateCommentInput = data => {\n\n  const errors = {};\n\n  data.comment = !isEmpty(data.comment) ? data.comment : '';\n\n  if (Validator.isEmpty(data.comment)) {\n    errors.comment = 'Comment field is required';\n  }\n\n  if (!Validator.isLength(data.comment, { max: 100 })) {\n    errors.comment = 'The minimum character expected is 1 while maximum is 100';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n\n};\n\nexport {\n  validateQuestionInput,\n  validateAnswerInput,\n  validateCommentInput\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572153031816
  }
}